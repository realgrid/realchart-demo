{
  "xAxis": {
    "_content": "## xAxis\n차트에서 축을 명식적으로 지정하지 않으면, 첫번째 시리즈에 합당한 축이 기본 생성된다.\n## Properties\n\n### marginFar: number\n차트 경계나 뒤쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### marginNear: number\nPlot 영역이나 앞쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### maxValue: number\n명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다.  \n\n### minValue: number\n명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다.  \n\n### position: AxisPosition\n표시 위치.  \n`default: AxisPosition.NORMAL`  \n\n### reversed: boolean\ntrue면 반대 방향으로 point 위치들이 지정된다.  \n`default: false`  \n## xAxis.linear\n선형 연속 축.\n값 사아의 비율과 축 길이 비율이 항상 동일한 축.\n## xAxis.log\n이 축에 연결된 시리즈들의 point y값을 log10으로 계산된 위치에 표시한다.\ny축으로만 사용될 수 있다.\n## xAxis.time\ntimeUnit(기본값 1)밀리초가 1에 해당한다.\n",
    "linear": {
      "_content": "## xAxis.linear\n선형 연속 축.\n값 사아의 비율과 축 길이 비율이 항상 동일한 축.\n## Properties\n\n### baseValue: number\n\n### marginFar: number\n차트 경계나 뒤쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### marginNear: number\nPlot 영역이나 앞쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### maxPadding: number\n마지막 tick 뒤쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n endFit 이  AxitFit.TICK 일 때,\ndata point의 최대값과 마지막 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMax 가 지정되거나,  maxValue 가 계산된 최대값보다 큰 경우에도 이 속성은 무시된다.  \n\n### maxValue: number\n명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다.  \n\n### minPadding: number\n첫번째 tick 앞쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n startFit 이  AxitFit.TICK 일 때,\ndata point의 최소값과 첫번째 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMin 가 지정되거나,  minValue 이 계산된 최소값보다 작은 경우에도 이 속성은 무시된다.  \n\n### minValue: number\n명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다.  \n\n### nullable: boolean\ndata point의 이 축 값이 NaN일 때도 point를 표시할 지 여부.  \n`default: true`  \n\n### padding: number\nminPadding ,  maxPadding 이 설정되지 않았을 때 적용되는 기본값이다.  \n`default: 0.05`  \n\n### position: AxisPosition\n표시 위치.  \n`default: AxisPosition.NORMAL`  \n\n### reversed: boolean\ntrue면 반대 방향으로 point 위치들이 지정된다.  \n`default: false`  \n\n### strictMax: number\n무조건 적용되는 최대값.\n즉, 이 값보다 큰 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nmaxPadding도 적용되지 않는다.  \n\n### strictMin: number\n무조건 적용되는 최소값.\n즉, 이 값보다 작은 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nminPadding도 적용되지 않는다.  \n\n### tickBase: string | number\ntick 개수를 맞춰야 하는 대상 axis.\nbase의 strictMin, strictMax가 설정되지 않아야 한다.\nbase의 startFit, endFilt의  TICK 으로 설정되어야 한다.  \n"
    },
    "log": {
      "_content": "## xAxis.log\n이 축에 연결된 시리즈들의 point y값을 log10으로 계산된 위치에 표시한다.\ny축으로만 사용될 수 있다.\n## Properties\n\n### baseValue: number\n\n### marginFar: number\n차트 경계나 뒤쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### marginNear: number\nPlot 영역이나 앞쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### maxPadding: number\n마지막 tick 뒤쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n endFit 이  AxitFit.TICK 일 때,\ndata point의 최대값과 마지막 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMax 가 지정되거나,  maxValue 가 계산된 최대값보다 큰 경우에도 이 속성은 무시된다.  \n\n### maxValue: number\n명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다.  \n\n### minPadding: number\n첫번째 tick 앞쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n startFit 이  AxitFit.TICK 일 때,\ndata point의 최소값과 첫번째 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMin 가 지정되거나,  minValue 이 계산된 최소값보다 작은 경우에도 이 속성은 무시된다.  \n\n### minValue: number\n명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다.  \n\n### nullable: boolean\ndata point의 이 축 값이 NaN일 때도 point를 표시할 지 여부.  \n`default: true`  \n\n### padding: number\nminPadding ,  maxPadding 이 설정되지 않았을 때 적용되는 기본값이다.  \n`default: 0.05`  \n\n### position: AxisPosition\n표시 위치.  \n`default: AxisPosition.NORMAL`  \n\n### reversed: boolean\ntrue면 반대 방향으로 point 위치들이 지정된다.  \n`default: false`  \n\n### strictMax: number\n무조건 적용되는 최대값.\n즉, 이 값보다 큰 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nmaxPadding도 적용되지 않는다.  \n\n### strictMin: number\n무조건 적용되는 최소값.\n즉, 이 값보다 작은 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nminPadding도 적용되지 않는다.  \n\n### tickBase: string | number\ntick 개수를 맞춰야 하는 대상 axis.\nbase의 strictMin, strictMax가 설정되지 않아야 한다.\nbase의 startFit, endFilt의  AxisFit.TICK 으로 설정되어야 한다.  \n"
    },
    "time": {
      "_content": "## xAxis.time\ntimeUnit(기본값 1)밀리초가 1에 해당한다.\n## Properties\n\n### baseValue: number\n\n### marginFar: number\n차트 경계나 뒤쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### marginNear: number\nPlot 영역이나 앞쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### maxPadding: number\n마지막 tick 뒤쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n endFit 이  AxitFit.TICK 일 때,\ndata point의 최대값과 마지막 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMax 가 지정되거나,  maxValue 가 계산된 최대값보다 큰 경우에도 이 속성은 무시된다.  \n\n### maxValue: number\n명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다.  \n\n### minPadding: number\n첫번째 tick 앞쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n startFit 이  AxitFit.TICK 일 때,\ndata point의 최소값과 첫번째 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMin 가 지정되거나,  minValue 이 계산된 최소값보다 작은 경우에도 이 속성은 무시된다.  \n\n### minValue: number\n명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다.  \n\n### nullable: boolean\ndata point의 이 축 값이 NaN일 때도 point를 표시할 지 여부.  \n`default: true`  \n\n### padding: number\nminPadding ,  maxPadding 이 설정되지 않았을 때 적용되는 기본값이다.  \n`default: 0.05`  \n\n### position: AxisPosition\n표시 위치.  \n`default: AxisPosition.NORMAL`  \n\n### reversed: boolean\ntrue면 반대 방향으로 point 위치들이 지정된다.  \n`default: false`  \n\n### strictMax: number\n무조건 적용되는 최대값.\n즉, 이 값보다 큰 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nmaxPadding도 적용되지 않는다.  \n\n### strictMin: number\n무조건 적용되는 최소값.\n즉, 이 값보다 작은 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nminPadding도 적용되지 않는다.  \n\n### tickBase: string | number\ntick 개수를 맞춰야 하는 대상 axis.\nbase의 strictMin, strictMax가 설정되지 않아야 한다.\nbase의 startFit, endFilt의  AxisFit.TICK 으로 설정되어야 한다.  \n"
    }
  },
  "yAxis": {
    "_content": "## yAxis\n차트에서 축을 명식적으로 지정하지 않으면, 첫번째 시리즈에 합당한 축이 기본 생성된다.\n## Properties\n\n### marginFar: number\n차트 경계나 뒤쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### marginNear: number\nPlot 영역이나 앞쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### maxValue: number\n명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다.  \n\n### minValue: number\n명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다.  \n\n### position: AxisPosition\n표시 위치.  \n`default: AxisPosition.NORMAL`  \n\n### reversed: boolean\ntrue면 반대 방향으로 point 위치들이 지정된다.  \n`default: false`  \n## yAxis.linear\n선형 연속 축.\n값 사아의 비율과 축 길이 비율이 항상 동일한 축.\n## yAxis.log\n이 축에 연결된 시리즈들의 point y값을 log10으로 계산된 위치에 표시한다.\ny축으로만 사용될 수 있다.\n## yAxis.time\ntimeUnit(기본값 1)밀리초가 1에 해당한다.\n",
    "linear": {
      "_content": "## yAxis.linear\n선형 연속 축.\n값 사아의 비율과 축 길이 비율이 항상 동일한 축.\n## Properties\n\n### baseValue: number\n\n### marginFar: number\n차트 경계나 뒤쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### marginNear: number\nPlot 영역이나 앞쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### maxPadding: number\n마지막 tick 뒤쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n endFit 이  AxitFit.TICK 일 때,\ndata point의 최대값과 마지막 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMax 가 지정되거나,  maxValue 가 계산된 최대값보다 큰 경우에도 이 속성은 무시된다.  \n\n### maxValue: number\n명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다.  \n\n### minPadding: number\n첫번째 tick 앞쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n startFit 이  AxitFit.TICK 일 때,\ndata point의 최소값과 첫번째 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMin 가 지정되거나,  minValue 이 계산된 최소값보다 작은 경우에도 이 속성은 무시된다.  \n\n### minValue: number\n명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다.  \n\n### nullable: boolean\ndata point의 이 축 값이 NaN일 때도 point를 표시할 지 여부.  \n`default: true`  \n\n### padding: number\nminPadding ,  maxPadding 이 설정되지 않았을 때 적용되는 기본값이다.  \n`default: 0.05`  \n\n### position: AxisPosition\n표시 위치.  \n`default: AxisPosition.NORMAL`  \n\n### reversed: boolean\ntrue면 반대 방향으로 point 위치들이 지정된다.  \n`default: false`  \n\n### strictMax: number\n무조건 적용되는 최대값.\n즉, 이 값보다 큰 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nmaxPadding도 적용되지 않는다.  \n\n### strictMin: number\n무조건 적용되는 최소값.\n즉, 이 값보다 작은 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nminPadding도 적용되지 않는다.  \n\n### tickBase: string | number\ntick 개수를 맞춰야 하는 대상 axis.\nbase의 strictMin, strictMax가 설정되지 않아야 한다.\nbase의 startFit, endFilt의  TICK 으로 설정되어야 한다.  \n"
    },
    "log": {
      "_content": "## yAxis.log\n이 축에 연결된 시리즈들의 point y값을 log10으로 계산된 위치에 표시한다.\ny축으로만 사용될 수 있다.\n## Properties\n\n### baseValue: number\n\n### marginFar: number\n차트 경계나 뒤쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### marginNear: number\nPlot 영역이나 앞쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### maxPadding: number\n마지막 tick 뒤쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n endFit 이  AxitFit.TICK 일 때,\ndata point의 최대값과 마지막 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMax 가 지정되거나,  maxValue 가 계산된 최대값보다 큰 경우에도 이 속성은 무시된다.  \n\n### maxValue: number\n명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다.  \n\n### minPadding: number\n첫번째 tick 앞쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n startFit 이  AxitFit.TICK 일 때,\ndata point의 최소값과 첫번째 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMin 가 지정되거나,  minValue 이 계산된 최소값보다 작은 경우에도 이 속성은 무시된다.  \n\n### minValue: number\n명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다.  \n\n### nullable: boolean\ndata point의 이 축 값이 NaN일 때도 point를 표시할 지 여부.  \n`default: true`  \n\n### padding: number\nminPadding ,  maxPadding 이 설정되지 않았을 때 적용되는 기본값이다.  \n`default: 0.05`  \n\n### position: AxisPosition\n표시 위치.  \n`default: AxisPosition.NORMAL`  \n\n### reversed: boolean\ntrue면 반대 방향으로 point 위치들이 지정된다.  \n`default: false`  \n\n### strictMax: number\n무조건 적용되는 최대값.\n즉, 이 값보다 큰 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nmaxPadding도 적용되지 않는다.  \n\n### strictMin: number\n무조건 적용되는 최소값.\n즉, 이 값보다 작은 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nminPadding도 적용되지 않는다.  \n\n### tickBase: string | number\ntick 개수를 맞춰야 하는 대상 axis.\nbase의 strictMin, strictMax가 설정되지 않아야 한다.\nbase의 startFit, endFilt의  AxisFit.TICK 으로 설정되어야 한다.  \n"
    },
    "time": {
      "_content": "## yAxis.time\ntimeUnit(기본값 1)밀리초가 1에 해당한다.\n## Properties\n\n### baseValue: number\n\n### marginFar: number\n차트 경계나 뒤쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### marginNear: number\nPlot 영역이나 앞쪽 축 사이의 여백 크기.  \n`default: 0`  \n\n### maxPadding: number\n마지막 tick 뒤쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n endFit 이  AxitFit.TICK 일 때,\ndata point의 최대값과 마지막 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMax 가 지정되거나,  maxValue 가 계산된 최대값보다 큰 경우에도 이 속성은 무시된다.  \n\n### maxValue: number\n명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다.  \n\n### minPadding: number\n첫번째 tick 앞쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n startFit 이  AxitFit.TICK 일 때,\ndata point의 최소값과 첫번째 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMin 가 지정되거나,  minValue 이 계산된 최소값보다 작은 경우에도 이 속성은 무시된다.  \n\n### minValue: number\n명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다.  \n\n### nullable: boolean\ndata point의 이 축 값이 NaN일 때도 point를 표시할 지 여부.  \n`default: true`  \n\n### padding: number\nminPadding ,  maxPadding 이 설정되지 않았을 때 적용되는 기본값이다.  \n`default: 0.05`  \n\n### position: AxisPosition\n표시 위치.  \n`default: AxisPosition.NORMAL`  \n\n### reversed: boolean\ntrue면 반대 방향으로 point 위치들이 지정된다.  \n`default: false`  \n\n### strictMax: number\n무조건 적용되는 최대값.\n즉, 이 값보다 큰 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nmaxPadding도 적용되지 않는다.  \n\n### strictMin: number\n무조건 적용되는 최소값.\n즉, 이 값보다 작은 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nminPadding도 적용되지 않는다.  \n\n### tickBase: string | number\ntick 개수를 맞춰야 하는 대상 axis.\nbase의 strictMin, strictMax가 설정되지 않아야 한다.\nbase의 startFit, endFilt의  AxisFit.TICK 으로 설정되어야 한다.  \n"
    }
  },
  "options": {
    "_content": "## options\n\n## Properties\n\n### animatable: boolean\nfalse로 지정하면 차트 전체척으로 animation 효과를 실행하지 않는다.  \n`default: true`  \n\n### axisGap: number\n복수 axis가 표시되는 경우 axis 사이의 간격  \n`default: 8`  \n\n### credits: Credits\n크레딧 모델.  \n`default: ...`  \n\n### xStart: string | number\nx축 값이 설정되지 않은 시리즈 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n시리즈의  Series.xStart 이 설정되면 그 값이 사용된다.  \n`default: 0`  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n시리즈의  Series.xStep 이 설정되면 그 값이 사용된다.  \n`default: 1`  \n",
    "credits": {
      "_content": "## credits\n크레딧 모델.\n## Properties\n\n### align: Align\n`default: Align.RIGHT`  \n\n### floating: boolean\ntrue이면  verticalAlign 이 'top', 'bottom'일 때도,\n별도의 영역을 차지하지 않고 chart view위에 표시된다.  \n`default: false`  \n\n### offsetX: number\nalign 으로 지정된 수평 위치에서, 양수로 지정하면 안쪽으로 음수면 바깥쪽으로 밀어서 표시한다.  \n`default: 2`  \n\n### offsetY: number\nverticalAlign 으로 지정된 수직 위치에서, 양수로 지정하면 안쪽으로 음수면 바깥쪽으로 밀어서 표시한다.  \n`default: 1`  \n\n### text: string\n표시할 문자열.  \n`default: 'RealChart v1.0'`  \n\n### url: string\n이 속성을 지정하면 click시 해당 url로 이동한다.  \n`default: 'http://realgrid.com'`  \n\n### verticalAlign: VerticalAlign\n`default: VerticalAlign.BOTTOM`  \n"
    }
  },
  "legend": {
    "_content": "## legend\n차트 범례 설정 모델.\nvisible 기본값이 undefined이고,\n따로 지정하지 않으면 시리즈가 둘 이상 포함돼야 legend를 표시한다.\n## Properties\n\n### alignBase: AlignBase\nlegend 정렬 기준.  \n`default: AlignBase.PLOT`  \n\n### backgroundStyles: SVGStyleOrClass\n배경 스타일 셋.\n배경 색상 및 경계선 스타일을 지정할 수 있다.  \n\n### bottom: number\nposition 이  plot 일 때, plot 영역의 하단 모서리와 legend의 간격.\n top 이 지정되면 이 속성은 무시된다.  \n\n### gap: number\nlegend view와 나머지 chart 영역 사이의 gap.  \n`default: 6`  \n\n### itemGap: number\nlegend 아이템들 사이의 간격.  \n`default: 8`  \n\n### itemsPerLine: number\n한 줄 당 표시할 최대 legend 항목 수.  \n\n### layout: LegendLayout\nitem 배치 방향.  \n`default: LegendLayout.AUTO`  \n\n### left: number\nposition 이  plot 일 때, plot 영역의 좌측 모서리와 legend의 간격.  \n`default: 10`  \n\n### markerGap: number\nmarker와 text사이의 간격.  \n`default: 4`  \n\n### maxHeight: RtPercentSize\n수직  배치 일 때,\n최대 높이를 픽셀 단위의 크기 혹은 plot 높이에 대한 상대 길이를 '%'로 지정한다.  \n\n### maxWidth: RtPercentSize\n수평  배치 일 때,\n최대 너비를 픽셀 단위의 크기 혹은 plot 너비에 대한 상대 길이를 '%'로 지정한다.  \n\n### position: LegendPosition\nlegned 표시 위치.  \n`default: LegendPosition.BOTTOM`  \n\n### right: number\nposition 이  plot 일 때, plot 영역의 우측 모서리와 legend의 간격.\n left 가 지정되면 이 속성은 무시된다.  \n\n### top: number\nposition 이  plot 일 때, plot 영역의 상단 모서리와 legend의 간격.  \n`default: 10`  \n"
  },
  "subtitle": {
    "_content": "## subtitle\n차트 sub 타이틀 설정 모델.\n## Properties\n\n### alignBase: AlignBase\n정렬 기준.  \n`default: AlignBase.PLOT`  \n\n### text: string\n부제목 텍스트  \n`default: ''`  \n"
  },
  "title": {
    "_content": "## title\n차트 타이틀 설정 모델.\n## Properties\n\n### alignBase: AlignBase\n정렬 기준.  \n`default: AlignBase.PLOT`  \n\n### text: string\n제목 텍스트  \n`default: 'Title'`  \n"
  },
  "series": {
    "_content": "## series.bar\n\n## series.bargroup\n\n## series.bellcurve\n\n## series.boxplot\n\n## series.bubble\n\n## series.bump\n포함된 시리즈들의 y값들을 비교해서 순위로 시리즈를 표시한다.\n\n\n포함된 시리즈들의 x값이 동일한 data point y값들을 비교해서 순위를 yValue로 재설정한다.\n## series.candlestick\n\n## series.dumbbell\nBarRange 시리즈 변종.\n## series.equalizer\nBar 시리즈 변종.\n## series.errorbar\n\n## series.funnel\n\n## series.heatmap\n[셀 색상]\n1. color-axis가 연결되면 거기에서 색을 가져온다.\n2. series의 minColor, maxColor 사이의 색으로 가져온다.\n3. series의 기본 색상과 흰색 사이의 색으로 가져온다.\n## series.histogram\n\n## series.arearange\n\n## series.area\n\n## series.areagroup\n\n## series.line\n\n## series.linegroup\n\n## series.lollipop\nBar 시리즈 변종.\n## series.ohlc\n\n## series.pareto\n참조하는 원본 시리즈의 누적 비율을 표시한다.\n## series.pie\n\n## series.piegroup\n\n## series.scatter\n\n## series.treemap\n\n## series.vector\n\n## series.waterfall\n\n",
    "bar": {
      "_content": "## series.bar\n\n## Properties\n\n### baseValue: number\n위/아래 구분의 기준이 되는 값.\n\n\n숫자가 아닌 값으로 지정하면 0으로 간주한다.  \n`default: 0`  \n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### groupWidth: number\n시리즈가 group에 포함되지 않은 경우, 축 단위 너비에서 이 시리즈가 차지하는 상대적 너비.\n그룹에 포함되면 이 속성은 무시된다.  \n`default: 1`  \n\n### nullAsBase: boolean\nnull인 y값을  baseValue 로 간주한다.  \n`default: false`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### pointPadding: number\n이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n\n\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.  \n\n### pointWidth: number\n시리즈가 포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n\n\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.  \n`default: 1`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "bargroup": {
      "_content": "## series.bargroup\n\n## Properties\n\n### baseValue: number\n`default: 0`  \n\n### layout: SeriesGroupLayout\n`default: SeriesGroupLayout.DEFAULT`  \n\n### layoutMax: number\nlayout 이  SeriesGroupLayout.FILL 일 때 상대적 최대값.\n\n  \n`default: 100`  \n\n### xAxis: string | number\n\n### yAxis: string | number\n"
    },
    "bellcurve": {
      "_content": "## series.bellcurve\n\n## Properties\n\n### baseValue: number\n위/아래 구분의 기준이 되는 값.  \n`default: 0`  \n\n### belowStyle: SVGStyleOrClass\nbaseValue  혹은 y축의 baseValue보다 작은 쪽의 선들에 적용되는 스타일.  \n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### connectNullPoints: boolean\ntrue로 지정하면 y값이 지정되지 않은 null 포인터를 무시하고 다음 포인트에 연결한다.\nfalse면 null 포인트에서 연결이 끊어진다.  \n`default: false`  \n\n### curved: boolean\ntrue면 spline 곡선으로 표시한다.  \n`default: false`  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### lineType: LineType\n`default: LineType.DEFAULT`  \n\n### marker: LineSeriesMarker\n`default: ...`  \n\n### nullAsBase: boolean\nnull인 y값을  baseValue 로 간주한다.  \n`default: false`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### pointsInSigma: number\n`default: 5`  \n\n### sigmas: number\n`default: 3`  \n\n### source: string | number\n이 시리즈 data point들을 구성할 수 있는 데이터를 포함한 원본 시리즈.\n시리즈 이름이나 index로 지정한다.  \n\n### stepDir: LineStepDirection\n`default: LineStepDirection.FORWARD`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n",
      "marker": {
        "_content": "## marker\n\n## Properties\n\n### firstVisible: MarkerVisibility\n첫번째 point의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### lastVisible: MarkerVisibility\n첫번째 point의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### maxVisible: MarkerVisibility\n최대값 point들의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### minVisible: MarkerVisibility\n최소값 point들의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### radius: number\n`default: 4`  \n\n### shape: Shape\n명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다.  \n"
      }
    },
    "boxplot": {
      "_content": "## series.boxplot\n\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### groupWidth: number\n시리즈가 group에 포함되지 않은 경우, 축 단위 너비에서 이 시리즈가 차지하는 상대적 너비.\n그룹에 포함되면 이 속성은 무시된다.  \n`default: 1`  \n\n### highField: string\n\n### lowField: string\n\n### midField: string\n\n### minField: string\n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### pointPadding: number\n이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n\n\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.  \n\n### pointWidth: number\n시리즈가 포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n\n\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.  \n`default: 1`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "bubble": {
      "_content": "## series.bubble\n\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### radius: number\nshape 의 반지름.  \n`default: 3`  \n\n### shape: Shape\n명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다.  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "bump": {
      "_content": "## series.bump\n포함된 시리즈들의 y값들을 비교해서 순위로 시리즈를 표시한다.\n\n\n포함된 시리즈들의 x값이 동일한 data point y값들을 비교해서 순위를 yValue로 재설정한다.\n## Properties\n\n### layout: SeriesGroupLayout\n`default: SeriesGroupLayout.DEFAULT`  \n\n### layoutMax: number\nlayout 이  SeriesGroupLayout.FILL 일 때 상대적 최대값.\n\n  \n`default: 100`  \n\n### xAxis: string | number\n\n### yAxis: string | number\n"
    },
    "candlestick": {
      "_content": "## series.candlestick\n\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### groupWidth: number\n시리즈가 group에 포함되지 않은 경우, 축 단위 너비에서 이 시리즈가 차지하는 상대적 너비.\n그룹에 포함되면 이 속성은 무시된다.  \n`default: 1`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### pointPadding: number\n이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n\n\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.  \n\n### pointWidth: number\n시리즈가 포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n\n\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.  \n`default: 1`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "dumbbell": {
      "_content": "## series.dumbbell\nBarRange 시리즈 변종.\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### groupWidth: number\n시리즈가 group에 포함되지 않은 경우, 축 단위 너비에서 이 시리즈가 차지하는 상대적 너비.\n그룹에 포함되면 이 속성은 무시된다.  \n`default: 1`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### pointPadding: number\n이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n\n\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.  \n\n### pointWidth: number\n시리즈가 포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n\n\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.  \n`default: 1`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "equalizer": {
      "_content": "## series.equalizer\nBar 시리즈 변종.\n## Properties\n\n### baseValue: number\n위/아래 구분의 기준이 되는 값.\n\n\n숫자가 아닌 값으로 지정하면 0으로 간주한다.  \n`default: 0`  \n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### groupWidth: number\n시리즈가 group에 포함되지 않은 경우, 축 단위 너비에서 이 시리즈가 차지하는 상대적 너비.\n그룹에 포함되면 이 속성은 무시된다.  \n`default: 1`  \n\n### nullAsBase: boolean\nnull인 y값을  baseValue 로 간주한다.  \n`default: false`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### pointPadding: number\n이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n\n\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.  \n\n### pointWidth: number\n시리즈가 포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n\n\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.  \n`default: 1`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "errorbar": {
      "_content": "## series.errorbar\n\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### groupWidth: number\n시리즈가 group에 포함되지 않은 경우, 축 단위 너비에서 이 시리즈가 차지하는 상대적 너비.\n그룹에 포함되면 이 속성은 무시된다.  \n`default: 1`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### pointPadding: number\n이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n\n\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.  \n`default: 0.3`  \n\n### pointWidth: number\n시리즈가 포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n\n\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.  \n`default: 1`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "funnel": {
      "_content": "## series.funnel\n\n## Properties\n\n### center: RtPercentSize\n\n### centerX: RtPercentSize\n\n### centerY: RtPercentSize\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "heatmap": {
      "_content": "## series.heatmap\n[셀 색상]\n1. color-axis가 연결되면 거기에서 색을 가져온다.\n2. series의 minColor, maxColor 사이의 색으로 가져온다.\n3. series의 기본 색상과 흰색 사이의 색으로 가져온다.\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "histogram": {
      "_content": "## series.histogram\n\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "arearange": {
      "_content": "## series.arearange\n\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### marker: LineSeriesMarker\n`default: ...`  \n\n### nullAsBase: boolean\nnull인 y값을  baseValue 로 간주한다.  \n`default: false`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n",
      "marker": {
        "_content": "## marker\n\n## Properties\n\n### firstVisible: MarkerVisibility\n첫번째 point의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### lastVisible: MarkerVisibility\n첫번째 point의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### maxVisible: MarkerVisibility\n최대값 point들의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### minVisible: MarkerVisibility\n최소값 point들의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### radius: number\n`default: 4`  \n\n### shape: Shape\n명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다.  \n"
      }
    },
    "area": {
      "_content": "## series.area\n\n## Properties\n\n### baseValue: number\n위/아래 구분의 기준이 되는 값.  \n`default: 0`  \n\n### belowStyle: SVGStyleOrClass\nbaseValue  혹은 y축의 baseValue보다 작은 쪽의 선들에 적용되는 스타일.  \n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### connectNullPoints: boolean\ntrue로 지정하면 y값이 지정되지 않은 null 포인터를 무시하고 다음 포인트에 연결한다.\nfalse면 null 포인트에서 연결이 끊어진다.  \n`default: false`  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### lineType: LineType\n`default: LineType.DEFAULT`  \n\n### marker: LineSeriesMarker\n`default: ...`  \n\n### nullAsBase: boolean\nnull인 y값을  baseValue 로 간주한다.  \n`default: false`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### stepDir: LineStepDirection\n`default: LineStepDirection.FORWARD`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n",
      "marker": {
        "_content": "## marker\n\n## Properties\n\n### firstVisible: MarkerVisibility\n첫번째 point의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### lastVisible: MarkerVisibility\n첫번째 point의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### maxVisible: MarkerVisibility\n최대값 point들의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### minVisible: MarkerVisibility\n최소값 point들의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### radius: number\n`default: 4`  \n\n### shape: Shape\n명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다.  \n"
      }
    },
    "areagroup": {
      "_content": "## series.areagroup\n\n## Properties\n\n### layout: SeriesGroupLayout\n`default: SeriesGroupLayout.DEFAULT`  \n\n### layoutMax: number\nlayout 이  SeriesGroupLayout.FILL 일 때 상대적 최대값.\n\n  \n`default: 100`  \n\n### xAxis: string | number\n\n### yAxis: string | number\n"
    },
    "line": {
      "_content": "## series.line\n\n## Properties\n\n### baseValue: number\n위/아래 구분의 기준이 되는 값.  \n`default: 0`  \n\n### belowStyle: SVGStyleOrClass\nbaseValue  혹은 y축의 baseValue보다 작은 쪽의 선들에 적용되는 스타일.  \n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### connectNullPoints: boolean\ntrue로 지정하면 y값이 지정되지 않은 null 포인터를 무시하고 다음 포인트에 연결한다.\nfalse면 null 포인트에서 연결이 끊어진다.  \n`default: false`  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### lineType: LineType\n`default: LineType.DEFAULT`  \n\n### marker: LineSeriesMarker\n`default: ...`  \n\n### nullAsBase: boolean\nnull인 y값을  baseValue 로 간주한다.  \n`default: false`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### stepDir: LineStepDirection\n`default: LineStepDirection.FORWARD`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n",
      "marker": {
        "_content": "## marker\n\n## Properties\n\n### firstVisible: MarkerVisibility\n첫번째 point의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### lastVisible: MarkerVisibility\n첫번째 point의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### maxVisible: MarkerVisibility\n최대값 point들의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### minVisible: MarkerVisibility\n최소값 point들의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### radius: number\n`default: 4`  \n\n### shape: Shape\n명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다.  \n"
      }
    },
    "linegroup": {
      "_content": "## series.linegroup\n\n## Properties\n\n### layout: SeriesGroupLayout\n`default: SeriesGroupLayout.DEFAULT`  \n\n### layoutMax: number\nlayout 이  SeriesGroupLayout.FILL 일 때 상대적 최대값.\n\n  \n`default: 100`  \n\n### xAxis: string | number\n\n### yAxis: string | number\n"
    },
    "lollipop": {
      "_content": "## series.lollipop\nBar 시리즈 변종.\n## Properties\n\n### baseValue: number\n위/아래 구분의 기준이 되는 값.\n\n\n숫자가 아닌 값으로 지정하면 0으로 간주한다.  \n`default: 0`  \n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### groupWidth: number\n시리즈가 group에 포함되지 않은 경우, 축 단위 너비에서 이 시리즈가 차지하는 상대적 너비.\n그룹에 포함되면 이 속성은 무시된다.  \n`default: 1`  \n\n### nullAsBase: boolean\nnull인 y값을  baseValue 로 간주한다.  \n`default: false`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### pointPadding: number\n이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n\n\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.  \n\n### pointWidth: number\n시리즈가 포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n\n\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.  \n`default: 1`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "ohlc": {
      "_content": "## series.ohlc\n\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### groupWidth: number\n시리즈가 group에 포함되지 않은 경우, 축 단위 너비에서 이 시리즈가 차지하는 상대적 너비.\n그룹에 포함되면 이 속성은 무시된다.  \n`default: 1`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### pointPadding: number\n이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n\n\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.  \n\n### pointWidth: number\n시리즈가 포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n\n\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.  \n`default: 1`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "pareto": {
      "_content": "## series.pareto\n참조하는 원본 시리즈의 누적 비율을 표시한다.\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### marker: LineSeriesMarker\n`default: ...`  \n\n### nullAsBase: boolean\nnull인 y값을  baseValue 로 간주한다.  \n`default: false`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n",
      "marker": {
        "_content": "## marker\n\n## Properties\n\n### firstVisible: MarkerVisibility\n첫번째 point의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### lastVisible: MarkerVisibility\n첫번째 point의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### maxVisible: MarkerVisibility\n최대값 point들의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### minVisible: MarkerVisibility\n최소값 point들의 marker 표시 여부.  \n`default: MarkerVisibility.DEFAULT`  \n\n### radius: number\n`default: 4`  \n\n### shape: Shape\n명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다.  \n"
      }
    },
    "pie": {
      "_content": "## series.pie\n\n## Properties\n\n### borderRadius: number\n`default: 0`  \n\n### center: RtPercentSize\n\n### centerX: RtPercentSize\n\n### centerY: RtPercentSize\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### exclusive: boolean\ntrue이면 섹터 하나만 마우스 클릭으로 sliced 상태가 될 수 있다.\nPoint의 sliced 속성을 직접 지정하는 경우에는 이 속성이 무시된다.  \n`default: true`  \n\n### groupSize: number\n`default: 1`  \n\n### innerSize: RtPercentSize\n0보다 큰 값을 지정해서 도넛 형태로 표시할 수 있다.\n innerText 로 도넛 내부에 표시될 텍스트를 지정할 수 있다.  \n\n### innerText: PieSeriesText\ninnerSize 가 0보다 클 때, 도넛 내부에 표시되는 텍스트.\n기본 클래스 selector는 <b>'rct-pie-series-inner'</b>이다.  \n`default: ...`  \n\n### labelDistance: number\n`default: 25`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### size: RtPercentSize\n시리즈 본체의 크기.\n\n\n픽셀 크기나 차지할 수 있는 전체 크기에 대한 상대적 크기로 지정할 수 있다.  \n`default: RadialSeries.SIZE`  \n\n### sliceDuration: number\nSlice animation duration.\n밀리세컨드 단위로 지정.  \n`default: 300`  \n\n### sliceOffset: RtPercentSize\n`default: '7%'`  \n\n### startAngle: number\n`default: 0`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "piegroup": {
      "_content": "## series.piegroup\n\n## Properties\n\n### innerSize: RtPercentSize\nPie 시리즈들의 그룹이고, \n layout 이  SeriesGroupLayout.FILL 이나  SeriesGroupLayout.STACK 인 경우,\n경우 0보다 큰 값을 지정해서 도넛 형태로 표시할 수 있다.\n\n\n포함된 pie 시리즈들의 innerSize는 무시된다.  \n`default: 0`  \n\n### layout: SeriesGroupLayout\n`default: SeriesGroupLayout.DEFAULT`  \n\n### layoutMax: number\nlayout 이  SeriesGroupLayout.FILL 일 때 상대적 최대값.\n\n  \n`default: 100`  \n\n### polarSize: RtPercentSize\npolar 그룹일 때 원형 플롯 영역의 크기.\n\n\n픽셀 크기나 차지할 수 있는 전체 크기에 대한 상대적 크기로 지정할 수 있다.\n\n\nPie 시리즈들의 그룹이고, \n layout 이  SeriesGroupLayout.FILL 이나  SeriesGroupLayout.STACK 인 경우\n개별 시리즈의 size 대신 이 속성값으로 표시되고,\n각 시리즈의 size는 상대 크기로 적용된다.  \n`default: '80%'`  \n\n### xAxis: string | number\n\n### yAxis: string | number\n"
    },
    "scatter": {
      "_content": "## series.scatter\n\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### radius: number\nshape 의 반지름.  \n`default: 5`  \n\n### shape: Shape\n명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다.  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "treemap": {
      "_content": "## series.treemap\n\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "vector": {
      "_content": "## series.vector\n\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    },
    "waterfall": {
      "_content": "## series.waterfall\n\n## Properties\n\n### clipped: boolean\nbody 영역을 벗어난 data point view는 잘라낸다.  \n`default: false`  \n\n### color: string\n데이터 포인트 기본 색.  \n\n### colorField: string\nundefined이면, data point의 값이 객체일 때 'color'.  \n\n### dataProp: string\nundefined이면 \"data\".  \n\n### groupWidth: number\n시리즈가 group에 포함되지 않은 경우, 축 단위 너비에서 이 시리즈가 차지하는 상대적 너비.\n그룹에 포함되면 이 속성은 무시된다.  \n`default: 1`  \n\n### pointColors: boolean | string[]\n데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.  \n\n### pointPadding: number\n이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n\n\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.  \n\n### pointWidth: number\n시리즈가 포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n\n\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.  \n`default: 1`  \n\n### xAxis: string | number\n\n### xField: string | number\nundefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.  \n\n### xStart: string | number\nx축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다.  \n\n### xStep: string | number\nx축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다.  \n\n### yAxis: string | number\n\n### yField: string | number\nundefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.  \n\n### zOrder: number\n`default: 0`  \n"
    }
  }
}