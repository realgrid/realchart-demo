{
  "BooleanFormatter": {
    "kindString": "Class",
    "content": "'falseText;trueText'",
    "extended": [],
    "props": []
  },
  "Color": {
    "kindString": "Class",
    "content": "",
    "extended": [],
    "props": []
  },
  "RtDebug": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "RtLog": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "DatetimeFormatter": {
    "kindString": "Class",
    "content": "",
    "extended": [],
    "props": []
  },
  "DatetimeReader": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "Dom": {
    "kindString": "Class",
    "content": "Utilities for HTML element.",
    "extended": [],
    "props": []
  },
  "ElementPool": {
    "kindString": "Class",
    "content": "",
    "extended": [
      "RcObject"
    ],
    "props": []
  },
  "ImageLoader": {
    "kindString": "Class",
    "content": "Image loader.",
    "extended": [],
    "props": []
  },
  "NumberFormatter": {
    "kindString": "Class",
    "content": "'as,0.0#'\nNOTE: 'a'는 bigint에 사용할 수 없다.\n\nTODO: ',' 자리에 다른 문자(ex. space)를 표시할 수 있도록 한다.",
    "extended": [],
    "props": []
  },
  "PathBuilder": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "Point": {
    "kindString": "Class",
    "content": "",
    "extended": [],
    "props": []
  },
  "RcAnimation": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "ClipElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "RcElement"
    ],
    "props": []
  },
  "ClipPathElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "RcElement"
    ],
    "props": []
  },
  "LayerElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "RcElement"
    ],
    "props": []
  },
  "PathElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "RcElement"
    ],
    "props": []
  },
  "RcControl": {
    "kindString": "Class",
    "content": "Control base.",
    "extended": [
      "RcWrappableObject"
    ],
    "props": []
  },
  "RcElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "RcObject"
    ],
    "props": []
  },
  "RcEventProvider": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "RcObject"
    ],
    "props": []
  },
  "RcObject": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [],
    "props": []
  },
  "RcWrappableObject": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "RcObject"
    ],
    "props": []
  },
  "RcWrapper": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "RcObject"
    ],
    "props": []
  },
  "Rectangle": {
    "kindString": "Class",
    "content": "",
    "extended": [],
    "props": []
  },
  "SvgRichText": {
    "kindString": "Class",
    "content": "<t>, <b>, <i>, <br>,\n<b>${label}</b><br><t style=\"fill:#c00;\">${endValue}</t>",
    "extended": [],
    "props": []
  },
  "Sides": {
    "kindString": "Class",
    "content": "",
    "extended": [],
    "props": []
  },
  "Size": {
    "kindString": "Class",
    "content": "",
    "extended": [],
    "props": []
  },
  "TextFormatter": {
    "kindString": "Class",
    "content": "값이 문자형일 때 텍스트 변경 형식.\n세미콜론(;)으로 구분되는 형식. 두개의 문자열은 각각 String.prototype.replace의 매개변수가 된다.\n예) 사업자번호: '(\\\\d{3})(\\\\d{2})(\\\\d{5});$1-$2-$3'",
    "extended": [],
    "props": []
  },
  "Align": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "CENTER",
        "value": "center"
      },
      {
        "name": "LEFT",
        "value": "left"
      },
      {
        "name": "RIGHT",
        "value": "right"
      }
    ]
  },
  "AlignBase": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "CHART",
        "value": "chart"
      },
      {
        "name": "PLOT",
        "value": "plot"
      }
    ]
  },
  "MouseButton": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "LEFT",
        "value": 0
      },
      {
        "name": "MIDDLE",
        "value": 1
      },
      {
        "name": "RIGHT",
        "value": 2
      }
    ]
  },
  "RtDirection": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "DOWN",
        "value": "down",
        "content": "아래쪽으로 진행."
      },
      {
        "name": "LEFT",
        "value": "left",
        "content": "왼쪽으로 진행."
      },
      {
        "name": "RIGHT",
        "value": "right",
        "content": "오른쪽으로 진행."
      },
      {
        "name": "UP",
        "value": "up",
        "content": "위쪽으로 진행."
      }
    ]
  },
  "SectionDir": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "BOTTOM",
        "value": "bottom"
      },
      {
        "name": "LEFT",
        "value": "left"
      },
      {
        "name": "RIGHT",
        "value": "right"
      },
      {
        "name": "TOP",
        "value": "top"
      }
    ]
  },
  "VerticalAlign": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "BOTTOM",
        "value": "bottom"
      },
      {
        "name": "MIDDLE",
        "value": "middle"
      },
      {
        "name": "TOP",
        "value": "top"
      }
    ]
  },
  "AlertError": {
    "kindString": "Class",
    "content": "경고성 에러.\n발생 시 프로그램을 중지하지 않고 경고를 표시한다.",
    "extended": [
      "Error"
    ],
    "props": []
  },
  "AssertionError": {
    "kindString": "Class",
    "extended": [
      "Error"
    ],
    "props": []
  },
  "RtAbortError": {
    "kindString": "Class",
    "extended": [
      "Error"
    ],
    "props": []
  },
  "Stopwatch": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "Utils": {
    "kindString": "Class",
    "content": "",
    "extended": [],
    "props": []
  },
  "CircleElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "RcElement"
    ],
    "props": []
  },
  "GroupElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "RcElement"
    ],
    "props": []
  },
  "ImageElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "RcElement"
    ],
    "props": []
  },
  "LabelElement": {
    "kindString": "Class",
    "content": "ChartText를 표시하는 텍스트 view.",
    "extended": [
      "GroupElement"
    ],
    "props": []
  },
  "ArcElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "PathElement"
    ],
    "props": []
  },
  "LineElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "PathElement"
    ],
    "props": []
  },
  "LineElementEx": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "PathElement"
    ],
    "props": []
  },
  "BackElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "RectElement"
    ],
    "props": []
  },
  "BoxElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "PathElement"
    ],
    "props": []
  },
  "RectElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "RcElement"
    ],
    "props": []
  },
  "SectorElement": {
    "kindString": "Class",
    "content": "RcContainer 구성 요소. \nSVGElement들로 구현된다.",
    "extended": [
      "PathElement"
    ],
    "props": []
  },
  "Shape": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "CIRCLE",
        "value": "circle"
      },
      {
        "name": "DIAMOND",
        "value": "diamond"
      },
      {
        "name": "ITRIANGLE",
        "value": "itriangle"
      },
      {
        "name": "RECTANGLE",
        "value": "rectangle"
      },
      {
        "name": "SQUARE",
        "value": "square"
      },
      {
        "name": "STAR",
        "value": "star"
      },
      {
        "name": "TRIANGLE",
        "value": "triangle"
      }
    ]
  },
  "SvgShapes": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "TextAnchor": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "END",
        "value": "end"
      },
      {
        "name": "MIDDLE",
        "value": "middle"
      },
      {
        "name": "START",
        "value": "start"
      }
    ]
  },
  "TextLayout": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "BOTTOM",
        "value": "bottom"
      },
      {
        "name": "MIDDLE",
        "value": "middle"
      },
      {
        "name": "TOP",
        "value": "top"
      }
    ]
  },
  "TextOverflow": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "ELLIPSIS",
        "value": "ellipsis"
      },
      {
        "name": "TRUNCATE",
        "value": "truncate"
      },
      {
        "name": "WRAP",
        "value": "wrap"
      }
    ]
  },
  "TextElement": {
    "kindString": "Class",
    "content": "Background, padding 등을 이용하려면 HtmlTextElement를 사용한다.",
    "extended": [
      "RcElement"
    ],
    "props": []
  },
  "AssetCollection": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "LinearGradient": {
    "kindString": "Class",
    "extended": [
      "Gradient"
    ],
    "props": []
  },
  "RadialGradient": {
    "kindString": "Class",
    "extended": [
      "Gradient"
    ],
    "props": []
  },
  "AxisGuideType": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "AREA",
        "value": "area",
        "content": "Plot 영역에 (x, y)로 지정하는 값 좌표의 배열로 설정되는 다각형을 표시한다."
      },
      {
        "name": "LINE",
        "value": "line",
        "content": "축 위의 특정한 값에 선분을 표시한다."
      },
      {
        "name": "RANGE",
        "value": "range",
        "content": "축 위 특정한 두 값 사이의 영역을 구분 표시한다."
      }
    ]
  },
  "AxisLabelArrange": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "NONE",
        "value": "none"
      },
      {
        "name": "ROTATE",
        "value": "rotate",
        "content": "-45도 회전시킨다."
      },
      {
        "name": "ROWS",
        "value": "rows",
        "content": "label들이 겹치지 않도록 여러 줄로 나누어 배치한다.\n<br>"
      },
      {
        "name": "STEP",
        "value": "step",
        "content": "label들이 겹치지 않도록 건너 뛰면서 배치한다.\n<br>\n startStep 으로 지정된 step부터 배치된다."
      }
    ]
  },
  "AxisPosition": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "BASE",
        "value": "base",
        "content": "Y축의 baseValue 지점에 표시된다.\n<br>\n[주의] \n1. 축에 연결된 시리즈들이 BarSeries 계열일 때만 가능하다.\n2. 차트의 X축 하나에만 적용할 수 있다. 두번째로 지정된 축의 속성은  NORMAL 로 적용된다.\n3. 상대 축이 **linear** 가 아니거나  LinearAxis.baseValue 가 min 보다 작거나 max보다 크면 이 값은 무시되고,\n    NORMAL 로 적용된다."
      },
      {
        "name": "NORMAL",
        "value": "normal",
        "content": "X축은 아래쪽에 수평으로, Y축은 왼쪽에 수직으로 표시된다.\n<br>\n Chart.inverted 이면 Y축이 아래쪽에 수평으로, X축은 왼쪽에 수직으로 표시된다."
      },
      {
        "name": "OPPOSITE",
        "value": "opposite",
        "content": "X축은 위쪽에 수평으로, Y축은 오른쪽에 수직으로 표시된다.\n<br>\n Chart.inverted 이면 Y축이 위쪽에 수평으로, X축은 오른쪽에 수직으로 표시된다."
      }
    ]
  },
  "Axis": {
    "kindString": "Class",
    "config": [
      "chart.xAxis",
      "chart.yAxis"
    ],
    "content": "차트에서 축을 명식적으로 지정하지 않으면, 첫번째 시리즈에 합당한 축이 기본 생성된다.",
    "extended": [
      "ChartItem"
    ],
    "props": [
      {
        "name": "marginFar",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "차트 경계나 뒤쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "marginNear",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "Plot 영역이나 앞쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "maxValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다."
      },
      {
        "name": "minValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다."
      },
      {
        "name": "position",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisPosition",
          "id": 976
        },
        "header": "",
        "content": "표시 위치.",
        "defaultValue": "AxisPosition.NORMAL"
      },
      {
        "name": "reversed",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true면 반대 방향으로 point 위치들이 지정된다.",
        "defaultValue": "false"
      }
    ]
  },
  "AxisCollection": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "AxisGrid": {
    "kindString": "Class",
    "config": [
      "axis.grid"
    ],
    "content": "visible 기본값이 undefined이다.\n<br>\nvisible이 undefined나 null로 지정되면, 축 위치에 따라 visible 여부가 결정된다.",
    "extended": [
      "AxisItem"
    ],
    "props": [
      {
        "name": "circular",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "",
        "defaultValue": "false"
      },
      {
        "name": "endVisible",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "",
        "defaultValue": "true"
      },
      {
        "name": "startVisible",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "",
        "defaultValue": "true"
      }
    ]
  },
  "AxisGuide": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "AxisItem"
    ],
    "props": []
  },
  "AxisGuideLabel": {
    "kindString": "Class",
    "config": [
      "axis.guide.label"
    ],
    "content": "",
    "extended": [
      "FormattableText"
    ],
    "props": [
      {
        "name": "align",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "Align",
          "id": 19213
        },
        "header": "",
        "content": "수평 정렬.",
        "defaultValue": "Align.LEFT"
      },
      {
        "name": "autoContrast",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "텍스트가 data point 내부에 표시되는 경우 포인트 색상과 대조되도록 표시한다.\n<br>\n밝게 표시할 때는  brightStyle 을 적용하고,\n어둡게 표시할 때는  darkStyle 이 적용된다.\nbrightStyle이 지정되지 않으면 'rct-text-bright'이,\ndarkStyle이 지정되지 않으면 'rct-text-dark'가 기본 적용된다.",
        "defaultValue": "true"
      },
      {
        "name": "backgroundStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "brightStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "darkStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "effect",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "ChartTextEffect",
          "id": 1756
        },
        "header": "",
        "content": "",
        "defaultValue": "ChartTextEffect.NONE"
      },
      {
        "name": "verticalAlign",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "VerticalAlign",
          "id": 19217
        },
        "header": "",
        "content": "수직 정렬.",
        "defaultValue": "VerticalAlign.TOP"
      }
    ]
  },
  "AxisGuideLine": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "AxisGuide"
    ],
    "props": []
  },
  "AxisGuideRange": {
    "kindString": "Class",
    "content": "range -> zone ?",
    "extended": [
      "AxisGuide"
    ],
    "props": []
  },
  "AxisItem": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "ChartItem"
    ],
    "props": []
  },
  "AxisLabel": {
    "kindString": "Class",
    "content": "[겹치는 경우가 발생할 때]\n1. step이 0보다 큰 값으로 설정되면 반영한다.\n2. staggerRows가 0보다 큰 값으로 설정되면 반영한다.\n3. rotation이 0이 아닌 명시적 값으로 설정되면 반영한다.\n4. 1~3 모두 설정되지 않은 경우 autoArrange 설정에 따라 자동 배치한다.\n5. 배치 후 공간을 초과하는 label은 wrap 속성에 따라 줄나누기를 하거나, \n   ellipsis('...')로 처리해서 표시한다.",
    "extended": [
      "FormattableText"
    ],
    "props": [
      {
        "name": "autoContrast",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "텍스트가 data point 내부에 표시되는 경우 포인트 색상과 대조되도록 표시한다.\n<br>\n밝게 표시할 때는  brightStyle 을 적용하고,\n어둡게 표시할 때는  darkStyle 이 적용된다.\nbrightStyle이 지정되지 않으면 'rct-text-bright'이,\ndarkStyle이 지정되지 않으면 'rct-text-dark'가 기본 적용된다.",
        "defaultValue": "true"
      },
      {
        "name": "backgroundStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "brightStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "darkStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "effect",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "ChartTextEffect",
          "id": 1756
        },
        "header": "",
        "content": "",
        "defaultValue": "ChartTextEffect.NONE"
      }
    ]
  },
  "AxisLine": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "AxisItem"
    ],
    "props": []
  },
  "AxisTick": {
    "kindString": "Class",
    "content": "축에 표시되는 tick 위치와 표시 마크에 관한 설정 모델.",
    "extended": [
      "AxisItem"
    ],
    "props": []
  },
  "AxisTickMark": {
    "kindString": "Class",
    "content": "기본적으로 tick 위치에 선으로 표시된다.",
    "extended": [
      "AxisItem"
    ],
    "props": []
  },
  "AxisTitle": {
    "kindString": "Class",
    "config": [
      "axis.title"
    ],
    "content": "",
    "extended": [
      "AxisItem"
    ],
    "props": [
      {
        "name": "backgroundStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": "타이틀 배경 스타일."
      },
      {
        "name": "gap",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "타이틀과 label 혹은 축 선 사이의 간격.\n<br>",
        "defaultValue": "5",
        "defaultBlock": "5 pixels"
      },
      {
        "name": "text",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "타이틀 텍스트."
      }
    ]
  },
  "Body": {
    "kindString": "Class",
    "content": "시리즈들이 그려지는 plot 영역 모델.",
    "extended": [
      "ChartItem"
    ],
    "props": []
  },
  "Chart": {
    "kindString": "Class",
    "config": [
      "chart"
    ],
    "content": "",
    "extended": [
      "RcEventProvider"
    ],
    "props": [
      {
        "name": "inverted",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true면 x축이 수직, y축이 수평으로 배치된다.\n<br>\n기본값은 undefined로 첫번째 series의 종류에 따라 결정된다.\n즉, bar 시리즈 계통이면 true가 된다."
      },
      {
        "name": "polar",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true면 차트가  극좌표계 로 표시된다.\n기본은  직교좌표계 이다.\n극좌표계일 때,\nx축이 원호에, y축은 방사선에 위치하고, 아래의 제한 사항이 있다.\n1. x축은 첫번째 축 하나만 사용된다.\n2. axis.position 속성은 무시된다.\n3. chart, series의 inverted 속성이 무시된다.\n4. 극좌표계에 표시할 수 없는 series들은 표시되지 않는다.",
        "defaultValue": "false"
      },
      {
        "name": "type",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "기본 시리즈 type.\n Series._type 의 기본값.\n시리즈에 type을 지정하지 않으면 이 속성 type의 시리즈로 생성된다.",
        "defaultValue": "'bar'",
        "defaultBlock": "'bar'"
      }
    ]
  },
  "ChartOptions": {
    "kindString": "Class",
    "config": [
      "chart.options"
    ],
    "content": "",
    "extended": [
      "ChartItem"
    ],
    "props": [
      {
        "name": "animatable",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "false로 지정하면 차트 전체척으로 animation 효과를 실행하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "axisGap",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "복수 axis가 표시되는 경우 axis 사이의 간격",
        "defaultValue": "8",
        "defaultBlock": "8 pixels"
      },
      {
        "name": "credits",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "Credits",
          "id": 1360
        },
        "header": "",
        "content": "크레딧 모델.",
        "defaultValue": "..."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 시리즈 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n시리즈의  Series.xStart 이 설정되면 그 값이 사용된다.",
        "defaultValue": "0"
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n시리즈의  Series.xStep 이 설정되면 그 값이 사용된다.",
        "defaultValue": "1"
      }
    ]
  },
  "Credits": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "ChartItem"
    ],
    "props": [
      {
        "name": "align",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "Align",
          "id": 19213
        },
        "header": "",
        "content": "",
        "defaultValue": "Align.RIGHT"
      },
      {
        "name": "floating",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true이면  verticalAlign 이 'top', 'bottom'일 때도,\n별도의 영역을 차지하지 않고 chart view위에 표시된다.",
        "defaultValue": "false"
      },
      {
        "name": "offsetX",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "align 으로 지정된 수평 위치에서, 양수로 지정하면 안쪽으로 음수면 바깥쪽으로 밀어서 표시한다.",
        "defaultValue": "2"
      },
      {
        "name": "offsetY",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "verticalAlign 으로 지정된 수직 위치에서, 양수로 지정하면 안쪽으로 음수면 바깥쪽으로 밀어서 표시한다.",
        "defaultValue": "1"
      },
      {
        "name": "text",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "표시할 문자열.",
        "defaultValue": "'RealChart v1.0'"
      },
      {
        "name": "url",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "이 속성을 지정하면 click시 해당 url로 이동한다.",
        "defaultValue": "'http://realgrid.com'"
      },
      {
        "name": "verticalAlign",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "VerticalAlign",
          "id": 19217
        },
        "header": "",
        "content": "",
        "defaultValue": "VerticalAlign.BOTTOM"
      }
    ]
  },
  "ChartTextEffect": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "BACKGROUND",
        "value": "background",
        "content": "텍스트 배경 상자를 표시한다.\n<br>\n배경 상자에  backgroundStyle 이 적용된다.\n스타일이 적용되지 않으면 기본 'rct-text-background'이 적용된다."
      },
      {
        "name": "NONE",
        "value": "none"
      },
      {
        "name": "OUTLINE",
        "value": "outline",
        "content": "텍스트 색상과 대조되는 색상으로 텍스트 외곽을 구분 표시한다."
      }
    ]
  },
  "BackgroundImage": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "ChartItem"
    ],
    "props": []
  },
  "ChartItem": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "RcObject"
    ],
    "props": []
  },
  "ChartText": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "ChartItem"
    ],
    "props": [
      {
        "name": "autoContrast",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "텍스트가 data point 내부에 표시되는 경우 포인트 색상과 대조되도록 표시한다.\n<br>\n밝게 표시할 때는  brightStyle 을 적용하고,\n어둡게 표시할 때는  darkStyle 이 적용된다.\nbrightStyle이 지정되지 않으면 'rct-text-bright'이,\ndarkStyle이 지정되지 않으면 'rct-text-dark'가 기본 적용된다.",
        "defaultValue": "true"
      },
      {
        "name": "backgroundStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "brightStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "darkStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "effect",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "ChartTextEffect",
          "id": 1756
        },
        "header": "",
        "content": "",
        "defaultValue": "ChartTextEffect.NONE"
      }
    ]
  },
  "FormattableText": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "ChartText"
    ],
    "props": [
      {
        "name": "autoContrast",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "텍스트가 data point 내부에 표시되는 경우 포인트 색상과 대조되도록 표시한다.\n<br>\n밝게 표시할 때는  brightStyle 을 적용하고,\n어둡게 표시할 때는  darkStyle 이 적용된다.\nbrightStyle이 지정되지 않으면 'rct-text-bright'이,\ndarkStyle이 지정되지 않으면 'rct-text-dark'가 기본 적용된다.",
        "defaultValue": "true"
      },
      {
        "name": "backgroundStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "brightStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "darkStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "effect",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "ChartTextEffect",
          "id": 1756
        },
        "header": "",
        "content": "",
        "defaultValue": "ChartTextEffect.NONE"
      }
    ]
  },
  "LineType": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "DEFAULT",
        "value": "default"
      },
      {
        "name": "SPLINE",
        "value": "spline"
      },
      {
        "name": "STEP",
        "value": "step"
      }
    ]
  },
  "Crosshair": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "ChartItem"
    ],
    "props": []
  },
  "CrosshairFlag": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "ChartItem"
    ],
    "props": []
  },
  "DataPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [],
    "props": []
  },
  "DataPointCollection": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "LegendLayout": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "AUTO",
        "value": "auto",
        "content": "legend가 차트 좌우에 배치되면 item들을 수직으로 배치.\nlegend가 차트 상하에 배치되면 item들을 수평으로 배치."
      },
      {
        "name": "HORIZONTAL",
        "value": "horizontal",
        "content": "item들을 수평으로 배치"
      },
      {
        "name": "VERTICAL",
        "value": "vertical",
        "content": "item들을 수직으로 배치"
      }
    ]
  },
  "LegendPosition": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "BOTTOM",
        "value": "bottom"
      },
      {
        "name": "LEFT",
        "value": "left"
      },
      {
        "name": "PLOT",
        "value": "plot"
      },
      {
        "name": "RIGHT",
        "value": "right"
      },
      {
        "name": "SUBPLOT",
        "value": "subplot"
      },
      {
        "name": "TOP",
        "value": "top"
      }
    ]
  },
  "Legend": {
    "kindString": "Class",
    "config": [
      "chart.legend"
    ],
    "content": "차트 범례 설정 모델.\nvisible 기본값이 undefined이고,\n따로 지정하지 않으면 시리즈가 둘 이상 포함돼야 legend를 표시한다.",
    "extended": [
      "ChartItem"
    ],
    "props": [
      {
        "name": "alignBase",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AlignBase",
          "id": 19228
        },
        "header": "",
        "content": "legend 정렬 기준.",
        "defaultValue": "AlignBase.PLOT"
      },
      {
        "name": "backgroundStyles",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": "배경 스타일 셋.\n배경 색상 및 경계선 스타일을 지정할 수 있다."
      },
      {
        "name": "bottom",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "position 이  plot 일 때, plot 영역의 하단 모서리와 legend의 간격.\n top 이 지정되면 이 속성은 무시된다."
      },
      {
        "name": "gap",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "legend view와 나머지 chart 영역 사이의 gap.",
        "defaultValue": "6"
      },
      {
        "name": "itemGap",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "legend 아이템들 사이의 간격.",
        "defaultValue": "8"
      },
      {
        "name": "itemsPerLine",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "한 줄 당 표시할 최대 legend 항목 수."
      },
      {
        "name": "layout",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LegendLayout",
          "id": 2348
        },
        "header": "",
        "content": "item 배치 방향.",
        "defaultValue": "LegendLayout.AUTO"
      },
      {
        "name": "left",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "position 이  plot 일 때, plot 영역의 좌측 모서리와 legend의 간격.",
        "defaultValue": "10"
      },
      {
        "name": "markerGap",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "marker와 text사이의 간격.",
        "defaultValue": "4"
      },
      {
        "name": "maxHeight",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": "수직  배치 일 때,\n최대 높이를 픽셀 단위의 크기 혹은 plot 높이에 대한 상대 길이를 '%'로 지정한다."
      },
      {
        "name": "maxWidth",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": "수평  배치 일 때,\n최대 너비를 픽셀 단위의 크기 혹은 plot 너비에 대한 상대 길이를 '%'로 지정한다."
      },
      {
        "name": "position",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LegendPosition",
          "id": 2341
        },
        "header": "",
        "content": "legned 표시 위치.",
        "defaultValue": "LegendPosition.BOTTOM"
      },
      {
        "name": "right",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "position 이  plot 일 때, plot 영역의 우측 모서리와 legend의 간격.\n left 가 지정되면 이 속성은 무시된다."
      },
      {
        "name": "top",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "position 이  plot 일 때, plot 영역의 상단 모서리와 legend의 간격.",
        "defaultValue": "10"
      }
    ]
  },
  "LegendItem": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "ChartItem"
    ],
    "props": []
  },
  "ImageItem": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "PlotItem"
    ],
    "props": []
  },
  "PlotItem": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "ChartItem"
    ],
    "props": []
  },
  "PolygonItem": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "PlotItem"
    ],
    "props": []
  },
  "RegionItem": {
    "kindString": "Class",
    "content": "특정 시리즈를 기준으로 [x1, y1] ~ [x2, y2]의 영역을 특정한 스타일로 표시.\n<br>\nex) yBase 아래 쪽 영역을 다른 색으로 표시한다.",
    "extended": [
      "PlotItem"
    ],
    "props": []
  },
  "ShapeItem": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "PlotItem"
    ],
    "props": []
  },
  "TextItem": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "PlotItem"
    ],
    "props": []
  },
  "MarkerVisibility": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "DEFAULT",
        "value": "default",
        "content": "visible 속성에 따른다."
      },
      {
        "name": "HIDDEN",
        "value": "hidden",
        "content": "visible 속성과 상관없이 항상 표시하지 않는다."
      },
      {
        "name": "VISIBLE",
        "value": "visible",
        "content": "visible 속성과 상관없이 항상 표시한다."
      }
    ]
  },
  "PointItemPosition": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "AUTO",
        "value": "auto"
      },
      {
        "name": "FOOT",
        "value": "foot"
      },
      {
        "name": "HEAD",
        "value": "head"
      },
      {
        "name": "INSIDE",
        "value": "inside"
      },
      {
        "name": "INSIDE_FIRST",
        "value": "insideFirst"
      },
      {
        "name": "OUTSIDE",
        "value": "outside"
      },
      {
        "name": "OUTSIDE_FIRST",
        "value": "outsideFirst"
      }
    ]
  },
  "SeriesGroupLayout": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "DEFAULT",
        "value": "default",
        "content": "시리즈 종류에 따른 기본 표시 방식.\n<br>\nbar 종류의 시리즈인 경우 포인트들을 순서대로 옆으로 배치하고,\nline 종류인 경우  OVERLAP 과 동일하게 순서대로 표시된다.\npie 종류인 경우  FILL 과 동일하다.\n<br>\n기본 값이다."
      },
      {
        "name": "FILL",
        "value": "fill",
        "content": "포인트 그룹 내에서 각 포인트의 비율을 표시한다.\n<br>\n그룹 합은 SeriesGroup.max로 지정한다.\n각 포인트들은 STACK과 마찬가지로 순서대로 쌓여서 표시된다.\nSeriesGroup.baseValue 보다 값이 큰 point는 baseValue 위쪽에 작은 값을 가진\n포인트들은 baseValue 아래쪽에 표시된다.\n<br>\nPie 시리즈에서는  FILL 과 동일하다."
      },
      {
        "name": "OVERLAP",
        "value": "overlap",
        "content": "포인트들을 순서대로 겹쳐서 표시한다.\n<br>\nbar 종류의 시리지은 경우, \n마지막 시리즈의 포인트 값이 큰 경우 이전 포인트들은 보이지 않을 수 있다."
      },
      {
        "name": "STACK",
        "value": "stack",
        "content": "포인트 그룹 내에서 각 포인트들을 순서대로 쌓아서 표시한다."
      }
    ]
  },
  "TrendType": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "EXPONENTIAL",
        "value": "exponential"
      },
      {
        "name": "LINEAR",
        "value": "linear"
      },
      {
        "name": "LOGARITHMIC",
        "value": "logarithmic"
      },
      {
        "name": "MOVING_AVERAGE",
        "value": "movingAverage"
      },
      {
        "name": "POLYNOMIAL",
        "value": "polynomial"
      },
      {
        "name": "POWER",
        "value": "power"
      }
    ]
  },
  "BasedSeries": {
    "kindString": "Class",
    "extended": [
      "ClusterableSeries"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "위/아래 구분의 기준이 되는 값.\n<br>\n숫자가 아닌 값으로 지정하면 0으로 간주한다.",
        "defaultValue": "0"
      },
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "nullAsBase",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "null인 y값을  baseValue 로 간주한다.",
        "defaultValue": "false"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "ClusterableSeries": {
    "kindString": "Class",
    "extended": [
      "Series"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "ClusterableSeriesGroup": {
    "kindString": "Class",
    "extended": [
      "SeriesGroup"
    ],
    "props": [
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "layout",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SeriesGroupLayout",
          "id": 5026
        },
        "header": "",
        "content": "",
        "defaultValue": "SeriesGroupLayout.DEFAULT"
      },
      {
        "name": "layoutMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "layout 이  FILL 일 때 상대적 최대값.\n<br>",
        "defaultValue": "100",
        "defaultBlock": "100"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      }
    ]
  },
  "ConstraintSeriesGroup": {
    "kindString": "Class",
    "extended": [
      "SeriesGroup"
    ],
    "props": [
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "layout",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SeriesGroupLayout",
          "id": 5026
        },
        "header": "",
        "content": "",
        "defaultValue": "SeriesGroupLayout.DEFAULT"
      },
      {
        "name": "layoutMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "layout 이  FILL 일 때 상대적 최대값.\n<br>",
        "defaultValue": "100",
        "defaultBlock": "100"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      }
    ]
  },
  "DataPointLabel": {
    "kindString": "Class",
    "content": "Series data point label options.",
    "extended": [
      "FormattableText"
    ],
    "props": [
      {
        "name": "autoContrast",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "텍스트가 data point 내부에 표시되는 경우 포인트 색상과 대조되도록 표시한다.\n<br>\n밝게 표시할 때는  brightStyle 을 적용하고,\n어둡게 표시할 때는  darkStyle 이 적용된다.\nbrightStyle이 지정되지 않으면 'rct-text-bright'이,\ndarkStyle이 지정되지 않으면 'rct-text-dark'가 기본 적용된다.",
        "defaultValue": "true"
      },
      {
        "name": "backgroundStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "brightStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "darkStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": ""
      },
      {
        "name": "distance",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "'pie', 'funnel' 시리즈에서 label이 외부에 표시될 때 label과 시리즈 본체와의 기본 간격.",
        "defaultValue": "25"
      },
      {
        "name": "effect",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "ChartTextEffect",
          "id": 1756
        },
        "header": "",
        "content": "",
        "defaultValue": "ChartTextEffect.NONE"
      },
      {
        "name": "offset",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "label과 point view 사이의 기본 간격.",
        "defaultValue": "4"
      }
    ]
  },
  "MovingAverage": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "PlottingItemCollection": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "RadialSeries": {
    "kindString": "Class",
    "content": "직교 좌표계가 표시된 경우, plot area 영역을 기준으로 size, centerX, centerY가 적용된다.\n<br>\nTODO: 현재 PieSeris만 계승하고 있다. 추후 PieSeries에 합칠 것.",
    "extended": [
      "WidgetSeries"
    ],
    "props": [
      {
        "name": "center",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "centerX",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "centerY",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "size",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": "시리즈 본체의 크기.\n<br>\n픽셀 크기나 차지할 수 있는 전체 크기에 대한 상대적 크기로 지정할 수 있다.",
        "defaultValue": "RadialSeries.SIZE"
      },
      {
        "name": "startAngle",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "RangedSeries": {
    "kindString": "Class",
    "extended": [
      "ClusterableSeries"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "Series": {
    "kindString": "Class",
    "extended": [
      "ChartItem"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "SeriesGroup": {
    "kindString": "Class",
    "extended": [
      "ChartItem"
    ],
    "props": [
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "layout",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SeriesGroupLayout",
          "id": 5026
        },
        "header": "",
        "content": "",
        "defaultValue": "SeriesGroupLayout.DEFAULT"
      },
      {
        "name": "layoutMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "layout 이  FILL 일 때 상대적 최대값.\n<br>",
        "defaultValue": "100",
        "defaultBlock": "100"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      }
    ]
  },
  "SeriesMarker": {
    "kindString": "Class",
    "config": [
      "chart.series.marker"
    ],
    "content": "",
    "extended": [
      "ChartItem"
    ],
    "props": [
      {
        "name": "radius",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "shape 의 반지름.",
        "defaultValue": "3"
      },
      {
        "name": "shape",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "Shape",
          "id": 22930
        },
        "header": "",
        "content": "명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다."
      }
    ]
  },
  "Trendline": {
    "kindString": "Class",
    "content": "시리즈 추세선.",
    "extended": [
      "ChartItem"
    ],
    "props": []
  },
  "WidgetSeries": {
    "kindString": "Class",
    "extended": [
      "Series"
    ],
    "props": [
      {
        "name": "center",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "centerX",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "centerY",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "WidgetSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "PaletteMode": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "MIXED",
        "value": "mixed"
      },
      {
        "name": "NORMAL",
        "value": "normal"
      },
      {
        "name": "RANDOM",
        "value": "random"
      }
    ]
  },
  "Palette": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "ChartItem"
    ],
    "props": []
  },
  "Theme": {
    "kindString": "Class",
    "content": "1. 먼저 css에  name  속성과 동일한 이름의 theme 속성들을 설정해야 한다.\n2. gradient가 필요하면  assets 에 등록한다.",
    "extended": [
      "ChartItem"
    ],
    "props": []
  },
  "ThemeCollection": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "SubtitlePosition": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "BOTTOM",
        "value": "bottom"
      },
      {
        "name": "LEFT",
        "value": "left"
      },
      {
        "name": "RIGHT",
        "value": "right"
      },
      {
        "name": "TOP",
        "value": "top"
      }
    ]
  },
  "Subtitle": {
    "kindString": "Class",
    "config": [
      "chart.subtitle"
    ],
    "content": "차트 sub 타이틀 설정 모델.",
    "extended": [
      "Title"
    ],
    "props": [
      {
        "name": "alignBase",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AlignBase",
          "id": 19228
        },
        "header": "",
        "content": "정렬 기준.",
        "defaultValue": "AlignBase.PLOT"
      },
      {
        "name": "text",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "부제목 텍스트",
        "defaultValue": "''"
      }
    ]
  },
  "Title": {
    "kindString": "Class",
    "config": [
      "chart.title"
    ],
    "content": "차트 타이틀 설정 모델.",
    "extended": [
      "ChartItem"
    ],
    "props": [
      {
        "name": "alignBase",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AlignBase",
          "id": 19228
        },
        "header": "",
        "content": "정렬 기준.",
        "defaultValue": "AlignBase.PLOT"
      },
      {
        "name": "text",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "제목 텍스트",
        "defaultValue": "'Title'"
      }
    ]
  },
  "Tooltip": {
    "kindString": "Class",
    "config": [],
    "content": "RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n<br>",
    "extended": [
      "ChartItem"
    ],
    "props": []
  },
  "CategoryTickPosition": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "DEFAULT",
        "value": "default",
        "content": "x축이면  POINT , y축이면  EDGE 이다."
      },
      {
        "name": "EDGE",
        "value": "edge",
        "content": "축 양끝과 카테고리들 사이에 표시한다."
      },
      {
        "name": "POINT",
        "value": "point",
        "content": "카테고리 중심에 표시한다."
      }
    ]
  },
  "CategoryAxis": {
    "kindString": "Class",
    "content": "지정된 카테고리 수로 축을 분할해서 각 카테고리에 연결된 데이터포인트들이 표시되게 한다.\n<br>\n1. categories 속성으로 카테고리 목록을 구성한다.\n2. 이 축에 연결된 시리즈들에 포함된 data point들의 문자열인 값들, 혹은 categoryField에 해당하는 값들을 수집한다.\n   수집된 category들 중 숫자가 아닌 것들은  startValue 부터 시작해서  valueStep  속성에 지정된 값씩 차례대로 증가한 값을 갖게된다.\n3. 각 카테고리 영역의 크기는  categoryStep  설정값에 따라 기본적으로 동일하게 배분되고, \n   카테고리 영역 중간점이 카테고리 값의 위치가 된다.\n    categories  속성으로 카테고리를 지정할 때, 상대적 크기를 width로 지정해서 각 카테고리의 값을 다르게 표시할 수 있다.\n4. tick mark나 label은 기본적으로 카테고리 값 위치에 표시된다.\n   tick mark는 카테고리 양끝에 표시될 수 있다.",
    "extended": [
      "Axis"
    ],
    "props": [
      {
        "name": "marginFar",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "차트 경계나 뒤쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "marginNear",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "Plot 영역이나 앞쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "maxValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다."
      },
      {
        "name": "minValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다."
      },
      {
        "name": "position",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisPosition",
          "id": 976
        },
        "header": "",
        "content": "표시 위치.",
        "defaultValue": "AxisPosition.NORMAL"
      },
      {
        "name": "reversed",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true면 반대 방향으로 point 위치들이 지정된다.",
        "defaultValue": "false"
      }
    ]
  },
  "CategoryAxisTick": {
    "kindString": "Class",
    "content": "축에 표시되는 tick 위치와 표시 마크에 관한 설정 모델.",
    "extended": [
      "AxisTick"
    ],
    "props": []
  },
  "AxisFit": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "DEFAULT",
        "value": "default",
        "content": "x축이면  VALUE , y축이면  TICK ."
      },
      {
        "name": "TICK",
        "value": "tick",
        "content": "축의 min/max가 tick에 해당하지 않는 경우 tick이 표시될 수 있도록 증가 시킨다."
      },
      {
        "name": "VALUE",
        "value": "value",
        "content": "축의 min/max에 맞춰 표시한다."
      }
    ]
  },
  "AxisBreak": {
    "kindString": "Class",
    "content": "from에서 to 이전까지의 값은 from으로 표시된다.\nspace는 break line 등을 표시하기 위한 공간.\n\n1. to가 from보다 커야 한다.\n2. ratio가 0보다 크고 1보다 작은 값으로 반드시 설정돼야 한다.\n3. 이전 break의 ratio보다 큰 값으로 설정돼야 한다.\n4. 1, 2, 3 중 하나라도 위반하면 병합에서 제외시킨다.\n5. 이전 범위와 겹치면 병합된다.",
    "extended": [
      "AxisItem"
    ],
    "props": []
  },
  "ContinuousAxis": {
    "kindString": "Class",
    "content": "연속 축 기반.",
    "extended": [
      "Axis"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": ""
      },
      {
        "name": "endFit",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisFit",
          "id": 6301
        },
        "header": "",
        "content": "축 끝 위치에 tick 표시 여부.\n strictMax 가 설정되면 무시되고  VALUE 로 적용된다.",
        "defaultValue": "AxisFit.DEFAULT"
      },
      {
        "name": "marginFar",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "차트 경계나 뒤쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "marginNear",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "Plot 영역이나 앞쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "maxPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "마지막 tick 뒤쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n endFit 이  AxitFit.TICK 일 때,\ndata point의 최대값과 마지막 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMax 가 지정되거나,  maxValue 가 계산된 최대값보다 큰 경우에도 이 속성은 무시된다."
      },
      {
        "name": "maxValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다."
      },
      {
        "name": "minPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "첫번째 tick 앞쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n startFit 이  AxitFit.TICK 일 때,\ndata point의 최소값과 첫번째 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMin 가 지정되거나,  minValue 이 계산된 최소값보다 작은 경우에도 이 속성은 무시된다."
      },
      {
        "name": "minValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다."
      },
      {
        "name": "nullable",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "data point의 이 축 값이 NaN일 때도 point를 표시할 지 여부.",
        "defaultValue": "true"
      },
      {
        "name": "padding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "minPadding ,  maxPadding 이 설정되지 않았을 때 적용되는 기본값이다.",
        "defaultValue": "0.05"
      },
      {
        "name": "position",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisPosition",
          "id": 976
        },
        "header": "",
        "content": "표시 위치.",
        "defaultValue": "AxisPosition.NORMAL"
      },
      {
        "name": "reversed",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true면 반대 방향으로 point 위치들이 지정된다.",
        "defaultValue": "false"
      },
      {
        "name": "startFit",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisFit",
          "id": 6301
        },
        "header": "",
        "content": "축 시작 위치에 tick 표시 여부.\n strictMin 이 설정되고  VALUE 로 적용된다.",
        "defaultValue": "AxisFit.DEFAULT"
      },
      {
        "name": "strictMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "무조건 적용되는 최대값.\n즉, 이 값보다 큰 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nmaxPadding도 적용되지 않는다."
      },
      {
        "name": "strictMin",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "무조건 적용되는 최소값.\n즉, 이 값보다 작은 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nminPadding도 적용되지 않는다."
      }
    ]
  },
  "ContinuousAxisTick": {
    "kindString": "Class",
    "content": "축에 표시되는 tick 위치와 표시 마크에 관한 설정 모델.",
    "extended": [
      "AxisTick"
    ],
    "props": [
      {
        "name": "baseAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "tick 개수를 맞춰야 하는 대상 axis.\nbase의 strictMin, strictMax가 설정되지 않아야 한다.\nbase의 startFit, endFilt의  TICK 으로 설정되어야 한다."
      }
    ]
  },
  "LinearAxis": {
    "kindString": "Class",
    "config": [
      "chart.xAxis[type=linear]",
      "chart.yAxis[type=linear]"
    ],
    "content": "선형 연속 축.\n값 사아의 비율과 축 길이 비율이 항상 동일한 축.",
    "extended": [
      "ContinuousAxis"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": ""
      },
      {
        "name": "endFit",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisFit",
          "id": 6301
        },
        "header": "",
        "content": "축 끝 위치에 tick 표시 여부.\n strictMax 가 설정되면 무시되고  VALUE 로 적용된다.",
        "defaultValue": "AxisFit.DEFAULT"
      },
      {
        "name": "marginFar",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "차트 경계나 뒤쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "marginNear",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "Plot 영역이나 앞쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "maxPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "마지막 tick 뒤쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n endFit 이  AxitFit.TICK 일 때,\ndata point의 최대값과 마지막 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMax 가 지정되거나,  maxValue 가 계산된 최대값보다 큰 경우에도 이 속성은 무시된다."
      },
      {
        "name": "maxValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다."
      },
      {
        "name": "minPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "첫번째 tick 앞쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n startFit 이  AxitFit.TICK 일 때,\ndata point의 최소값과 첫번째 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMin 가 지정되거나,  minValue 이 계산된 최소값보다 작은 경우에도 이 속성은 무시된다."
      },
      {
        "name": "minValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다."
      },
      {
        "name": "nullable",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "data point의 이 축 값이 NaN일 때도 point를 표시할 지 여부.",
        "defaultValue": "true"
      },
      {
        "name": "padding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "minPadding ,  maxPadding 이 설정되지 않았을 때 적용되는 기본값이다.",
        "defaultValue": "0.05"
      },
      {
        "name": "position",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisPosition",
          "id": 976
        },
        "header": "",
        "content": "표시 위치.",
        "defaultValue": "AxisPosition.NORMAL"
      },
      {
        "name": "reversed",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true면 반대 방향으로 point 위치들이 지정된다.",
        "defaultValue": "false"
      },
      {
        "name": "startFit",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisFit",
          "id": 6301
        },
        "header": "",
        "content": "축 시작 위치에 tick 표시 여부.\n strictMin 이 설정되고  VALUE 로 적용된다.",
        "defaultValue": "AxisFit.DEFAULT"
      },
      {
        "name": "strictMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "무조건 적용되는 최대값.\n즉, 이 값보다 큰 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nmaxPadding도 적용되지 않는다."
      },
      {
        "name": "strictMin",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "무조건 적용되는 최소값.\n즉, 이 값보다 작은 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nminPadding도 적용되지 않는다."
      }
    ]
  },
  "LogAxis": {
    "kindString": "Class",
    "config": [
      "chart.xAxis[type=log]",
      "chart.yAxis[type=log]"
    ],
    "content": "이 축에 연결된 시리즈들의 point y값을  Math.log10 으로 계산된 위치에 표시한다.",
    "extended": [
      "ContinuousAxis"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": ""
      },
      {
        "name": "endFit",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisFit",
          "id": 6301
        },
        "header": "",
        "content": "축 끝 위치에 tick 표시 여부.\n strictMax 가 설정되면 무시되고  AxisFit.VALUE 로 적용된다.",
        "defaultValue": "AxisFit.DEFAULT"
      },
      {
        "name": "marginFar",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "차트 경계나 뒤쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "marginNear",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "Plot 영역이나 앞쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "maxPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "마지막 tick 뒤쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n endFit 이  AxitFit.TICK 일 때,\ndata point의 최대값과 마지막 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMax 가 지정되거나,  maxValue 가 계산된 최대값보다 큰 경우에도 이 속성은 무시된다."
      },
      {
        "name": "maxValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다."
      },
      {
        "name": "minPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "첫번째 tick 앞쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n startFit 이  AxitFit.TICK 일 때,\ndata point의 최소값과 첫번째 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMin 가 지정되거나,  minValue 이 계산된 최소값보다 작은 경우에도 이 속성은 무시된다."
      },
      {
        "name": "minValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다."
      },
      {
        "name": "nullable",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "data point의 이 축 값이 NaN일 때도 point를 표시할 지 여부.",
        "defaultValue": "true"
      },
      {
        "name": "padding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "minPadding ,  maxPadding 이 설정되지 않았을 때 적용되는 기본값이다.",
        "defaultValue": "0.05"
      },
      {
        "name": "position",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisPosition",
          "id": 976
        },
        "header": "",
        "content": "표시 위치.",
        "defaultValue": "AxisPosition.NORMAL"
      },
      {
        "name": "reversed",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true면 반대 방향으로 point 위치들이 지정된다.",
        "defaultValue": "false"
      },
      {
        "name": "startFit",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisFit",
          "id": 6301
        },
        "header": "",
        "content": "축 시작 위치에 tick 표시 여부.\n strictMin 이 설정되고  AxisFit.VALUE 로 적용된다.",
        "defaultValue": "AxisFit.DEFAULT"
      },
      {
        "name": "strictMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "무조건 적용되는 최대값.\n즉, 이 값보다 큰 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nmaxPadding도 적용되지 않는다."
      },
      {
        "name": "strictMin",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "무조건 적용되는 최소값.\n즉, 이 값보다 작은 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nminPadding도 적용되지 않는다."
      }
    ]
  },
  "LogAxisTick": {
    "kindString": "Class",
    "content": "축에 표시되는 tick 위치와 표시 마크에 관한 설정 모델.",
    "extended": [
      "ContinuousAxisTick"
    ],
    "props": [
      {
        "name": "baseAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "tick 개수를 맞춰야 하는 대상 axis.\nbase의 strictMin, strictMax가 설정되지 않아야 한다.\nbase의 startFit, endFilt의  AxisFit.TICK 으로 설정되어야 한다."
      }
    ]
  },
  "TimeAxis": {
    "kindString": "Class",
    "config": [
      "chart.xAxis[type=time]",
      "chart.yAxis[type=time]"
    ],
    "content": "timeUnit(기본값 1)밀리초가 1에 해당한다.",
    "extended": [
      "ContinuousAxis"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": ""
      },
      {
        "name": "endFit",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisFit",
          "id": 6301
        },
        "header": "",
        "content": "축 끝 위치에 tick 표시 여부.\n strictMax 가 설정되면 무시되고  AxisFit.VALUE 로 적용된다.",
        "defaultValue": "AxisFit.DEFAULT"
      },
      {
        "name": "marginFar",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "차트 경계나 뒤쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "marginNear",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "Plot 영역이나 앞쪽 축 사이의 여백 크기.",
        "defaultValue": "0"
      },
      {
        "name": "maxPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "마지막 tick 뒤쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n endFit 이  AxitFit.TICK 일 때,\ndata point의 최대값과 마지막 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMax 가 지정되거나,  maxValue 가 계산된 최대값보다 큰 경우에도 이 속성은 무시된다."
      },
      {
        "name": "maxValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최대값.\n축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n maxPadding 도 무시된다."
      },
      {
        "name": "minPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "첫번째 tick 앞쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n이 값을 지정하지 않으면  padding 에 지정된 값을 따른다.\n startFit 이  AxitFit.TICK 일 때,\ndata point의 최소값과 첫번째 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n strictMin 가 지정되거나,  minValue 이 계산된 최소값보다 작은 경우에도 이 속성은 무시된다."
      },
      {
        "name": "minValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "명시적으로 지정하는 최소값.\n축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n minPadding 도 무시된다."
      },
      {
        "name": "nullable",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "data point의 이 축 값이 NaN일 때도 point를 표시할 지 여부.",
        "defaultValue": "true"
      },
      {
        "name": "padding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "minPadding ,  maxPadding 이 설정되지 않았을 때 적용되는 기본값이다.",
        "defaultValue": "0.05"
      },
      {
        "name": "position",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisPosition",
          "id": 976
        },
        "header": "",
        "content": "표시 위치.",
        "defaultValue": "AxisPosition.NORMAL"
      },
      {
        "name": "reversed",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true면 반대 방향으로 point 위치들이 지정된다.",
        "defaultValue": "false"
      },
      {
        "name": "startFit",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "AxisFit",
          "id": 6301
        },
        "header": "",
        "content": "축 시작 위치에 tick 표시 여부.\n strictMin 이 설정되고  AxisFit.VALUE 로 적용된다.",
        "defaultValue": "AxisFit.DEFAULT"
      },
      {
        "name": "strictMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "무조건 적용되는 최대값.\n즉, 이 값보다 큰 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nmaxPadding도 적용되지 않는다."
      },
      {
        "name": "strictMin",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "무조건 적용되는 최소값.\n즉, 이 값보다 작은 값을 갖는 시리즈 포인트들은 표시되지 않는다.\nminPadding도 적용되지 않는다."
      }
    ]
  },
  "TimeAxisTick": {
    "kindString": "Class",
    "content": "[주의] javascript에서 숫자값을 Date로 변환하거나, Date를 숫자로 변환할 때는 모두 new Date가 기준이 된다.",
    "extended": [
      "ContinuousAxisTick"
    ],
    "props": [
      {
        "name": "baseAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "tick 개수를 맞춰야 하는 대상 axis.\nbase의 strictMin, strictMax가 설정되지 않아야 한다.\nbase의 startFit, endFilt의  AxisFit.TICK 으로 설정되어야 한다."
      }
    ]
  },
  "SeriesEffect": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "SeriesHideEffect": {
    "kindString": "Class",
    "extended": [
      "SeriesEffect"
    ],
    "props": []
  },
  "BarRangeSeries": {
    "kindString": "Class",
    "extended": [
      "RangedSeries"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  SeriesGroupLayout.DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "BarRangeSeriesPoint": {
    "kindString": "Class",
    "content": "[low, y],\n[x, low, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "BarSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=bar]"
    ],
    "content": "",
    "extended": [
      "BasedSeries"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "위/아래 구분의 기준이 되는 값.\n<br>\n숫자가 아닌 값으로 지정하면 0으로 간주한다.",
        "defaultValue": "0"
      },
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "nullAsBase",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "null인 y값을  baseValue 로 간주한다.",
        "defaultValue": "false"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  SeriesGroupLayout.DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "BarSeriesGroup": {
    "kindString": "Class",
    "config": [
      "chart.series[type=bargroup]"
    ],
    "content": "",
    "extended": [
      "ClusterableSeriesGroup"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "layout",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SeriesGroupLayout",
          "id": 5026
        },
        "header": "",
        "content": "",
        "defaultValue": "SeriesGroupLayout.DEFAULT"
      },
      {
        "name": "layoutMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "layout 이  SeriesGroupLayout.FILL 일 때 상대적 최대값.\n<br>",
        "defaultValue": "100",
        "defaultBlock": "100"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      }
    ]
  },
  "BarSeriesPoint": {
    "kindString": "Class",
    "content": "[y]\n[x, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "BellCurveSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=bellcurve]"
    ],
    "content": "",
    "extended": [
      "AreaSeries"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "위/아래 구분의 기준이 되는 값.",
        "defaultValue": "0"
      },
      {
        "name": "belowStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": "baseValue  혹은 y축의 baseValue보다 작은 쪽의 선들에 적용되는 스타일."
      },
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "connectNullPoints",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true로 지정하면 y값이 지정되지 않은 null 포인터를 무시하고 다음 포인트에 연결한다.\nfalse면 null 포인트에서 연결이 끊어진다.",
        "defaultValue": "false"
      },
      {
        "name": "curved",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true면 spline 곡선으로 표시한다.",
        "defaultValue": "false",
        "defaultBlock": "false"
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "lineType",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineType",
          "id": 2015
        },
        "header": "",
        "content": "",
        "defaultValue": "LineType.DEFAULT"
      },
      {
        "name": "marker",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineSeriesMarker",
          "id": 11702
        },
        "header": "",
        "content": "",
        "defaultValue": "..."
      },
      {
        "name": "nullAsBase",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "null인 y값을  baseValue 로 간주한다.",
        "defaultValue": "false"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointsInSigma",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "5",
        "defaultBlock": "3"
      },
      {
        "name": "sigmas",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "3",
        "defaultBlock": "3"
      },
      {
        "name": "source",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "이 시리즈 data point들을 구성할 수 있는 데이터를 포함한 원본 시리즈.\n시리즈 이름이나 index로 지정한다."
      },
      {
        "name": "stepDir",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineStepDirection",
          "id": 12016
        },
        "header": "",
        "content": "",
        "defaultValue": "LineStepDirection.FORWARD"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "BellCurveSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "AreaSeriesPoint"
    ],
    "props": []
  },
  "BoxPlotSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=boxplot]"
    ],
    "content": "",
    "extended": [
      "RangedSeries"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "highField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": ""
      },
      {
        "name": "lowField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": ""
      },
      {
        "name": "midField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": ""
      },
      {
        "name": "minField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": ""
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  SeriesGroupLayout.DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "BoxPlotSeriesPoint": {
    "kindString": "Class",
    "content": "[min, rlow, mid, high, y]\n[x, min, rlow, mid, high, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "BubbleSizeMode": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "AREA",
        "value": "area"
      },
      {
        "name": "WIDTH",
        "value": "width"
      }
    ]
  },
  "BubbleSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=bubble]"
    ],
    "content": "",
    "extended": [
      "Series"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "radius",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "shape 의 반지름.",
        "defaultValue": "3"
      },
      {
        "name": "shape",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "Shape",
          "id": 22930
        },
        "header": "",
        "content": "명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다."
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "BubbleSeriesPoint": {
    "kindString": "Class",
    "content": "[y, z]\n[x, y, z]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "BumpSeriesGroup": {
    "kindString": "Class",
    "config": [
      "chart.series[type=bump]"
    ],
    "content": "포함된 시리즈들의 y값들을 비교해서 순위로 시리즈를 표시한다.\n<br>\n포함된 시리즈들의 x값이 동일한 data point y값들을 비교해서 순위를 yValue로 재설정한다.",
    "extended": [
      "ConstraintSeriesGroup"
    ],
    "props": [
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "layout",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SeriesGroupLayout",
          "id": 5026
        },
        "header": "",
        "content": "",
        "defaultValue": "SeriesGroupLayout.DEFAULT"
      },
      {
        "name": "layoutMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "layout 이  SeriesGroupLayout.FILL 일 때 상대적 최대값.\n<br>",
        "defaultValue": "100",
        "defaultBlock": "100"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      }
    ]
  },
  "CandlestickSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=candlestick]"
    ],
    "content": "",
    "extended": [
      "RangedSeries"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  SeriesGroupLayout.DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "CandlestickSeriesPoint": {
    "kindString": "Class",
    "content": "[low, open, close, high]\n[x, low, open, close, high]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "DumbbellSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=dumbbell]"
    ],
    "content": "BarRange 시리즈 변종.",
    "extended": [
      "ClusterableSeries"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  SeriesGroupLayout.DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "DumbbellSeriesMarker": {
    "kindString": "Class",
    "config": [
      "chart.series.marker"
    ],
    "content": "",
    "extended": [
      "SeriesMarker"
    ],
    "props": [
      {
        "name": "radius",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "shape 의 반지름.",
        "defaultValue": "4"
      },
      {
        "name": "shape",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "Shape",
          "id": 22930
        },
        "header": "",
        "content": "명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다.",
        "defaultValue": "Shape.CIRCLE"
      }
    ]
  },
  "DumbbellSeriesPoint": {
    "kindString": "Class",
    "content": "[low, y]\n[x, low, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "EqualizerSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=equalizer]"
    ],
    "content": "Bar 시리즈 변종.",
    "extended": [
      "BasedSeries"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "위/아래 구분의 기준이 되는 값.\n<br>\n숫자가 아닌 값으로 지정하면 0으로 간주한다.",
        "defaultValue": "0"
      },
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "nullAsBase",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "null인 y값을  baseValue 로 간주한다.",
        "defaultValue": "false"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  SeriesGroupLayout.DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "EqualizerSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "ErrorBarSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=errorbar]"
    ],
    "content": "",
    "extended": [
      "RangedSeries"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultValue": "0.3",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  SeriesGroupLayout.DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "ErrorBarSeriesPoint": {
    "kindString": "Class",
    "content": "[low, y]\n[x, low, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "FunnelSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=funnel]"
    ],
    "content": "",
    "extended": [
      "WidgetSeries"
    ],
    "props": [
      {
        "name": "center",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "centerX",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "centerY",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "height",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SizeValue",
          "id": 19126
        },
        "header": "",
        "content": "",
        "defaultValue": "FunnelSeries.DEF_HEIGHT"
      },
      {
        "name": "legendByPoint",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "데이터 포인트별 legend 항목을 표시한다.",
        "defaultValue": "false"
      },
      {
        "name": "neckHeight",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SizeValue",
          "id": 19126
        },
        "header": "",
        "content": "",
        "defaultValue": "FunnelSeries.DEF_NECK_HEIGHT"
      },
      {
        "name": "neckWidth",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SizeValue",
          "id": 19126
        },
        "header": "",
        "content": "",
        "defaultValue": "FunnelSeries.DEF_NECK_WIDTH"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "reversed",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "",
        "defaultValue": "false"
      },
      {
        "name": "width",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SizeValue",
          "id": 19126
        },
        "header": "",
        "content": "",
        "defaultValue": "FunnelSeries.DEF_WIDTH"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "FunnelSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "WidgetSeriesPoint"
    ],
    "props": []
  },
  "HeatmapSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=heatmap]"
    ],
    "content": "[셀 색상]\n1. color-axis가 연결되면 거기에서 색을 가져온다.\n2. series의 minColor, maxColor 사이의 색으로 가져온다.\n3. series의 기본 색상과 흰색 사이의 색으로 가져온다.",
    "extended": [
      "Series"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "HeatmapSeriesPoint": {
    "kindString": "Class",
    "content": "[y, heat],\n[x, y, heat]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "BinsNumber": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "RICE",
        "value": "rice"
      },
      {
        "name": "SQURE_ROOT",
        "value": "squreRoot"
      },
      {
        "name": "STURGES",
        "value": "struges"
      }
    ]
  },
  "HistogramSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=histogram]"
    ],
    "content": "",
    "extended": [
      "Series"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "HistogramSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "LineStepDirection": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "BACKWARD",
        "value": "backward"
      },
      {
        "name": "FORWARD",
        "value": "forward"
      }
    ]
  },
  "AreaRangeSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=arearange]"
    ],
    "content": "",
    "extended": [
      "LineSeriesBase"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "marker",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineSeriesMarker",
          "id": 11702
        },
        "header": "",
        "content": "",
        "defaultValue": "..."
      },
      {
        "name": "nullAsBase",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "null인 y값을  baseValue 로 간주한다.",
        "defaultValue": "false"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "AreaRangeSeriesPoint": {
    "kindString": "Class",
    "content": "[low, high(y)]\n[x, low, high(y)]",
    "extended": [
      "AreaSeriesPoint"
    ],
    "props": []
  },
  "AreaSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=area]"
    ],
    "content": "",
    "extended": [
      "LineSeries"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "위/아래 구분의 기준이 되는 값.",
        "defaultValue": "0"
      },
      {
        "name": "belowStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": "baseValue  혹은 y축의 baseValue보다 작은 쪽의 선들에 적용되는 스타일."
      },
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "connectNullPoints",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true로 지정하면 y값이 지정되지 않은 null 포인터를 무시하고 다음 포인트에 연결한다.\nfalse면 null 포인트에서 연결이 끊어진다.",
        "defaultValue": "false"
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "lineType",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineType",
          "id": 2015
        },
        "header": "",
        "content": "",
        "defaultValue": "LineType.DEFAULT"
      },
      {
        "name": "marker",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineSeriesMarker",
          "id": 11702
        },
        "header": "",
        "content": "",
        "defaultValue": "..."
      },
      {
        "name": "nullAsBase",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "null인 y값을  baseValue 로 간주한다.",
        "defaultValue": "false"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "stepDir",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineStepDirection",
          "id": 12016
        },
        "header": "",
        "content": "",
        "defaultValue": "LineStepDirection.FORWARD"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "AreaSeriesGroup": {
    "kindString": "Class",
    "config": [
      "chart.series[type=areagroup]"
    ],
    "content": "",
    "extended": [
      "SeriesGroup"
    ],
    "props": [
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "layout",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SeriesGroupLayout",
          "id": 5026
        },
        "header": "",
        "content": "",
        "defaultValue": "SeriesGroupLayout.DEFAULT"
      },
      {
        "name": "layoutMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "layout 이  SeriesGroupLayout.FILL 일 때 상대적 최대값.\n<br>",
        "defaultValue": "100",
        "defaultBlock": "100"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      }
    ]
  },
  "AreaSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "LineSeriesPoint"
    ],
    "props": []
  },
  "LineSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=line]"
    ],
    "content": "",
    "extended": [
      "LineSeriesBase"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "위/아래 구분의 기준이 되는 값.",
        "defaultValue": "0"
      },
      {
        "name": "belowStyle",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SVGStyleOrClass",
          "id": 19139
        },
        "header": "",
        "content": "baseValue  혹은 y축의 baseValue보다 작은 쪽의 선들에 적용되는 스타일."
      },
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "connectNullPoints",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "true로 지정하면 y값이 지정되지 않은 null 포인터를 무시하고 다음 포인트에 연결한다.\nfalse면 null 포인트에서 연결이 끊어진다.",
        "defaultValue": "false"
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "lineType",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineType",
          "id": 2015
        },
        "header": "",
        "content": "",
        "defaultValue": "LineType.DEFAULT"
      },
      {
        "name": "marker",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineSeriesMarker",
          "id": 11702
        },
        "header": "",
        "content": "",
        "defaultValue": "..."
      },
      {
        "name": "nullAsBase",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "null인 y값을  baseValue 로 간주한다.",
        "defaultValue": "false"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "stepDir",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineStepDirection",
          "id": 12016
        },
        "header": "",
        "content": "",
        "defaultValue": "LineStepDirection.FORWARD"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "LineSeriesBase": {
    "kindString": "Class",
    "extended": [
      "Series"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "marker",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineSeriesMarker",
          "id": 11702
        },
        "header": "",
        "content": "",
        "defaultValue": "..."
      },
      {
        "name": "nullAsBase",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "null인 y값을  baseValue 로 간주한다.",
        "defaultValue": "false"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "LineSeriesGroup": {
    "kindString": "Class",
    "config": [
      "chart.series[type=linegroup]"
    ],
    "content": "",
    "extended": [
      "SeriesGroup"
    ],
    "props": [
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "layout",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SeriesGroupLayout",
          "id": 5026
        },
        "header": "",
        "content": "",
        "defaultValue": "SeriesGroupLayout.DEFAULT"
      },
      {
        "name": "layoutMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "layout 이  SeriesGroupLayout.FILL 일 때 상대적 최대값.\n<br>",
        "defaultValue": "100",
        "defaultBlock": "100"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      }
    ]
  },
  "LineSeriesMarker": {
    "kindString": "Class",
    "content": "chart.series[type=line|area|arearange].marker",
    "extended": [
      "SeriesMarker"
    ],
    "props": [
      {
        "name": "firstVisible",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "MarkerVisibility",
          "id": 3624
        },
        "header": "",
        "content": "첫번째 point의 marker 표시 여부.",
        "defaultValue": "MarkerVisibility.DEFAULT"
      },
      {
        "name": "lastVisible",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "MarkerVisibility",
          "id": 3624
        },
        "header": "",
        "content": "첫번째 point의 marker 표시 여부.",
        "defaultValue": "MarkerVisibility.DEFAULT"
      },
      {
        "name": "maxVisible",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "MarkerVisibility",
          "id": 3624
        },
        "header": "",
        "content": "최대값 point들의 marker 표시 여부.",
        "defaultValue": "MarkerVisibility.DEFAULT"
      },
      {
        "name": "minVisible",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "MarkerVisibility",
          "id": 3624
        },
        "header": "",
        "content": "최소값 point들의 marker 표시 여부.",
        "defaultValue": "MarkerVisibility.DEFAULT"
      },
      {
        "name": "radius",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "4"
      },
      {
        "name": "shape",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "Shape",
          "id": 22930
        },
        "header": "",
        "content": "명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다."
      }
    ]
  },
  "LineSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "LollipopSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=lollipop]"
    ],
    "content": "Bar 시리즈 변종.",
    "extended": [
      "BasedSeries"
    ],
    "props": [
      {
        "name": "baseValue",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "위/아래 구분의 기준이 되는 값.\n<br>\n숫자가 아닌 값으로 지정하면 0으로 간주한다.",
        "defaultValue": "0"
      },
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "nullAsBase",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "null인 y값을  baseValue 로 간주한다.",
        "defaultValue": "false"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  SeriesGroupLayout.DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "LollipopSeriesMarker": {
    "kindString": "Class",
    "config": [
      "chart.series.marker"
    ],
    "content": "",
    "extended": [
      "SeriesMarker"
    ],
    "props": [
      {
        "name": "radius",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "shape 의 반지름.",
        "defaultValue": "4"
      },
      {
        "name": "shape",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "Shape",
          "id": 22930
        },
        "header": "",
        "content": "명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다.",
        "defaultValue": "Shape.CIRCLE"
      }
    ]
  },
  "LollipopSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "OhlcSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=ohlc]"
    ],
    "content": "",
    "extended": [
      "CandlestickSeries"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  SeriesGroupLayout.DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "OhlcSeriesPoint": {
    "kindString": "Class",
    "content": "Low/Open/Close/High 네 값을 수직선(low-high)과 \n왼쪽(open), 오른쪽(close) 수평 선분으로 표시한다.<br>\nclose가 open보다 큰 경와 작은 경우를 다른 색으로 표시할 수 있다.<br>\n일정 기간 동안 한 값의 대체적인 변화를 표시한다.\n\n[low, open, close, high]\n[x, low, open, close, high]",
    "extended": [
      "CandlestickSeriesPoint"
    ],
    "props": []
  },
  "ParetoSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=pareto]"
    ],
    "content": "참조하는 원본 시리즈의 누적 비율을 표시한다.",
    "extended": [
      "LineSeriesBase"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "marker",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "LineSeriesMarker",
          "id": 11702
        },
        "header": "",
        "content": "",
        "defaultValue": "..."
      },
      {
        "name": "nullAsBase",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "null인 y값을  baseValue 로 간주한다.",
        "defaultValue": "false"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "ParetoSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "PieSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=pie]"
    ],
    "content": "",
    "extended": [
      "RadialSeries"
    ],
    "props": [
      {
        "name": "autoSlice",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "클릭한 데이터 포인트를 slice 시킨다.\n기존 slice 됐던 포인트는 원복된다.",
        "defaultValue": "true"
      },
      {
        "name": "borderRadius",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      },
      {
        "name": "center",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "centerX",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "centerY",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": ""
      },
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "groupSize",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "1"
      },
      {
        "name": "innerSize",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": "0보다 큰 값을 지정해서 도넛 형태로 표시할 수 있다.\n innerText 로 도넛 내부에 표시될 텍스트를 지정할 수 있다."
      },
      {
        "name": "innerText",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "PieSeriesText"
        },
        "header": "",
        "content": "innerSize 가 0보다 클 때, 도넛 내부에 표시되는 텍스트.\n기본 클래스 selector는 <b>'rct-pie-series-inner'</b>이다.",
        "defaultValue": "..."
      },
      {
        "name": "labelDistance",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "25"
      },
      {
        "name": "legendByPoint",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "데이터 포인트별 legend 항목을 표시한다.",
        "defaultValue": "false"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "size",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": "시리즈 본체의 크기.\n<br>\n픽셀 크기나 차지할 수 있는 전체 크기에 대한 상대적 크기로 지정할 수 있다.",
        "defaultValue": "RadialSeries.SIZE"
      },
      {
        "name": "sliceDuration",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "Slice animation duration.\n밀리세컨드(ms) 단위로 지정.",
        "defaultValue": "300"
      },
      {
        "name": "sliceOffset",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": "",
        "defaultValue": "'7%'"
      },
      {
        "name": "startAngle",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "PieSeriesGroup": {
    "kindString": "Class",
    "config": [
      "chart.series[type=piegroup]"
    ],
    "content": "",
    "extended": [
      "SeriesGroup"
    ],
    "props": [
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "innerSize",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": "Pie 시리즈들의 그룹이고, \n layout 이  SeriesGroupLayout.FILL 이나  SeriesGroupLayout.STACK 인 경우,\n경우 0보다 큰 값을 지정해서 도넛 형태로 표시할 수 있다.\n<br>\n포함된 pie 시리즈들의 innerSize는 무시된다.",
        "defaultValue": "0"
      },
      {
        "name": "layout",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "SeriesGroupLayout",
          "id": 5026
        },
        "header": "",
        "content": "",
        "defaultValue": "SeriesGroupLayout.DEFAULT"
      },
      {
        "name": "layoutMax",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "layout 이  SeriesGroupLayout.FILL 일 때 상대적 최대값.\n<br>",
        "defaultValue": "100",
        "defaultBlock": "100"
      },
      {
        "name": "polarSize",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "RtPercentSize",
          "id": 19116
        },
        "header": "",
        "content": "polar 그룹일 때 원형 플롯 영역의 크기.\n<br>\n픽셀 크기나 차지할 수 있는 전체 크기에 대한 상대적 크기로 지정할 수 있다.\n<br>\nPie 시리즈들의 그룹이고, \n layout 이  SeriesGroupLayout.FILL 이나  SeriesGroupLayout.STACK 인 경우\n개별 시리즈의 size 대신 이 속성값으로 표시되고,\n각 시리즈의 size는 상대 크기로 적용된다.",
        "defaultValue": "'80%'"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      }
    ]
  },
  "PieSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "WidgetSeriesPoint"
    ],
    "props": []
  },
  "ScatterSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=scatter]"
    ],
    "content": "",
    "extended": [
      "Series"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "radius",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "shape 의 반지름.",
        "defaultValue": "5"
      },
      {
        "name": "shape",
        "type": "",
        "dtype": {
          "type": "reference",
          "name": "Shape",
          "id": 22930
        },
        "header": "",
        "content": "명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다."
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "ScatterSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "TreemapAlgorithm": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "SLICE",
        "value": "slice",
        "content": "수평/수직 한 쪽 방향으로 나눈다.\n<br>\nlevel이 바뀌면 방향을 바꾼다."
      },
      {
        "name": "SLICE_DICE",
        "value": "sliceDice",
        "content": "방향을 번갈아 가면서 나눈다."
      },
      {
        "name": "SQUARIFY",
        "value": "squarify",
        "content": "최대한 정사각형에 가까운 비율을 유지한다.\n<br>\n줄마다 배치 방향을 바꾼다.\n사용자가 크기를 비교하기에 유리하다."
      },
      {
        "name": "STRIP",
        "value": "strip",
        "content": "최대한 정사각형에 가까운 비율을 유지한다.\n<br>\n같은 방향을 유지하면 배치한다."
      }
    ]
  },
  "TreeNode": {
    "kindString": "Class",
    "extended": [],
    "props": []
  },
  "TreemapSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=treemap]"
    ],
    "content": "",
    "extended": [
      "Series"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "TreemapSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "ArrowHead": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "CLOSE",
        "value": "close"
      },
      {
        "name": "NONE",
        "value": "none"
      },
      {
        "name": "OPEN",
        "value": "open"
      }
    ]
  },
  "VectorOrigin": {
    "kindString": "Enumeration",
    "props": [
      {
        "name": "CENTER",
        "value": "center"
      },
      {
        "name": "END",
        "value": "end"
      },
      {
        "name": "START",
        "value": "start"
      }
    ]
  },
  "VectorSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=vector]"
    ],
    "content": "",
    "extended": [
      "Series"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "VectorSeriesPoint": {
    "kindString": "Class",
    "content": "[y, length, angle]\n[x, y, length, angle]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  },
  "WaterfallSeries": {
    "kindString": "Class",
    "config": [
      "chart.series[type=waterfall]"
    ],
    "content": "",
    "extended": [
      "RangedSeries"
    ],
    "props": [
      {
        "name": "clipped",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "body 영역을 벗어난 data point view는 잘라낸다.",
        "defaultValue": "false"
      },
      {
        "name": "color",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "데이터 포인트 기본 색."
      },
      {
        "name": "colorField",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면, data point의 값이 객체일 때 'color'."
      },
      {
        "name": "dataProp",
        "type": "string",
        "dtype": {
          "type": "intrinsic",
          "name": "string"
        },
        "header": "",
        "content": "undefined이면 \"data\"."
      },
      {
        "name": "displayInLegend",
        "type": "boolean",
        "dtype": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "header": "",
        "content": "명시적 false로 지정하면 legend에 표시하지 않는다.",
        "defaultValue": "true"
      },
      {
        "name": "pointColors",
        "type": "boolean | string[]",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "boolean"
          },
          {
            "type": "array",
            "name": "string[]"
          }
        ],
        "header": "",
        "content": "데이터 포인트별 색들을 지정한다.\nfalse로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\ntrue로 지정하면 기본 색들로 표시된다.\n색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\nundefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다."
      },
      {
        "name": "pointPadding",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n<br>\npoint가 차지할 원래 크기에 대한 상대 값으로서,\n0 ~ 1 사이의 비율 값으로 지정한다.",
        "defaultBlock": "undefined 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2."
      },
      {
        "name": "pointWidth",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "시리즈가 그룹에 포함되지 않거나,\n포함된 그룹의 layout이  SeriesGroupLayout.DEFAULT 이거나 특별히 설정되지 않아서,\n그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n또, 그룹에 포함되고 그룹의 layout이  SeriesGroupLayout.DEFAULT",
        "defaultValue": "1"
      },
      {
        "name": "xAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "xField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'."
      },
      {
        "name": "xStart",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 첫번째 데이터 point에 설정되는 x값.\n이 후에는  xStep 씩 증가시키면서 설정한다.\n'time' 축일 때, 정수 값 대신 시간 단위('day', 'week', 'month', 'year')로 지정할 수 있다.\n숫자로 지정하면 1은 1밀리초로 지정된다. \n이 속성이 지징되지 않은 경우  ChartOptions.xStart 가 적용된다."
      },
      {
        "name": "xStep",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "x축 값이 설정되지 않은 데이터 point에 지정되는 x값의 간격.\n첫번째 값은  xStart 로 설정한다.\ntime 축일 때, 정수 값 대신 시간 단위('y', 'm', 'd', 'h', 'n', 's')로 지정할 수 있다.\n이 속성이 지정되지 않으면  ChartOptions.xStep 이 적용된다."
      },
      {
        "name": "yAxis",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": ""
      },
      {
        "name": "yField",
        "type": "string | number",
        "dtype": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          }
        ],
        "header": "",
        "content": "undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'."
      },
      {
        "name": "zOrder",
        "type": "number",
        "dtype": {
          "type": "intrinsic",
          "name": "number"
        },
        "header": "",
        "content": "",
        "defaultValue": "0"
      }
    ]
  },
  "WaterfallSeriesPoint": {
    "kindString": "Class",
    "content": "데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n\nisNull과 visible은 다르다.\nisNull이어도 자리를 차지한다.\n\n[y]\n[x, y]",
    "extended": [
      "DataPoint"
    ],
    "props": []
  }
}