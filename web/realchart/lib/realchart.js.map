{"version":3,"file":"realchart.js","sources":["../../../src/common/RcObject.ts","../../../src/common/Common.ts","../../../src/common/RcLocale.ts","../../../src/common/Types.ts","../../../src/common/Dom.ts","../../../src/common/Utils.ts","../../../src/common/Rectangle.ts","../../../src/common/impl/SvgShape.ts","../../../src/common/RcControl.ts","../../../src/common/NumberFormatter.ts","../../../src/common/RichText.ts","../../../src/model/ChartItem.ts","../../../src/model/Crosshair.ts","../../../src/model/Axis.ts","../../../src/model/Body.ts","../../../src/model/Legend.ts","../../../src/model/ChartTypes.ts","../../../src/model/DataPoint.ts","../../../src/model/Tooltip.ts","../../../src/model/axis/CategoryAxis.ts","../../../src/model/Series.ts","../../../src/model/Title.ts","../../../src/model/axis/LinearAxis.ts","../../../src/model/axis/LogAxis.ts","../../../src/model/axis/TimeAxis.ts","../../../src/model/series/BarRangeSeries.ts","../../../src/model/series/BarSeries.ts","../../../src/model/series/LineSeries.ts","../../../src/model/series/BellCurveSeries.ts","../../../src/model/series/BoxPlotSeries.ts","../../../src/model/series/BubbleSeries.ts","../../../src/model/series/BumpSeriesGroup.ts","../../../src/model/series/CandlestickSeries.ts","../../../src/model/series/DumbbellSeries.ts","../../../src/model/series/EqualizerSeries.ts","../../../src/model/series/ErrorBarSeries.ts","../../../src/model/series/FunnelSeries.ts","../../../src/model/series/HeatmapSeries.ts","../../../src/model/series/HistogramSeries.ts","../../../src/model/series/LollipopSeries.ts","../../../src/model/series/OhlcSeries.ts","../../../src/model/series/ParetoSeries.ts","../../../src/model/series/PieSeries.ts","../../../src/model/series/ScatterSeries.ts","../../../src/model/series/TreemapSeries.ts","../../../src/model/series/VectorSeries.ts","../../../src/model/series/WaterfallSeries.ts","../../../src/model/Chart.ts","../../../src/tool/PointerHandler.ts","../../../src/common/Point.ts","../../../src/common/Size.ts","../../../src/common/impl/GroupElement.ts","../../../src/common/impl/PathElement.ts","../../../src/common/Color.ts","../../../src/common/impl/TextElement.ts","../../../src/common/Sides.ts","../../../src/common/impl/RectElement.ts","../../../src/view/ChartElement.ts","../../../src/view/AxisView.ts","../../../src/common/ElementPool.ts","../../../src/common/PathBuilder.ts","../../../src/common/impl/ImageElement.ts","../../../src/common/impl/LabelElement.ts","../../../src/common/RcAnimation.ts","../../../src/view/animation/SeriesAnimation.ts","../../../src/view/SeriesView.ts","../../../src/view/series/LineSeriesView.ts","../../../src/view/series/AreaRangeSeriesView.ts","../../../src/view/series/AreaSeriesView.ts","../../../src/view/series/BarRangeSeriesView.ts","../../../src/common/impl/SectorElement.ts","../../../src/view/series/BarSeriesView.ts","../../../src/view/series/BellCurveSeriesView.ts","../../../src/view/series/BoxPlotSeriesView.ts","../../../src/view/series/BubbleSeriesView.ts","../../../src/view/series/CandlestickSeriesView.ts","../../../src/view/series/DumbbellSeriesView.ts","../../../src/view/series/EqualizerSeriesView.ts","../../../src/view/series/ErrorBarSeriesView.ts","../../../src/view/series/FunnelSeriesView.ts","../../../src/view/series/HeatmapSeriesView.ts","../../../src/view/series/HistogramSeriesView.ts","../../../src/view/series/LollipopSeriesView.ts","../../../src/view/series/OhlcSeriesView.ts","../../../src/view/series/ParetoSeriesView.ts","../../../src/common/impl/CircleElement.ts","../../../src/view/series/PieSeriesView.ts","../../../src/view/series/ScatterSeriesView.ts","../../../src/view/series/TreemapSeriesView.ts","../../../src/view/series/VectorSeriesView.ts","../../../src/view/series/WaterfallSeriesView.ts","../../../src/view/BodyView.ts","../../../src/view/LegendView.ts","../../../src/view/PolarBodyView.ts","../../../src/view/TitleView.ts","../../../src/view/TooltipView.ts","../../../src/view/ChartView.ts","../../../src/ChartControl.ts","../../../src/main.ts"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// RcObject.ts\n// 2021. 11. 30. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isObject } from \"./Common\";\n\nlet $$_hash = 0;\n\n/**\n * RealReport-Chart 라이브러리 클래스 모델의 최상위 base 클래스.\n * <br>\n * \n * @see concepts.dev_guide 개발 가이드\n * @see concepts.about RealTouch 개요\n */\nexport abstract class RcObject {\n    \n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    static destroy(obj: RcObject): null {\n        return obj && obj.destroy();\n    }\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private $_hash: string;\n    private $_destroyed = false;\n    private $_destroying = false;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n\tconstructor(noHash?: boolean) {\n        if (!noHash) {\n            this.$_hash = String($$_hash++);\n        }\n\t}\n\n    /**\n     * 객체가 소유한 참조 등을 해제하고 null을 리턴한다.\n     * \n     * ```\n     * list = lis.destroy();\n     * ```\n     * \n     * @returns null\n     */\n    destroy(): null {\n        if (!this.$_destroyed && !this.$_destroying) {\n            this.$_destroyed = true;\n            this.$_destroying = true;\n            this._doDestory();\n        }\n        return null;\n    }\n    \n    protected _doDestory(): void {}\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get destroying(): boolean {\n        return this.$_destroying;\n    }\n\n    get hash(): string {\n        return this.$_hash;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    public isMe(hash: string): boolean {\n        return hash === this.$_hash;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    toString(): string {\n        return this.constructor.name;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    /**\n     * @internal\n     * \n     * template param으로부터 생성되는 값은 문자열일 수 있다.\n     */\n    toBool(v: any): boolean {\n        return typeof v === 'string' ? v === 'true': v;\n    }\n\n    toNum(v: any, def: number = NaN): number {\n        v = parseFloat(v);\n        return isNaN(v) ? def : v;\n    }\n}\n\nexport abstract class RcWrappableObject extends RcObject {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    protected _wrapper: any;\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    wrapper(): any {\n        return this._wrapper;\n    }\n\n    wrapperOrThis(): any {\n        return this._wrapper || this;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    createWrapper<T>(clazz: { new(): T}): T {\n        const w = this._wrapper = new clazz();\n        w['$_c'] = this;\n        return w;\n    } \n\n    setWrapper<T>(wrapper: T): T {\n        this._wrapper = wrapper;\n        wrapper['$_c'] = this;\n        return wrapper;\n    } \n\n    isWrapper(w: any): boolean {\n        return w === this._wrapper;\n    }\n}\n\nexport abstract class RcWrapper<T extends RcWrappableObject>  extends RcObject {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    protected $_c: T;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    protected _doDestory(): void {\n        this.$_c = null;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n\nexport abstract class RcEventProvider<T> extends RcObject {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _listeners: T[] = [];\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    addListener(listener: T): void {\n        if (listener && this._listeners.indexOf(listener) < 0) {\n            this._listeners.push(listener);\n        }\n    }\n\n    removeListener(listener: T): void {\n        const i = this._listeners.indexOf(listener);\n        if (i >= 0) {\n            this._listeners.splice(i, 1);\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    /**\n     * event로 지정한 함수가 정의된 모든 리스너에 대해 실행한다.\n     * 리스너 scope으로 실행하고, 첫번째 매개변수로 이 객체가 전달된다.\n     * 다만, 리스너들 중 하나라도 undefined가 아닌 값을 리턴하면,\n     * 그 값을 리턴하면서 멈춘다.\n     */\n    protected _fireEvent(event: string, ...args: any[]): any {\n        const arr = Array.prototype.slice.call(arguments, 0);\n        arr[0] = this;\n\n        for (const listener of this._listeners) {\n            const func = listener[event];\n            if (func) {\n                const rslt = func.apply(listener, arr);\n                if (rslt !== void 0) {\n                    return rslt;\n                }\n            }\n        }\n    }\n}\n\nexport interface IEventArgs {\n}\n\n/**\n * @internal\n * \n * {@link RtListControl} 및 {@link RtDataSource} 이벤트 콜백 형식.\n * <br>\n * 여러 값이 포함된 단일 매개변수로 호출된다.\n */\nexport type RcEventHandler<T extends IEventArgs> = (args?: T) => void;\nexport type RcSimpleEventhandler = (arg: any) => void;","////////////////////////////////////////////////////////////////////////////////\n// Common.ts\n// 2021. 11. 26. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nexport const SVGNS = 'http://www.w3.org/2000/svg';\nexport const isObject = function (v: any): boolean { return v && typeof v === 'object' && !Array.isArray(v); }\nexport const isArray = Array.isArray;\nexport const isFunc = function (v: any): v is Function { return typeof v === 'function'; }\nexport const isString = function (v: any): v is string { return typeof v === 'string'; }\nexport const isNumber = function (v: any): v is number { return typeof v === 'number'; }\nexport const isBoolean = function (v: any): v is boolean { return typeof v === 'boolean'; }\nexport const isNone = function (v: any): boolean { return v == null || isNaN(v); }\nexport const pickNum = function(v1: any, v2: any): number {\n    v1 = parseFloat(v1);\n    return !isNaN(v1) ? v1 : parseFloat(v2);\n}\nexport const pickNum3 = function(v1: any, v2: any, v3: any): number {\n    let v = parseFloat(v1);\n    if (!isNaN(v)) return v;\n    v = parseFloat(v2);\n    return !isNaN(v) ? v : parseFloat(v3);\n}\nexport const pickProp = function(v1: any, v2: any): any {\n    return v1 !== void 0 ? v1 : v2;\n}\nexport const pickProp3 = function(v1: any, v2: any, v3: any): any {\n    return v1 !== void 0 ? v1 : v2 !== void 0 ? v2 : v3;\n}\nexport const pickProp4 = function(v1: any, v2: any, v3: any, v4: any): any {\n    return v1 !== void 0 ? v1 : v2 !== void 0 ? v2 : v3 != void 0 ? v3 : v4;\n}\n\nexport class RtLog {\n\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    private static _logging = false;\n    static setLogging(enabled = true) {\n        this._logging = enabled;\n    }\n    static log(...messages: any[]): void {\n        this._logging && console.log.apply(console, messages);\n    }\n}\n\nexport class RtDebug {\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    private static _debugging = false;\n    static setDebugging(enabled = true) {\n        this._debugging = enabled;\n    }\n    static debugging(): void {\n        if (this._debugging) {\n            debugger;\n        }\n    }\n}\nexport const NOT_IMPLEMENT = new Error(\"Not Implemented.\");\n","////////////////////////////////////////////////////////////////////////////////\n// RcLocale.ts\n// 2023. 01. 04. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isObject } from \"./Common\";\n\nexport interface IRcLocale {\n    // formats\n    dateFormat: string;\n    am: string;\n    pm: string;\n\n    // data messages\n    notExistsDataField: string;\n    notSpecifiedDataField: string;\n    invalidFieldName: string;\n    invalidFieldIndex: string;\n    invalidRowIndex: string;\n    canNotModifyData: string;\n    canNotModifyDeleted: string;\n    requiredField: string;\n    invalidValueInDomain: string;\n    invalidValueInRange: string;\n    invalidToIndex: string;\n    requireSourceData: string;\n    requireFilterName: string;\n    alreadyEditing: string;\n\n    // other messages\n    invalidDateFormat: string,\n    invalidSizeValue: string;\n    invalidOuterDiv: string;\n    canNotHorzGrouping: string;\n    dataMustSet: string;\n    requireGroupingInfos: string;\n    canNotRowGrouping: string;\n    canNotDataGrouping: string;\n    canNotHorzInGrouping: string;\n    unknownLayoutType: string;\n    layoutMustSet: string;\n    unknownItemViewType: string;\n    requireCommandName: string;\n    commandNameDuplicated: string;\n    requireDataOrGroup: string;\n    requireTableName: string;\n    alreadyTableExists: string;\n    selectEditRowFirst: string;\n}\n\nexport const Locales: {[lang: string]: IRcLocale} = {};\n\nLocales['ko'] = {\n    // formats\n    dateFormat: 'yyyy.MM.dd',\n    am: '오전',\n    pm: '오후',\n\n    // data messages\n    notExistsDataField: '존재하지 않는 필드입니다: %1',\n    notSpecifiedDataField: '하나 이상의 데이터필드가 설정돼야 합니다.',\n    invalidFieldName: '잘못된 데이터필드 이름입니다: %1',\n    invalidFieldIndex: '잘못된 데이터필드 index입니다: %1',\n    invalidRowIndex: '잘못된 데이터행 index입니다: %1',\n    canNotModifyData: '읽기 전용 데이터를 변경할 수 없습니다.',\n    canNotModifyDeleted: '삭제 상태 행을 변경할 수 없습니다: %1',\n    requiredField: '반드시 값을 지정해야 하는 필드입니다: %1',\n    invalidValueInDomain: '값이 필드 값 도메인에 포함되지 않습니다: %1',\n    invalidValueInRange: '값이 필드 값 범위에 포함되지 않습니다: %1',\n    invalidToIndex: \"잘못된 'to' index입니다.: %1\",\n    requireSourceData: '원본 data가 반드시 지정돼야 합니다.',\n    requireFilterName: '필터 이름이 반드시 지정돼야 합니다.',\n    alreadyEditing: '이미 데이터 편집 중입니다.',\n\n    // other messages\n    invalidDateFormat: '잘못된 시간 날짜 형식입니다: %1',\n    invalidSizeValue: '잘못된 Size 값입니다: %1',\n    invalidOuterDiv: '잘못된 외부 div 입니다: %1',\n    canNotHorzGrouping: '수평 모드일 때 그룹핑할 수 없습니다.',\n    dataMustSet: '데이터가 먼저 설정돼야 합니다.',\n    requireGroupingInfos: '하나 이상의 행 그룹핑 정보가 설정돼야 합니다.',\n    canNotRowGrouping: '데이터링크 view에 대해 행그룹핑 할 수 없습니다. dataGroupBy()를 사용하세요.',\n    canNotDataGrouping: '데이터링크 view가 아니면 데이터그룹핑할 수 없습니다. rowGroupBy()를 사용하세요.',\n    canNotHorzInGrouping: '그룹핑 상태일 때 수평모드로 변경할 수 없습니다.',\n    unknownLayoutType: '잘못된 layout 종류입니다: %1',\n    layoutMustSet: '레이아웃 모델이 반드시 설정돼야 합니다.',\n    unknownItemViewType: '잘못된 item view 종류입니다: %1',\n    requireCommandName: 'Command 이름이 지정돼야 합니다.',\n    commandNameDuplicated: '이미 존재하는 command 이름입니다: %1',\n    requireDataOrGroup: '데이터소스나 그룹 모델이 반드시 지정돼야 합니다.',\n    requireTableName: '테이블모델의 이름이 지정돼야 합니다.',\n    alreadyTableExists: '이미 존해하는 테이블모델입니다: %1',\n    selectEditRowFirst: '수정하거나 삽입할 행을 먼저 선택하세요.',\n};\n\nLocales['en'] = {\n    // formats\n    dateFormat: 'M/d/yyyy',\n    am: 'AM',\n    pm: 'PM',\n\n    // data messages\n    notExistsDataField: 'A data field is not exists: %1',\n    notSpecifiedDataField: 'At least one datafield must be set.',\n    invalidFieldName: 'Invalid field name: %1',\n    invalidFieldIndex: 'Invalid field index: %1',\n    invalidRowIndex: 'Invalid row index: %1',\n    canNotModifyData: 'Can not modify a readonly data.',\n    canNotModifyDeleted: 'Can not modify a deleted row: %1',\n    requiredField: 'Required field: %1',\n    invalidValueInDomain: 'The value is not int the domain: %1',\n    invalidValueInRange: 'The value is not int the range: %1',\n    invalidToIndex: \"Invalid 'to' index: %1\",\n    requireSourceData: 'A source data must be set.',\n    requireFilterName: 'A filter name must be set.',\n    alreadyEditing: 'DataView is already editing.',\n\n    // other messages\n    invalidDateFormat: 'Invalid datetime format: %1',\n    invalidSizeValue: 'Invalid size value: %1',\n    invalidOuterDiv: 'Invalid outer div element: %1',\n    canNotHorzGrouping: 'Can not row grouping in horz mode.',\n    dataMustSet: 'A data must be set first.',\n    requireGroupingInfos: 'At least one grouping info must be set.',\n    canNotRowGrouping: 'Can not row grouping by data link view. use dataGroupBy().',\n    canNotDataGrouping: 'Can not data grouping without data link view. rowGroupBy()를 사용하세요.',\n    canNotHorzInGrouping: 'Can not change to horz mode while grouping',\n    unknownLayoutType: 'Invalid layout: %1',\n    layoutMustSet: 'A layout model must be set.',\n    unknownItemViewType: 'Unknow item view type: %1',\n    requireCommandName: 'Command name must be supplied.',\n    commandNameDuplicated: 'Command name is already exists: %1',\n    requireDataOrGroup: 'A data or group view must be set.',\n    requireTableName: 'The name of table model is required.',\n    alreadyTableExists: 'A table model is already exists: %1',\n    selectEditRowFirst: 'First select the row you want to edit or insert.',\n};\n\nlet _currLang = 'ko';\nexport let locale = Locales[_currLang];\n\nexport const $_setLocale = (lang: string): IRcLocale => {\n    locale = Locales[_currLang = lang];\n    if (!locale) locale = Locales[_currLang = 'ko'];\n    return locale;\n}\n\nexport const $_registerLocale = (lang: string, data: IRcLocale) => {\n    if (lang && isObject(data)) {\n        locale = Locales[lang] = data;        \n        // 빈 항목은 'en'으로 대체 시킨다.\n        if (lang !== 'en') {\n            const en = Locales['en'];\n            for (const p in en) {\n                locale[p] = locale[p] || en[p];\n            }\n        }\n    }\n}\n\n","////////////////////////////////////////////////////////////////////////////////\n// Types.ts\n// 2021. 11. 26. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { locale } from \"./RcLocale\";\n\nexport const _undefined = void 0; // 불필요\nexport const ONE_CHAR = '①'.charCodeAt(0);\nconst ASTERISK = '*'.charCodeAt(0);\nconst PERCENT = '%'.charCodeAt(0);\nexport const ZWSP = '&#8203;';\nexport const ELLIPSIS = '\\u2026';\nexport const ORG_ANGLE = -Math.PI / 2;\nexport const DEG_RAD = Math.PI * 2 / 360;\n\nexport const NUMBER_SYMBOLS = 'k,M,G,T,P,E';\nexport const NUMBER_FORMAT = '#,##0.#';\n\nexport const floor = Math.floor;\nexport const ceil = Math.ceil;\nexport function fixnum(value: number): number {\n    return parseFloat(value.toPrecision(12));\n}\nexport function toStr(value: any): string {\n    return value == null ? null : String(value);\n}\nexport function deg2rad(degree: number): number {\n    return degree * Math.PI * 2 / 360;\n}\nexport function pixel(v: number): string {\n    return v + 'px';\n}\nexport function isNull(v: any): boolean {\n    return v == null || Number.isNaN(v) || v === '';\n}\nexport function pad2(v: number): string {\n    return v < 10 ? `0${v}` : String(v);\n}\nexport function newObject(prop: string, value: any): {} {\n    const obj = {};\n    obj[prop] = value;\n    return obj;\n}\n\nexport type Path = string | any[];\n\n/**\n * 123, '10%' 형식으로 크기를 지정한다.\n */\nexport type RtPercentSize = string | number; \nexport function isValidPercentSize(v: any): boolean {\n    if (!isNaN(v)) return true;\n    if (typeof v === 'string' && v.trimEnd().endsWith('%') && !isNaN(parseFloat(v))) return true;\n    return false;\n}\nexport interface IPercentSize {\n    size: number;\n    fixed: boolean;\n}\nexport const sizeToCss = function (size: IPercentSize): string {\n    return size.fixed ? (size.size + 'px') : (size.size + '%'); \n}\nexport const sizeToCssEx = function (size: IPercentSize): string {\n    return size ? (size.fixed ? (size.size + 'px') : (size.size + '%')) : '';\n}\n\nexport function parsePercentSize(sv: RtPercentSize, enableNull: boolean, def?: number): IPercentSize {\n    let fixed: boolean;\n    let size: number;\n\n    if (sv != null && !Number.isNaN(sv)) {\n        if (!(fixed = !isNaN(size = +sv))) {\n            const s = (sv as string).trim();\n            const c = s.charCodeAt(s.length - 1);\n\n            if (c === PERCENT) {\n                size = s.length === 1 ? NaN : parseFloat(s);\n            }\n            if (isNaN(size)) {\n                if (enableNull) {\n                    return null;\n                }\n                throwFormat(locale.invalidSizeValue, sv);\n            }\n        }\n    } else if (enableNull) {\n        return null;\n    } else {\n        size = def || 0;\n        fixed = true;\n    }\n    return { size, fixed }; \n}\n\nexport function parsePercentSize2(sv: RtPercentSize, def: RtPercentSize): IPercentSize {\n    return parsePercentSize(sv, true) || parsePercentSize(def, false);\n}\n\nexport function getPercent(size: IPercentSize): number {\n    return size && !size.fixed ? size.size : NaN;\n}\nexport function calcPercent(size: IPercentSize, domain: number): number {\n    return size ? (size.fixed ? size.size : size.size * domain / 100) : NaN;\n}\nexport function calcPercentF(size: IPercentSize, domain: number): number {\n    return size.fixed ? size.size : size.size * domain / 100;\n}\n\nexport type SizeValue = string | number; // 123, '10*', '50%'\nexport function isValidSizeValue(v: any): boolean {\n    if (!isNaN(v)) return true;\n    if (typeof v === 'string' && v.trimEnd().endsWith('*') && !isNaN(parseFloat(v))) return true;\n    return false;\n}\nexport interface ISizeValue {\n    size: number;\n    fixed: boolean;\n    rated?: boolean; // '*'\n}\n\n/**\n * @internal\n * \n * '*'은 '1*'와 동일하다.\n */\nexport function parseSize(sv: SizeValue, enableNull: boolean): ISizeValue {\n    let fixed: boolean;\n    let rated: boolean; // '*'\n    let size: number;\n\n    if (sv != null && !Number.isNaN(sv)) {\n        if (!(fixed = !isNaN(size = +sv))) {\n            const s = (sv as string).trim();\n            const c = s.charCodeAt(s.length - 1);\n\n            if (c === PERCENT) {\n                size = s.length === 1 ? NaN : parseFloat(s);\n            } else if (c === ASTERISK) {\n                size = s.length === 1 ? 1 : parseFloat(s);\n                rated = true;\n            }\n            if (isNaN(size)) {\n                if (enableNull) {\n                    return null;\n                }\n                throwFormat(locale.invalidSizeValue, sv);\n            }\n        }\n    } else if (enableNull) {\n        return null;\n    } else {\n        size = 0;\n        fixed = true;\n    }\n    return { size, rated, fixed }; \n}\n\nexport function getFixedSize(dim: IPercentSize): number {\n    return dim && dim.fixed ? dim.size : NaN;\n}\nexport function getRelativeSize(dim: IPercentSize): number {\n    return dim && !dim.fixed ? dim.size : NaN;\n}\n\nexport interface SVGStyles {\n    fill?: string;\n    stroke?: string;\n    strokeWidth?: string;\n    fontFamily?: string;\n    fontSize?: string;\n    fontWeight?: string;\n    fontStyle?: string;\n}\n\nexport type SVGStyleOrClass = SVGStyles | string;\n\nexport class RtAbortError extends Error {\n    static check(err: any): boolean {\n        if (err instanceof RtAbortError) return true;\n        throw err;\n    }\n}\n\nexport class AssertionError extends Error {\n}\n\nexport const assert = function (predict: boolean, message: string): void {\n    if (!predict) {\n        throw new AssertionError(message);\n    }\n}\n\nexport const checkNull = function (obj: any, message: string): void {\n    if (!obj) {\n        throw new Error(message || (obj + ' is null.'));\n    }\n}\n\n/**\n * @internal\n * \n * 경고성 에러.\n * 발생 시 프로그램을 중지하지 않고 경고를 표시한다.\n */\nexport class AlertError extends Error {\n}\n\nexport interface ISides {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n    horz?: number;\n    vert?: number;\n}\n\nexport const ZERO_SIDES = Object.freeze({\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    horz: 0,\n    vert: 0\n});\n\nexport const enum MouseButton {\n    LEFT = 0,\n    MIDDLE = 1,\n    RIGHT = 2\n}\n\n/**\n * 스와이프 제스처 등의 진행 방향.\n * <br>\n * \n * @see {@link RtListControl.onRowSwipe}\n */\nexport enum RtDirection {\n    /**\n     * 위쪽으로 진행.\n     */\n    UP = 'up',\n    /**\n     * 아래쪽으로 진행.\n     */\n    DOWN = 'down',\n    /**\n     * 왼쪽으로 진행.\n     */\n    LEFT = 'left',\n    /**\n     * 오른쪽으로 진행.\n     */\n    RIGHT = 'right'\n}\n\nexport const formatMessage = (str: string, value: any): string => {\n    return str.replace('%1', value);\n}\nexport const formatMessage2 = (str: string, value1: any, value2: any): string => {\n    return str.replace('%1', value1).replace('%2', value2);\n}\n\nexport const throwError = (message: string) => {\n    throw new Error(message);\n}\nexport const throwFormat = (format: string, value: any) => {\n    throw new Error(formatMessage(format, value));\n}\n\nexport interface StyleProps {\n    fill?: string;\n    stroke?: string;\n    strokeWidth?: string;\n    color?: string;\n    minWidth?: string;\n    maxWidth?: string;\n    minHeight?: string;\n    maxHeight?: string;\n    strokeDasharray?: string;\n}\n\nexport enum Align {\n    LEFT = 'left',\n    CENTER = 'center',\n    RIGHT = 'right'\n}\n\nexport enum VerticalAlign {\n    TOP = 'top',\n    MIDDLE = 'middle',\n    BOTTOM = 'bottom'\n}\n\nexport enum SectionDir {\n    LEFT,\n    TOP,\n    BOTTOM,\n    RIGHT\n}\n\nexport const HORZ_SECTIONS = [SectionDir.LEFT, SectionDir.RIGHT];\nexport const VERT_SECTIONS = [SectionDir.TOP, SectionDir.BOTTOM];\n\n","////////////////////////////////////////////////////////////////////////////////\n// Dom.ts\n// 2022. 01. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2022 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { RtDebug } from \"./Common\";\nimport { IRect } from \"./Rectangle\";\n\nexport interface IDomContaner {\n    dom(): Element;\n}\n\nlet _dom_id_ = 651212;\n\nexport const DIV = 'div';\nexport const SPAN = 'span';\nexport const BORDER_SIDES = {\n    't': 'borderTop',\n    'b': 'borderBottom',\n    'l': 'borderLeft',\n    'r': 'borderRight'\n};\n\n/**\n * @internal\n * \n * Utilities for HTML element.\n */\nexport class Dom {\n\n    static getWin(doc: Document): Window {\n        return doc.defaultView || doc['parentWindow'];\n    }\n\n    static isVisible(elt: HTMLElement): boolean {\n        return elt && elt.style.display !== 'none';\n    }\n\n    static setVisible(elt: HTMLElement | SVGSVGElement, visible: boolean, visibleStyle = ''): boolean {\n        elt.style.display = visible ? (visibleStyle || '') : 'none';\n        return visible;\n    }\n\n    static hide(elt: HTMLElement | SVGSVGElement): void {\n        elt.style.display = 'none';\n    }\n\n    static show(elt: HTMLElement | SVGSVGElement, visibleStyle = ''): void {\n        elt.style.display = visibleStyle;\n    }\n\n    static addClass(elt: HTMLElement | SVGSVGElement, className: string): HTMLElement | SVGSVGElement {\n        if (className) {\n            const classes = className.split(/\\s+/g);\n            classes.forEach(c => elt.classList.add(c));\n        }\n        return elt;\n    }\n\n    static removeClass(elt: HTMLElement | SVGSVGElement, className: string): HTMLElement | SVGSVGElement {\n        if (className) {\n            const classes = className.split(/\\s+/g);\n            classes.forEach(c => elt.classList.remove(c));\n        }\n        return elt;\n    }\n\n    static getImageUrl(css: CSSStyleDeclaration): string {\n        const url = css.backgroundImage;\n\n        if (url && url.startsWith('url(\"')) {\n            return url.substring(5, url.length - 2);\n        }\n    }\n\n    static getFocused(): HTMLElement {\n        const sel = document.getSelection();\n        let node = sel.focusNode;\n\n        while (node) {\n            if (node instanceof HTMLElement) return node;\n            node = node.parentElement;\n        }\n    }\n\n    static isAncestorOf(elt: HTMLElement, child: HTMLElement): boolean {\n        let p = child;\n        \n\t\twhile (p) {\n\t\t\tif (p == elt) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tp = p.parentElement;\n\t\t}\n\t\treturn false;\n\t}\n\n    static getOffset(elt: HTMLElement): {x: number, y: number} {\n        const doc = elt.ownerDocument;\n        const win = doc.defaultView;\n\t\tconst box = elt.getBoundingClientRect();\n\t\tconst body = doc.body;\n\t\tconst docElem = doc.documentElement;\n\t\tconst scrollTop = win.pageYOffset || docElem.scrollTop || body.scrollTop;\n\t\tconst scrollLeft = win.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\t\tconst clientTop = docElem.clientTop || body.clientTop || 0;\n\t\tconst clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\t\tconst x = box.left + scrollLeft - clientLeft;\n\t\tconst y = box.top + scrollTop - clientTop;\n        return { x: Math.round(x), y: Math.round(y)};\n    }\n    \n    static getSize(elt: HTMLElement): {width: number, height: number} {\n\t\tconst r = elt.getBoundingClientRect();\n\t\treturn { width: r.width, height: r.height };\n    }\n\n    static moveX(elt: HTMLElement, x: number): void {\n\t\telt.style.left = x + 'px';\n    }\n\n    static moveY(elt: HTMLElement, y: number): void {\n\t\telt.style.top = y + 'px';\n    }\n    \n    static move(elt: HTMLElement | SVGSVGElement, x: number, y: number): void {\n\t\telt.style.left = x + 'px';\n\t\telt.style.top = y + 'px';\n    }\n\n    static moveI(elt: HTMLElement, x: number, y: number): void {\n\t\telt.style.left = (x >>> 0) + 'px';\n\t\telt.style.top = (y >>> 0) + 'px';\n    }\n\n    static resize(elt: HTMLElement | SVGSVGElement, width: number, height: number): void {\n        elt.style.width = width + 'px';\n        elt.style.height = height + 'px';\n    }\n\n    static resizeSVG(elt: SVGSVGElement, width: number, height: number): void {\n        elt.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    }\n\n    static setWidth(elt: HTMLElement, width: number): void {\n        elt.style.width = width + 'px';\n    }\n\n    static setHeight(elt: HTMLElement, height: number): void {\n        elt.style.height = height + 'px';\n    }\n\n    static getBrowserSize(elt?: HTMLElement): {width: number, height: number} {\n        const doc = elt ? elt.ownerDocument : document;\n        const win = doc.defaultView;\n        return {\n            // width: _win.innerWidth || _doc.documentElement.clientWidth || _doc.body.clientWidth,\n            // height: _win.innerHeight || _doc.documentElement.clientHeight || _doc.body.clientHeight\n            width: win.innerWidth || doc.documentElement.clientWidth || doc.body.clientWidth,\n            height: win.innerHeight || doc.documentElement.clientHeight || doc.body.clientHeight\n        };\n    }\n\n    static setRect(elt: HTMLElement, r: IRect): void {\n\t\tconst style = elt.style;\n\t\tstyle.left = r.x + 'px';\n\t\tstyle.top = r.y + 'px';\n\t\tstyle.width = r.width + 'px';\n\t\tstyle.height = r.height + 'px';\n    }\n    \n    static setBounds(elt: HTMLElement, x: number, y: number, w: number, h: number): void {\n\t\tconst style = elt.style;\n\t\tstyle.left = x + 'px';\n\t\tstyle.top = y + 'px';\n\t\tstyle.width = w + 'px';\n\t\tstyle.height = h + 'px';\n    }\n    \n    static setBoundsEx(elt: HTMLElement, x: number, y: number, w: number, h: number): void {\n\t\tconst style = elt.style;\n\t\t!isNaN(x) && (style.left = x + 'px');\n\t\t!isNaN(y) && (style.top = y + 'px');\n\t\t!isNaN(x) && (style.width = w + 'px');\n\t\t!isNaN(x) && (style.height = h + 'px');\n    }\n\n    static getClientRect(elt: HTMLElement): ClientRect | DOMRect {\n\t\tconst r = elt.getBoundingClientRect();\n\t\tr[\"cx\"] = elt.offsetLeft;\n\t\tr[\"cy\"] = elt.offsetTop;\n\t\treturn r;\n    }\n    \n\tstatic getChildIndex(elt: HTMLElement): number {\n        if (elt) {\n            const parent = elt.parentNode;\n            if (parent) {\n                const childs = parent.children;\n                for (let i = childs.length; i--;) {\n                    if (childs[i] === elt) {\n                        return i;\n                    }\n                }\n            }\n        }\n\t\treturn -1;\n    }\n\n    static clearChildren(parent: Element): void {\n        let elt: any;\n    \twhile (elt = parent.lastChild) {\n    \t\tparent.removeChild(elt);\n    \t}\n    }\n\n    static clearElements(parent: Element): void {\n        let elt:any;\n    \twhile (elt = parent.lastChild) {\n    \t\tDom.clearElements(elt as Element);\n    \t\tparent.removeChild(elt);\n    \t}\n    }\n\n    static append(elt: Node, child: Node): void {\n        child.parentNode !== elt && elt.appendChild(child);\n    }\n\n    static addChild(elt: HTMLElement, child: HTMLElement): boolean {\n\t\tif (elt && child && child.parentNode !== elt) {\n\t\t\telt.appendChild(child);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n    }\n    \n\tstatic removeChild(elt: HTMLElement, child: HTMLElement): boolean {\n\t\tif (elt && child && child.parentNode === elt) {\n\t\t\telt.removeChild(child);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n    }\n\n    static removeChildren(elt: Element, children: (Element | IDomContaner)[]): void {\n        children.forEach(child => {\n            if (child instanceof Element) {\n                if (child.parentNode === elt) {\n                    elt.removeChild(child);\n                }\n            } else if (child && child.dom().parentNode == elt) {\n                elt.removeChild(child.dom());\n            }\n        });\n    }\n\n    static remove(elt: Node): null {\n        const p = elt && elt.parentElement;\n        p && p.removeChild(elt);\n        return null;\n    }\n\n    static clearStyle(elt: HTMLElement): void {\n        elt.style.cssText = '';\n    }\n\n    static htmlEncode(text: string): string {\n\t\treturn document.createElement('a').appendChild(document.createTextNode(text)).parentNode[\"innerHTML\"];\n    }\n\n    static setData(elt: HTMLElement | SVGElement, name: string, value: any): void {\n        if (value == null || value === '') {\n            delete elt.dataset[name];\n        } else {\n            elt.dataset[name] = value;\n        }\n    }\n\n    static toggleData(elt: HTMLElement | SVGElement, name: string, value: boolean): void {\n        if (value) {\n            elt.dataset[name] = '1';\n        } else {\n            delete elt.dataset[name];\n        }\n    }\n\n    static getData(elt: HTMLElement, name: string): any {\n        return elt.dataset[name];\n    }\n\n    static hasData(elt: HTMLElement, name: string): boolean {\n        return elt.dataset[name] !== void 0;\n    }\n\n    static setVar(elt: HTMLElement | SVGSVGElement, name: string, value: string): void {\n        elt.style.setProperty(name, value);\n    }\n\n    static animate(elt: HTMLElement, prop: string, from: any, to: any, duration = 150, fill = 'none'): Animation {\n        const frame1 = {};\n        const frame2 = {};\n\n        frame1[prop] = from;\n        frame2[prop] = to;\n\n        return elt.animate([\n            frame1, frame2\n        ], {\n            duration: duration,\n            fill: fill as any\n        })\n\n    }\n\n    // static setAnimating(elt: HTMLElement, set: boolean) {\n    //     elt.dataset.animating = set ? '1' : '0';\n    // }\n\n    // static isAnimating(elt: HTMLElement) {\n    //     return elt.dataset.animating === '1';\n    // }\n\n    static setAttr(elt: Element, attr: string, value: any): void {\n        if (value != null && value !== '') {\n            elt.setAttribute(attr, value);\n        } else {\n            elt.removeAttribute(attr);\n        }\n    }\n\n    static setAttrs(elt: Element, attrs: any): void {\n        for (const attr in attrs) {\n            elt.setAttribute(attr, attrs[attr]);\n        }\n    }\n\n    static getDomId(): string {\n        return '-rtc-' + _dom_id_++;\n    }\n\n    static stopAnimation(ani: Animation): null {\n        if (ani) {\n            try {\n                ani.finish(); // cancel()?\n            } catch (e) {\n                RtDebug.debugging();\n                console.error(e);\n            }\n        }\n        return null;\n    }\n\n    static childByPath(dom: Node, path: number[]): Node {\n        let node = dom;\n\n        if (path) {\n            let i = 0;\n\n            while (i < path.length) {\n                node = node.childNodes[path[i++]];\n            }\n        }\n        return node;\n    }\n\n    static childByClass<T extends Element>(parent: HTMLElement, className: string): T {\n        return parent.getElementsByClassName(className)[0] as any;\n    }\n\n    static setDisabled(dom: Element, value: boolean): void {\n        this.setAttr(dom, 'disabled', value ? true : void 0);\n    }\n\n    static setImportantStyle(css: CSSStyleDeclaration, property: string, value: string): void {\n        css.setProperty(property, value, 'important');\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// Utils.ts\n// 2021. 11. 26. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isArray } from \"./Common\";\n\nconst __epoch = new Date().getTime();\n\nif (!Element.prototype.animate) {\n    Element.prototype.animate = function (_: any): any {};\n}\n\nexport const _isOpera = !!window[\"opera\"] || navigator.userAgent.indexOf(' OPR/') >= 0;\nexport const _isChrome = !!window[\"chrome\"] && !_isOpera;          // Chrome 1+\nexport const _isSafari = Object.prototype.toString.call(HTMLElement).indexOf('Constructor') > 0 || (!_isChrome && !_isOpera && navigator.userAgent.indexOf(\"Safari\") >= 0);\nexport const _isSamsung = navigator.userAgent.toLocaleLowerCase().indexOf('samsungbrowser') >= 0;\nexport const _isMiui = navigator.userAgent.toLocaleLowerCase().indexOf('miuibrowser') >= 0;\n\nexport const LINE_SEP = /\\r\\n|\\n/g;\nexport const CSV_SPLIT = /,(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)(?=(?:[^\\']*\\'[^\\']*\\')*[^\\']*$)/;\nexport const TAB_SPLIT = /\\t/g;\nexport const MULTI_TAB_SPLIT = /\\t+/g;\nconst DBL_QUOTE_REP = /\"([^\"]*(?=\"))\"/;\nconst QUOTE_REP = /'([^']*(?='))'/;\nconst DBL_QUOTE = '\"'.charCodeAt(0);\nconst QUOTE = \"'\".charCodeAt(0);\n\n/**\n * @internal\n *\n */\nexport class Utils {\n\n    static week_days = [\n        '일', '월', '화', '수', '목', '금', '토'\n    ];\n    static month_days = [\n        [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n        [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    ];\n\n    static now(): number {\n        return +new Date();\n    }\n\n    static stopEvent(e: Event, immediate: boolean = false): void {\n        if (e.preventDefault) {\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            e.returnValue = false;\n        }\n        immediate && e.stopImmediatePropagation();\n    }\n\n    static getErrorStack(error: any): string {\n        const stack = error.stack;\n\n        if (stack) {\n            return stack.split('\\n').map((line: string) => line + '<br/>')\n        }\n        return '';\n    }\n\n    static getBaseClassName(obj: any): string {\n        return Object.getPrototypeOf(obj.constructor).name;   \n    }\n\n    static isObject(v: any): boolean {\n        return v && typeof v === 'object' && !isArray(v);\n    }\n\n    static assign(target: any, source: any): void {\n        this.isObject(source) && Object.assign(target, source);\n    }\n\n    static isValidObject(v: any): boolean {\n        if (this.isObject(v)) {\n            for (let p in v) {\n                if (v.hasOwnProperty(p)) return true;\n            }\n        }\n    }\n\n    static copyObject(v: any): any {\n        if (v && typeof v === 'object' && !isArray(v)) {\n            return Object.assign({}, v);\n        }\n    }\n\n    static checkArray(v: any): any {\n        return isArray(v) ? v : void 0;\n    }\n\n    static makeArray(v: any, force: boolean = false): any[] {\n        if (v != null) {\n            return isArray(v) ? v : [v];\n        } else if (force) {\n            return [];\n        }\n    }\n\n    static makeNumArray(v: any): number[] {\n        if (isArray(v)) {\n            return v.map(n => +n);\n        } else {\n            return v != null ? [+v] : []; \n        }\n    }\n\n    static getIntArray(count: number, start = 0): number[] {\n        const arr = [];\n        for (let i = start, end = start + count; i < end; i++) {\n            arr.push(i);\n        }\n        return arr;\n    }\n\n    static isValueArray(arr: any[]): boolean {\n        if (isArray(arr)) {\n            for (let i = arr.length - 1; i >= 0; i--) {\n                if (arr[i] != null && typeof arr[i] === 'object') return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    static toArray(v: any): any[] {\n        if (isArray(v)) return v;\n        if (v !== undefined && v !== null) return [v];\n        return null;\n    }\n\n    static copyArray(v: any): any[] {\n        if (isArray(v)) return v.slice(0);\n        if (v !== undefined && v !== null) return [v];\n        return undefined;\n    }\n\n    static push(arr: Array<any>, items: Array<any>): void {\n        if (items && items.length > 0) {\n            for (let i = 0, n = items.length; i < n; i++) {\n                arr.push(items[i]);\n            }\n        }\n    }\n\n    static isDefined(v: any): boolean {\n        // return v !== (void 0) && v !== null;\n        return v != null;\n    }\n\n    static isNotDefined(v: any): boolean {\n        // return v === (void 0) || v === null;\n        return v == null;\n    }\n\n    static isNumber(value: any): value is number {\n        return typeof value === \"number\";\n    }\n\n    static isValidNumber(value: any): value is number {\n        return typeof value === 'number' && !isNaN(value) && isFinite(value);\n    }\n\n    static getNumber(v: any, def = 0): number {\n        const n = parseFloat(v)\n        return isFinite(n) ? n : def;\n    }\n    \n    static toNumber(value: any, def = 0): number {\n        return (isNaN(value) || value === null || value === '') ? def : +value;\n    }\n\n    static getEnumValues(type: any): any[] {\n        return Object.keys(type).map(key => type[key]);\n    }\n\n    static compareText(s1: string, s2: string, ignoreCase = false): number {\n        s1 = s1 || '';\n        s2 = s2 || '';\n        if (ignoreCase) {\n            s1 = s1.toLocaleLowerCase();\n            s2 = s2.toLocaleLowerCase();\n        }\n        return s1 > s2 ? 1 : (s1 < s2) ? -1 : 0;\n    }\n    \n    static getTimeF(): number {\n        return new Date().getTime() / 1000;\n    }\n    \n    static getTimer(): number {\n        return new Date().getTime() - __epoch;\n    }\n\n    static isWhiteSpace(s: string): boolean {\n\t\treturn !s || !s.trim();\n\t}\n\n\tstatic pad(value: number, len?: number, c?: string): string {\n\t\tlen = Math.max(len || 2, 1);\n        c = c || '0';\n\t\treturn new Array(len - String(value).length + 1).join(c) + value;\n\t}\n\n\tstatic pad16(value: number, len?: number, c?: string): string {\n\t\tlen = Math.max(len || 2, 1);\n        c = c || '0';\n\t\treturn new Array(len - value.toString(16).length + 1).join(c) + value.toString(16);\n\t}\n\n\tstatic pick(...args: any): any {\n\t\tconst len = args.length;\n        let v: any;\n        \n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tv = args[i];\n\t\t\tif (v !== undefined && v !== null) {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n    static pickNum(...args: any): number {\n\t\tconst len = args.length;\n\t\tfor (let i = 0; i < len; i++) {\n            if (!isNaN(args[i]) && args[i] !== null) return args[i];\n        }\n        return NaN;\n    }\n\n\tstatic included(value: any, ...args: any): any {\n        const len = args.length;\n        \n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tif (args[i] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tstatic compareTextValue(v1: any, v2: any, caseSensitive: boolean, partialMatch: boolean): boolean {\n\t\tif (v1 === v2) {\n\t\t\treturn true;\n        }\n        \n\t\tlet s1 = String(v1);\n\t\tlet s2 = v2 == null ? undefined : String(v2);\n        \n        if (!s1 && !s2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!s1 || !s2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!caseSensitive) {\n\t\t\ts1 = s1.toLowerCase();\n\t\t\ts2 = s2.toLowerCase();\n\t\t}\n\t\tif (partialMatch) {\n\t\t\treturn s2.indexOf(s1) >= 0;\n\t\t} else {\n\t\t\treturn s1 == s2;\n\t\t}\n    }\n    \n    static cast(obj: any, clazz: any): any {\n        return obj instanceof clazz ? obj : null;\n    }\n    \n    static irandom(min: number, max?: number): number {\n        if (max !== undefined) {\n            const v1 = min >> 0;\n            const v2 = max >> 0;\n            return (Math.random() * (v2 - v1) + v1) >>> 0;\n        } else {\n            const v = min >> 0;\n            return (Math.random() * v) >> 0;\n        }\n    }\n    \n    static irandomExcept(except: number, min: number, max?: number): number {\n        if (except === 0 && min === 1 && isNaN(max)) {\n            throw new Error(`Invalid irandom2`);\n        }\n        while (true) {\n            const i = this.irandom(min, max);\n            if (i !== except) {\n                return i;\n            }\n        }\n    }\n\n    static brandom(): boolean {\n        return Math.random() > 0.5 ? true : false;\n    }\n\n    static srandom(min: number, max: number): string {\n        let s = '';\n        const len = this.irandom(min, max);\n\n        for (let i = 0; i < len; i++) {\n            s += String.fromCharCode(this.irandom(97, 123))\n        }\n        return s;\n    }\n\n    static erandom(clazz: any): any {\n        const vals = Object.values(clazz);\n        return vals[this.irandom(vals.length)];\n    }\n\n    static arandom(arr: any[]): any {\n        return arr[(Math.random() * arr.length) >> 0];\n}\n\n    static iarandom(min: number, max: number, count: number): number[] {\n        const list = new Array<number>();\n        for (let i = min; i < max; i++) {\n            list.push(i);\n        }\n        while (list.length > count) {\n            list.splice(Utils.irandom(list.length), 1);\n        }\n        return list;\n    }\n\n    static alert(message: string): void {\n        window.alert(message);\n    }\n\n    static toInt(v: string, radix?: number): number {\n        const n = parseInt(v, radix || 10);\n        return isNaN(n) ? 0 : n;\n    }\n\n    static toFloat(v: string): number {\n        const n = parseFloat(v);\n        return isNaN(n) ? 0 : n;\n    }\n\n    static toEven(v: number): number {\n        return (v & 1) ? v + 1 : v;\n    }\n\n    static hex(value: number, len = 2, c = \"0\") {\n        len = Math.max(len || 2, 1);\n        const s = value.toString(16);\n\n        c = c || \"0\";\n        return new Array(len - s.length + 1).join(c) + s;\n    }\n\n    static toStr(value: any): string {\n        if (Number.isNaN(value)) {\n            return '';\n        } else {\n            return value == null ? '' : String(value);\n        }\n    }\n\n    static extend(target: any, source: any): any {\n        target = target || {};\n        for (let p in source) {\n            target[p] = source[p];\n        }\n        return target;\n    }\n\n    static equalNumbers(a: number, b: number): boolean {\n        return isNaN(a) == isNaN(b) && !isNaN(a) && a == b;\n    }\n\n    static equalArrays(a: any[], b: any[]): boolean {\n        if (a === b)\n            return true;\n        if (a == null || b == null)\n            return false;\n\n        const len = a.length;\n        if (len != b.length)\n            return false;\n        for (let i = 0; i < len; ++i) {\n            if (a[i] !== b[i])\n                return false;\n        }\t\n        return true;\n    }\n\n    // 1 level comparison\n    static equalObjects(obj1: any, obj2: any): boolean {\n        if (obj1 === obj2) return true;\n        if (!obj1 && !obj2) return true;\n        if (!obj1 || !obj2) return false;\n        for(var p in obj1){\n            if(obj1.hasOwnProperty(p)){\n                if(obj1[p] !== obj2[p]){\n                    return false;\n                }\n            }\n        }\n        for(var p in obj2){\n            if(obj2.hasOwnProperty(p)){\n                if(obj1[p] !== obj2[p]){\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    static parseDate(date: string, defaultDate?: Date): Date {\n        const d = new Date(date);\n        return isNaN(d.getTime()) ? (defaultDate || new Date()) : d;\n    }\n\n    static isLeapYear(year: number): boolean {\n        return ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\n    }\n\n    static incMonth(d: Date, delta: number): Date {\n        const day = d.getDate();\n        d.setDate(1);\n        d.setMonth(d.getMonth() + delta);\n        d.setDate(Math.min(day, Utils.month_days[Utils.isLeapYear(d.getFullYear()) ? 1 : 0][d.getMonth()]));\n        return d;\n    }\n\n    static minDate(d1: Date, d2: Date): Date {\n        if (d1 !== null) return d1;\n        if (d2 !== null) return d2;\n        return d1.getTime() < d2.getTime() ? d1 : d2;\n    }\n\n    static maxDate(d1: Date, d2: Date): Date {\n        if (d1 !== null) return d2;\n        if (d2 !== null) return d1;\n        return d1.getTime() > d2.getTime() ? d1 : d2;\n    }\n    \n    // 문자열이 한글이면 2, 영/숫자/기호 이면 1.\n    static getTextLength2(s: string): number {\n        let b = 0, i = 0, c = 0;\n        for(; c = s.charCodeAt(i++); b += c >> 7 ? 2 : 1);\n        return b;\n    }\n\n    static getClassName(model: any) {\n        function getFuncName(clazz: object): string {\n            let ret: string = clazz.toString();\n            ret = ret.substring('function '.length);\n            ret = ret.substring(0, ret.indexOf('('));\n            return ret;            \n        }\n        if (model && model.constructor) {\n            return model.constructor.name || getFuncName(model.constructor);\n        }\n    }\n\n    static isInteger(value: any): boolean {\n        if (Number.isInteger) return Number.isInteger(value);\n        return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n    }\n\n    static isEmpty(obj: {}) {\n        if (obj) {\n            for (let p in obj) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    static isNotEmpty(obj: {}) {\n        if (obj) {\n            for (let p in obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    static capitalize(s: string): string {\n        if (typeof s !== 'string') return '';\n\n        const c = s.charAt(0);\n\n        if (c >= 'A' && c <= 'Z') return s;\n        return c.toUpperCase() + s.slice(1)\n    }\n\n    static uncapitalize(s: string): string {\n        if (typeof s !== 'string') return '';\n\n        const c = s.charAt(0);\n\n        if (c >= 'a' && c <= 'z') return s;\n        return c.toLowerCase() + s.slice(1)\n    }\n\n    static labelize(s: string): string {\n        if (typeof s !== 'string') return '';\n        \n        const c = s.charAt(0);\n        s = (c >= 'A' && c <= 'Z') ? s : (c.toUpperCase() + s.slice(1));\n        let s2 = s.charAt(0);\n        \n        for (let i = 1; i< s.length; i++) {\n            const c = s.charAt(i);\n            if (c >= 'A' && c <= 'Z') {\n                s2 += ' ';\n            }\n            s2 += c;\n        }\n        return s2;\n    }\n\n    static deepClone(obj: object): object {\n        if (obj instanceof Date) {\n            return new Date(obj);\n        } else if(obj == null || typeof obj !== 'object') {\n            return obj;\n        } else {\n            const result = isArray(obj) ? [] : {};\n          \n            for(let key of Object.keys(obj)) {\n                result[key] = Utils.deepClone(obj[key])\n            }\n            return result;\n        }\n    }\n\n    static getArray(length: number, value?: any): any[] {\n        const arr = [];\n        for (let i = 0; i < length; i++) arr.push(value);\n        return arr;\n    }\n\n    static getNumArray(length: number, value = 0): number[] {\n        const arr = [];\n        for (let i = 0; i < length; i++) arr.push(value);\n        return arr;\n    }\n\n    static hasSetter(obj: any, prop: string): boolean {\n        while (obj) {\n            const pd = Reflect.getOwnPropertyDescriptor(obj, prop);\n            if (pd) return pd.writable || !!pd.set;\n\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n\n    static dataUriToBinary(dataUri: string): Uint8Array {\n        const BASE64_MARKER = ';base64,';\n        const base64Index = dataUri.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\n        const base64 = dataUri.substring(base64Index);\n        const raw = window.atob(base64);\n        const rawLength = raw.length;\n        const array = new Uint8Array(new ArrayBuffer(rawLength));\n\n        for(let i = 0; i < rawLength; i++) {\n            array[i] = raw.charCodeAt(i);\n        }\n        return array;\n    }\n\n    static assignProps(target: any, source: any): boolean {\n        let changed = false;\n\n        if (source) {\n            for (let p in source) {\n                // if (target.hasOwnProperty(p)) {\n                    if (source[p] !== target[p]) {\n                        target[p] = source[p];\n                        changed = true;\n                    }\n                //}\n            }\n        }\n        return changed;\n    }\n\n    static assignStyleAndProps(target: any, source: any): boolean {\n        let changed = false;\n\n        if (source) {\n            for (let p in source) {\n                if (p === 'style') {\n                    target[p] = source[p];\n                    changed = true;\n                } else if (target.hasOwnProperty(p)) {\n                    //if (source[p] !== target[p]) {\n                        target[p] = source[p];\n                        changed = true;\n                    //}\n                }\n            }\n        }\n        return changed;\n    }\n\n    static dedupe(list: any[], comparer?: (v1: any, v2: any) => number): any[] {\n        list = list.sort(comparer || ((n1, n2) => n1 > n2 ? 1 : n1 < n2 ? -1 : 0));\n        for (let i = list.length - 1; i > 0; i--) {\n            if (list[i] === list[i - 1]) {\n                list.splice(i, 1);\n            }\n        }\n        return list;\n    }\n\n    static isUnique(list: any[], comparer?: (v1: any, v2: any) => number): boolean {\n        list = list.sort(comparer || ((n1, n2) => n1 > n2 ? 1 : n1 < n2 ? -1 : 0));\n        for (let i = list.length - 1; i > 0; i--) {\n            if (list[i] === list[i - 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    static sortNum(list: number[]): number[] {\n        return list.sort((n1, n2) => n1 - n2);\n    }\n\n    static logElapsed(message: string, runner: () => void ): void {\n        const t = +new Date();\n        runner();\n        console.log(message, (+new Date() - t) + 'ms');\n    }\n\n    static clamp(v: number, min: number, max: number): number {\n        if (!isNaN(max)) v = Math.min(v, max);\n        if (!isNaN(min)) v = Math.max(v, min);\n        return v;\n    }\n\n    static splice(array: any[], start: number, deleteCount: number, items: any[]): void {\n        const args = [start, deleteCount].concat(items);\n        Array.prototype.splice.apply(array, args);\n    }\n\n    static makeIntArray(from: number, to: number): number[] {\n        const arr = new Array<number>(Math.max(0, to - from));\n\n        for (let i = from; i < to; i++) {\n            arr[i - from] = i;\n        }\n        return arr;\n    }\n\n    static setInterval(handler: () => void, interval: number): any {\n        return setInterval(handler, interval);\n    }\n\n    static clearInterval(handle: any): void {\n        clearInterval(handle);\n    }\n\n    static isStringArray(value: any): boolean {\n        return isArray(value) && value.every(v => typeof v === 'string');\n    }\n\n    static isNumberArray(value: any): boolean {\n        return isArray(value) && value.every(v => typeof v === 'number');\n    }\n\n    static makeLineSeparator(pattern: string | string[]): RegExp {\n        if (isArray(pattern)) {\n            if (pattern.length > 0) {\n                let s = pattern[0];\n                for (let i = 1, n = pattern.length; i < n; i++) {\n                    s += '|' + pattern[i];\n                }\n                return new RegExp(s, 'g')\n            }\n        } else if (pattern) {\n            return new RegExp(pattern, 'g')\n        }\n    }\n\n    static stripQuotes(s: string): string {\n        const c = s.charCodeAt(0);\n\n        if (c === DBL_QUOTE) {\n            s = s.replace(DBL_QUOTE_REP, \"$1\");\n        } else if (c === QUOTE) {\n            s = s.replace(QUOTE_REP, \"$1\");\n        }\n        return s;\n    }\n\n    static isDate(v: any): boolean {\n        // return v instanceof Date;\n        return Object.prototype.toString.call(v) === '[object Date]'\n    }\n\n    static isValidDate(d: Date): boolean {\n        return d.getTime() === d.getTime();\n    }\n\n    static asFunction(fn: any): any {\n        return typeof fn === 'function' ? fn : void 0;\n    }\n\n    static getFieldProp(field: string): { field: string, props: string[] } {\n        const p = field.indexOf('.');\n        if (p >= 0) {\n            return {field: field.substring(0, p), props: field.substring(p + 1).split('.') };\n        }\n    }\n\n    static watch(): Stopwatch {\n        return new Stopwatch();\n    }\n\n    static uniqueKey = (function () {\n        let hash = Math.random().toString(36).substring(2, 9) + '-';\n        let id = 0;\n        return function () {\n            return 'rr-chart-' + hash + id++;\n        }\n    }());\n\n    static startsWith(str: string, search: string): boolean {\n        if (str && search) {\n            return str.indexOf(search) === 0;\n        }\n    }\n\n    static endsWith(str: string, search: string): boolean {\n        if (str && search) {\n            return str.indexOf(search, -str.length) === (str.length - search.length);\n        }\n    }\n\n    static scaleNumber(value: number, symbols: string[], force: boolean): { value: number, symbol: string } {\n        const abs = Math.abs(value);\n        \n        if (abs >= 1000) {\n            let i = symbols.length - 1;\n            while (i) {\n                const m = Math.pow(1000, i--);\n                const v = Math.pow(10, Math.log(abs) * Math.LOG10E);\n                if (m <= v && (force || (abs * 10) % m === 0)) {\n                    return { value: value / m, symbol: symbols[i] };\n                }\n            }\n        }\n    }\n\n    static isNorth(angle: number, off = 0.1): boolean {\n        const a = Math.PI * 1.5;\n        if (angle < 0) angle += Math.PI * 2;\n        return angle >= a - off && angle <= a + off;\n    }\n\n    static isSouth(angle: number, off = 0.1): boolean {\n        const a = Math.PI * .5;\n        return angle >= a - off && angle <= a + off;\n    }\n\n    static isLeft(angle: number): boolean {\n        return angle > Math.PI * .5 && angle < Math.PI * 1.5\n    }\n}\n\nexport class Stopwatch {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _started: number;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor() {\n        this._started = +new Date();\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    elapsed(reset = false): number {\n        const e =  +new Date() - this._started;\n        reset && (this._started = +new Date());\n        return e;\n    }\n\n    elapsedText(reset = false, suffix = 'ms.'): string {\n        return this.elapsed(reset) + suffix;\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// Rectangle.ts\n// 2023. 01. 04. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ISize } from './Size';\nimport { isNull } from './Types';\nimport { Utils } from './Utils';\n\nexport interface IRect {\n\tx: number;\n\ty: number;\n\twidth: number;\n\theight: number;\n}\n\nexport function toSize(r: IRect): ISize {\n    return { width: r.width, height: r.height };\n}\n\nexport const equalsRect = function (r1: IRect, r2: IRect): boolean {\n    if (r1 === r2) return true;\n    if (r1 && r2) {\n        return r1.x === r2.x && r1.y === r2.y && r1.width === r2.width && r1.height === r2.height;\n    }\n    return false;\n}\n\nexport function isValidRect(r: IRect): boolean {\n\treturn !isNaN(r.x) && !isNaN(r.y) && !isNaN(r.width) && !isNaN(r.height);\n}\n\nexport const intersectsRect = function (r1: IRect, r2: IRect): boolean {\n\treturn !(r1.y >= r2.y + r2.height || r2.y >= r1.y + r1.height || r1.x >= r2.x + r1.width || r2.x >= r1.x + r1.width);\n}\n\n/** @internal */\nexport class Rectangle {\n\t\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n\tstatic readonly Empty = new Rectangle();\n\tstatic Temp = new Rectangle();\n\tstatic create(x: any, y?: number, width?: number, height?: number): Rectangle {\n        if (Utils.isObject(x)) {\n\t\t\treturn new Rectangle(x.x, x.y, x.width, x.height);\n        } else if (isNull(y)) {\n\t\t\treturn new Rectangle(x, x, x, x);\n\t\t} else if (isNull(width)) {\n\t\t\treturn new Rectangle(x, y, x, y);\n\t\t} else {\n\t\t\treturn new Rectangle(x, y, width, height);\n\t\t}\n\t}\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(public x = 0, public y = 0, public width = 0, public height = 0) {\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /** left */\n    get left(): number {\n        return this.x;\n    }\n    set left(value: number) {\n\t\tconst dx = value - this.x;\n\t\tthis.x += dx;\n\t\tthis.width -= dx;\n    }\n\n    /** right */\n    get right(): number {\n\t\treturn this.x + this.width;\n    }\n    set right(value: number) {\n\t\tconst dx = value - (this.x + this.width);\n\t\tthis.width += dx;\n    }\n\n    /** top */\n    get top(): number {\n        return this.y;\n    }\n    set top(value: number) {\n\t\tconst dy = value - this.y;\n\t\tthis.y += dy;\n\t\tthis.height -= dy;\n    }\n\n    /** bottom */\n    get bottom(): number {\n\t\treturn this.y + this.height;\n    }\n    set bottom(value: number) {\n\t\tconst dy = value - (this.y + this.height);\n\t\tthis.height += dy;\n    }\n\n    /** isEmpty */\n    get isEmpty(): boolean {\n\t\treturn this.width === 0 || this.height === 0;\n\t}\n\n\tget isValid(): boolean {\n\t\treturn isValidRect(this);\n\t}\n\n\t//-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    clone(): Rectangle {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    }\n\n    getInner(): Rectangle {\n\t\treturn new Rectangle(0, 0, this.width, this.height);\n    }\n    \n\tequals(r: Rectangle): boolean {\n\t\treturn r === this\n\t\t\t|| r && this.x === r.x && this.y === r.y && this.width === r.width && this.height === r.height;\n\t}\n\n    leftBy(delta: number): Rectangle {\n\t\tthis.x += delta;\n\t\tthis.width -= delta;\n\t\treturn this;\n    }\n    \n    rightBy(delta: number): Rectangle {\n\t\tthis.width += delta;\n\t\treturn this;\n\t}\n\n    topBy(delta: number): Rectangle {\n\t\tthis.y += delta;\n\t\tthis.height -= delta;\n\t\treturn this;\n\t}\n\n    bottomBy(delta: number): Rectangle {\n\t\tthis.height += delta;\n\t\treturn this;\n    }\n    \n    shrink(dx: number, dy: number): Rectangle {\n\t\tthis.width -= dx;\n\t\tthis.height -= dy;\n\t\treturn this;\n    }\n    \n\texpand(dx: number, dy: number): Rectangle {\n\t\tthis.width += dx;\n\t\tthis.height += dy;\n\t\treturn this;\n    }\n    \n\tcontains(x: number, y: number): boolean {\n\t\treturn x >= this.x && x <= this.x + this.width\n\t\t\t&& y >= this.y && y <= this.y + this.height;\n\t}\n\n\tsetEmpty(): Rectangle {\n\t\tthis.width = this.height = 0;\n\t\treturn this;\n    }\n\n    move(x = 0, y = 0): Rectangle {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    \n\tset(x: number, y: number, width: number, height: number): Rectangle {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n    }\n\n    setWidth(value: number): Rectangle {\n        this.width = value;\n        return this;\n    }\n    \n\tcopy(r: Rectangle): Rectangle {\n\t\tthis.x = r.x;\n\t\tthis.y = r.y;\n\t\tthis.width = r.width;\n\t\tthis.height = r.height;\n\t\treturn this;\n    }\n    \n\tcopyHorz(r: Rectangle): Rectangle {\n\t\tthis.x = r.x;\n\t\tthis.width = r.width;\n\t\treturn this;\n    }\n    \n\tcopyVert(r: Rectangle): Rectangle {\n\t\tthis.y = r.y;\n\t\tthis.height = r.height;\n\t\treturn this;\n    }\n    \n\tinflate(left: number = 0, top?: number, right?: number, bottom?: number): Rectangle {\n\t\ttop = top !== undefined ? top : left;\n\t\tright = right !== undefined ? right : left;\n\t\tbottom = bottom !== undefined ? bottom : top;\n\t\tif (left) this.left = this.x - left;\n\t\tif (top) this.top = this.y - top;\n\t\tif (right) this.right = this.right + right;\n\t\tif (bottom) this.bottom = this.bottom + bottom;\n\t\treturn this;\n    }\n    \n\toffset(dx: number, dy: number): Rectangle {\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\treturn this;\n    }\n    \n\tround(): Rectangle {\n\t\tconst r = this.clone();\n\t\tr.x >>>= 0;\n\t\tr.y >>>= 0;\n\t\tr.width >>>= 0;\n\t\tr.height >>>= 0;\n\t\treturn r;\n    }\n    \n\tunion(r: Rectangle): Rectangle {\n        const r2 = this.clone();\n        \n\t\tr2.left = Math.min(this.x, r.x);\n\t\tr2.right = Math.max(this.right, r.right);\n\t\tr2.top = Math.min(this.y, r.y);\n\t\tr2.bottom = Math.max(this.bottom, r.bottom);\n\t\treturn r2;\n    }\n    \n\tnormalize(): Rectangle {\n\t\tif (this.width < 0) {\n\t\t\tthis.x -= this.width;\n\t\t\tthis.width *= -1;\n\t\t}\n\t\tif (this.height < 0) {\n\t\t\tthis.y -= this.height;\n\t\t\tthis.height *= -1;\n\t\t}\n\t\treturn this;\n\t}\n\n\t//-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n\ttoString(): string {\n\t\treturn \"{x: \" + this.x + \", y: \" + this.y + \", width: \" + this.width + \", height: \" + this.height + \"}\";\n    }\n\n\t//-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n","////////////////////////////////////////////////////////////////////////////////\n// SvgShape.ts\n// 2023. 06. 03. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { IRect } from '../Rectangle';\nimport { SizeValue } from '../Types';\nimport { Utils } from '../Utils';\n\nexport enum Shape {\n    LINE = 'line',\n    LINES = 'lines',\n    CIRCLE = 'circle',\n    DIAMOND = 'diamond',\n    RECTANGLE = 'rectangle',\n    SQUARE = 'square',\n    TRIANGLE = 'triangle',\n    ITRIANGLE = 'itriangle',\n}\n\nexport const Shapes = Utils.getEnumValues(Shape);\n\nconst SECTOR_ERROR = 0.001;\n\nexport class SvgShapes {\n\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    static line(x1: number, y1: number, x2: number, y2: number): SizeValue[] {\n        return ['M', x1, y1, 'L', x2, y2];\n    }\n\n    static lines(pts: number[]): SizeValue[] {\n        let i = 0;\n        const vals = ['M', pts[i], pts[i + 1]];\n\n        for (; i < pts.length; i++) {\n            vals.push('L', pts[i++], pts[i]);\n        } \n        vals.push('Z');\n        return vals;\n    }\n\n    static box(x1: number, y1: number, x2: number, y2: number): SizeValue[] {\n        return [\n            'M', x1, y1,\n            'L', x2, y1,\n            'L', x2, y2,\n            'L', x1, y2,\n            'Z'\n        ];\n    }\n\n    static rect(r: IRect): SizeValue[] {\n        return this.rectangle(r.x, r.y ,r.width, r.height);\n    }\n\n    // 직사각형\n    static rectangle(x: number, y: number, width: number, height: number): SizeValue[] {\n        return [\n            'M', x, y,\n            'L', x + width, y,\n            'L', x + width, y + height,\n            'L', x, y + height,\n            'Z'\n        ];\n    }\n\n    // 정사각형\n    static square(x: number, y: number, width: number, height: number): SizeValue[] {\n        const sz = Math.min(width, height);\n\n        x += (width - sz) / 2;\n        y += (height - sz) / 2;\n        \n        return [\n            'M', x, y,\n            'L', x + sz, y,\n            'L', x + sz, y + sz,\n            'L', x, y + sz,\n            'Z'\n        ];\n    }\n\n    static circle(cx: number, cy: number, rd: number): SizeValue[] {\n        return [\n            'M',\n            cx, cy,\n            'm',\n            rd, 0,\n            'a',\n            rd, rd, 0, 1, 1, -rd * 2, 0,\n            'a',\n            rd, rd, 0, 1, 1, rd * 2, 0\n        ];\n    }\n\n    // TODO: 개선할 것!\n    static arc(x: number, y: number, rx: number, ry: number, start: number, end: number): SizeValue[] {\n        const cosStart = Math.cos(start);\n        const sinStart = Math.sin(start);\n        const cosEnd = Math.cos(end -= SECTOR_ERROR);\n        const sinEnd = Math.sin(end);\n        const longArc = end - start - Math.PI < SECTOR_ERROR ? 0 : 1;\n        const clockwise = 1;\n        const path = [];\n\n        path.push(\n            'M',\n            x + rx * cosStart,\n            y + ry * sinStart,\n\n            'A',\n            rx,\n            ry,\n            0,\n            longArc,\n            clockwise,\n            x + rx * cosEnd,\n            y + ry * sinEnd,\n            'Z'\n        );\n        return path;\n    }\n\n    // TODO: 개선할 것!\n    static sector(cx: number, cy: number, rx: number, ry: number, rInner: number, start: number, end: number, clockwise: boolean): SizeValue[] {\n        const circled = Math.abs(end - start - 2 * Math.PI) < SECTOR_ERROR;\n        const long = end - start - Math.PI < SECTOR_ERROR ? 0 : 1;\n        const x1 = Math.cos(start);\n        const y1 = Math.sin(start);\n        const x2 = Math.cos(end -= circled ? SECTOR_ERROR : 0);\n        const y2 = Math.sin(end);\n        const cw = clockwise ? 1 : 0;\n        const innerX = rx * rInner;\n        const innerY = ry * rInner;\n        const path = [];\n\n        path.push(\n            'M',\n            cx + rx * x1,\n            cy + ry * y1,\n            'A',\n            rx,\n            ry,\n            0,\n            long,\n            cw,\n            cx + rx * x2,\n            cy + ry * y2\n        );\n\n        if (circled) {\n            path.push(\n                'M',\n                cx + innerX * x2,\n                cy + innerY * y2\n            )\n        } else {\n            path.push(\n                'L',\n                cx + innerX * x2,\n                cy + innerY * y2\n            )\n        }\n        path.push(\n            'A',\n            innerX,\n            innerY,\n            0,\n            long,\n            // 바깥쪽 원호와 반대 방향으로...\n            1 - cw,\n            cx + innerX * x1,\n            cy + innerY * y1\n        );\n\n        path.push('Z');\n        return path;\n    }\n\n    static diamond(x: number, y: number, w: number, h: number): SizeValue[] {\n        return [\n            'M', x + w / 2, y,\n            'L', x + w, y + h / 2,\n            'L', x + w / 2, y + h,\n            'L', x, y + h / 2,\n            'Z'\n        ];\n    }\n\n    static triangle(x: number, y: number, w: number, h: number): SizeValue[] {\n        return [\n            'M', x + w / 2, y,\n            'L', x + w, y + h,\n            'L', x, y + h,\n            'Z'\n        ];\n    }\n\n    static itriangle(x: number, y: number, w: number, h: number): SizeValue[] {\n        return [\n            'M', x, y,\n            'L', x + w, y,\n            'L', x + w / 2, y + h,\n            'Z'\n        ];\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// RcControl.ts\n// 2021. 11. 25. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { RcObject, RcWrappableObject, RcWrapper } from \"./RcObject\";\nimport { Path, SVGStyleOrClass, _undefined, throwFormat } from \"./Types\";\nimport { Dom } from \"./Dom\";\nimport { locale } from \"./RcLocale\";\nimport { RtLog, SVGNS, isObject, isString } from \"./Common\";\nimport { Utils } from \"./Utils\";\nimport { IRect, Rectangle } from \"./Rectangle\";\nimport { SvgShapes } from \"./impl/SvgShape\";\nimport { ISize } from \"./Size\";\nimport { IPoint } from \"./Point\";\n\nexport interface IPointerHandler {\n    handleMove(ev: PointerEvent): void;\n    handleClick(ev: PointerEvent): void;\n    handleDblClick(ev: PointerEvent): void;\n    handleWheel(ev: WheelEvent): void;\n}\n\n// const BACK_STYLES = {\n//     background: 'fill',\n//     border: 'stroke',\n//     borderWidth: 'strokeWidth',\n//     borderRadius: 'borderRadius'\n// }\n\n/** \n * @internal\n *\n * Control base.\n */\nexport abstract class RcControl extends RcWrappableObject {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly CLASS_NAME = 'rct-control';\n    static readonly SHADOW_FILTER = 'rr-chart-shadow-filter';\n\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _container: HTMLDivElement;\n    private _dom: HTMLDivElement;\n    private _htmlRoot: HTMLDivElement;\n    private _svg: SVGSVGElement;\n    private _defs: SVGDefsElement;\n    private _root: RootElement;\n\n    private _pointerHandler: IPointerHandler;\n\n    private _inited = false;\n    private _testing = false;\n    private _dirty = true;\n    private _requestTimer: any;\n    private _invalidElements: RcElement[] = [];\n    private _toAnimation = 0;\n    private _invalidateLock = false;\n    private _lockDirty = false;\n    private _cssVars = {};\n\n    loaded = false;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, container: string | HTMLDivElement, className?: string) {\n        super();\n\n        if (!doc && container instanceof HTMLDivElement) {\n            doc = container.ownerDocument;\n        }\n        this.$_initControl(doc || document, container, className || RcControl.CLASS_NAME);\n        this._resigterEventHandlers(this._dom);\n        this._inited = true;\n        this.invalidate(true);\n    }\n\n    protected _doDestory(): void {\n        this._unresigterEventHandlers(this._dom);\n        Dom.remove(this._dom);\n        this._dom = null;\n        this._container = null;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    isInited(): boolean {\n        return this._inited;\n    }\n\n    isTesting(): boolean {\n        return this._testing;\n    }\n\n    doc(): Document {\n        return this._dom.ownerDocument;\n    }\n\n    dom(): HTMLElement {\n        return this._dom;\n    }\n\n    width(): number {\n        return this._container.offsetWidth;\n    }\n\n    height(): number {\n        return this._container.offsetHeight;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    clearDefs(): void {\n        Dom.clearChildren(this._defs);\n    }\n\n    clearTemporaryDefs(): void {\n        const defs = this._defs;\n        const childs = defs.children;\n\n        for (let i = 0; i < childs.length; i++) {\n            if (childs[i].hasAttribute(RcElement.TEMP_KEY)) {\n                defs.removeChild(childs[i]);\n            }\n        }\n    }\n\n    appendDom(elt: HTMLElement): void {\n        elt && this._htmlRoot.append(elt);\n    }\n\n    addElement(elt: RcElement): void {\n        elt && this._root.add(elt);\n    }\n\n    removeElement(elt: RcElement): void {\n        this._root.removeChild(elt);\n    }\n\n    setPointerHandler(handler: IPointerHandler): void {\n        this._pointerHandler = handler;\n    }\n\n    invalidate(force = false): void {\n        if (force || !this._invalidateLock && !this._dirty && this._inited) {\n            this._dirty = true;\n            if (!this._requestTimer && !this._testing) {\n                this.$_requestRender();\n            }\n        } else if (this._invalidateLock /* && !_lockDirty */) {\n            this._lockDirty = true;\n        }\n    }\n\n    invalidateLayout(force = false): void {\n        this.invalidate(force);\n    }\n\n    setLock(): void {\n        this._invalidateLock = true;\n    }\n\n    releaseLock(validate = true): void {\n        if (this._invalidateLock) {\n            this._invalidateLock = false;\n        }\n        // lock 중에 invalidate()가 호출됐었다면\n        if (this._lockDirty && validate) {\n            this.invalidate();\n        } \n        this._lockDirty = false;\n    }\n\n    lock(func: (control: RcControl) => void): void {\n        this.setLock();\n        try {\n            func(this);\n        } finally {\n            this.releaseLock();\n        }\n    }   \n\n    silentLock(func: (control: RcControl) => void): void {\n        this.setLock();\n        try {\n            func(this);\n        } finally {\n            this.releaseLock(false);\n        }\n    }   \n\n    getBounds(): DOMRect {\n        return this._dom.getBoundingClientRect();\n    }\n\n    setAnimation(to?: number): void {\n        this._toAnimation = to || 0;\n    }\n\n    fling(distance: number, duration: number): void {\n    }\n\n    getCssVar(name: string): string {\n        let v = this._cssVars[name];\n        \n        if (name in this._cssVars) {\n            return this._cssVars[name];\n        } else {\n            v = getComputedStyle(this._root.dom).getPropertyValue(name);\n            this._cssVars[name] = v;\n        }\n        return v;\n    }\n\n    /**\n     * defs에 직사각형 clipPath를 등록한다.\n     */\n    clipBounds(x = NaN, y = NaN, width = NaN, height = NaN, rd = 0): ClipElement {\n        const clip = new ClipElement(this.doc(), x, y, width, height, rd, rd);\n\n        this._defs.appendChild(clip.dom);\n        return clip;\n    }\n\n    clipRect(r: IRect): ClipElement {\n        return this.clipBounds(r.x, r.y, r.width, r.height);\n    }\n\n    clipPath(): ClipPathElement {\n        const clip = new ClipPathElement(this.doc());\n\n        this._defs.appendChild(clip.dom);\n        return clip;\n    }\n\n    removeDef(element: RcElement): void {\n        this._defs.removeChild(element.dom);\n    }\n\n    containerToElement(element: RcElement, x: number, y: number): IPoint {\n        const cr = this._container.getBoundingClientRect();\n        const br = element.dom.getBoundingClientRect();\n\n        return { x: x + cr.x - br.x, y: y + cr.y - br.y };\n    }\n\n    abstract useImage(src: string): void; // 실제 이미지가 로드됐을 때 다시 그려지도록 한다.\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _setTesting(): void {\n        this._testing = true;\n        (RcElement as any).TESTING = true;\n    }\n\n    protected _setSize(w: number, h: number): void {\n        if (!isNaN(w)) {\n            this._container.style.width = w + 'px';\n            // this._dom.style.width = isNaN(w) ? '100%' : w + 'px';\n        }\n        if (!isNaN(h)) {\n            this._container.style.height = h + 'px';\n            // this._dom.style.height = isNaN(h) ? '100%' : h + 'px';  // 왜 이렇게 했지?\n        }\n    }\n\n    private $_addListener(node: Node, event: string, handler: any): void {\n        node.addEventListener(event, handler);\n    }\n\n    protected _resigterEventHandlers(dom: HTMLElement): void {\n        window.addEventListener('resize', this._windowResizeHandler);\n\n        this.$_addListener(dom, \"click\", this._clickHandler);\n        this.$_addListener(dom, \"dblclick\", this._dblClickHandler);\n        // this.$_addListener(dom, \"touchstart\", this._touchStartHandler);\n        this.$_addListener(dom, \"touchmove\", this._touchMoveHandler);\n        this.$_addListener(dom, \"pointerdown\", this._pointerDownHandler);\n        this.$_addListener(dom, \"pointermove\", this._pointerMoveHandler);\n        this.$_addListener(dom, \"pointerup\", this._pointerUpHandler);\n        this.$_addListener(dom, \"pointercancel\", this._pointerCancelHandler);\n        this.$_addListener(dom, \"pointerleave\", this._pointerLeaveHandler);\n        // this.$_addListener(dom, \"touchleave\", this._touchLeaveHandler);\n        this.$_addListener(dom, \"keypress\", this._keyPressHandler);\n        this.$_addListener(dom, \"wheel\", this._wheelHandler);\n    }\n\n    protected _unresigterEventHandlers(dom: HTMLElement): void {\n        window.removeEventListener('resize', this._windowResizeHandler);\n\n        dom.removeEventListener(\"click\", this._clickHandler);\n        dom.removeEventListener(\"dblclick\", this._dblClickHandler);\n\n        // dom.removeEventListener(\"touchstart\", this._touchStartHandler);\n        dom.removeEventListener(\"touchmove\", this._touchMoveHandler);\n        dom.removeEventListener(\"pointerdown\", this._pointerDownHandler);\n        dom.removeEventListener(\"pointermove\", this._pointerMoveHandler);\n        dom.removeEventListener(\"pointerup\", this._pointerUpHandler);\n        dom.removeEventListener(\"pointercancel\", this._pointerCancelHandler);\n        dom.removeEventListener(\"pointerleave\", this._pointerLeaveHandler);\n        // dom.removeEventListener(\"touchleave\", this._touchLeaveHandler);\n        dom.removeEventListener(\"keypress\", this._keyPressHandler);\n        dom.removeEventListener(\"wheel\", this._wheelHandler);\n    }\n\n    // container div의 'rtc-renderers' 자식들을 사용할 수 있도록 한다.\n    protected _prepareRenderers(dom: HTMLElement): void {\n    }\n\n    private $_initControl(document: Document, container: string | HTMLDivElement, className: string): void {\n        if (this._inited) return;\n\n        if (container instanceof HTMLDivElement) {\n            this._container = container;\n        } else {\n            this._container = document.getElementById(container) as HTMLDivElement;\n        }\n        if (!(this._container instanceof HTMLDivElement)) {\n            throwFormat(locale.invalidOuterDiv, container);\n        }\n\n        const doc = this._container.ownerDocument;\n        const dom = this._dom = doc.createElement('div');\n\n        Object.assign(dom.style, {\n            position: 'relative',\n            width: '100%',\n            height: '100%',  \n            boxSizing: 'border-box',\n            overflow: 'hidden',\n            padding: '20px',\n            \"-webkit-touch-callout\": \"none\",\n            \"-webkit-user-select\": \"none\",\n            \"user-select\": \"none\",\n            \"-webkit-tap-highlight-color\": \"rgba(0, 0, 0, 0)\"\n        })\n        dom.className = className;\n        this._container.appendChild(dom);\n\n        // svg\n        const svg = this._svg = doc.createElementNS(SVGNS, 'svg');\n\n        svg.classList.add('rct-root');\n        svg.style.setProperty('overflow', 'visible', 'important');\n        svg.setAttribute('width', '100%');// contentDiv.clientWidth + 'px');\n        svg.setAttribute('height', '100%');//contentDiv.clientHeight + 'px');\n\n        const desc = doc.createElement('desc');\n        desc.textContent = 'Created by RealChart 1.0.0';\n        svg.appendChild(desc);\n\n        const defs = this._defs = doc.createElementNS(SVGNS, 'defs');\n        this._initDefs(doc, defs);\n        svg.appendChild(defs);\n        dom.appendChild(svg);\n\n        this._root = new RootElement(this);\n        svg.appendChild(this._root['_dom']);\n\n        // html root\n        this._htmlRoot = doc.createElement('div');\n        dom.appendChild(this._htmlRoot);\n        Object.assign(this._htmlRoot.style, {\n            position: 'absolute'\n        });\n    }\n\n    protected _initDefs(doc: Document, defs: SVGElement): void {\n        let filter = doc.createElementNS(SVGNS, 'filter');\n        const ds = doc.createElementNS(SVGNS, 'feDropShadow'); \n\n        filter.setAttribute('id', RcControl.SHADOW_FILTER);\n        ds.setAttribute('dx', '1');\n        ds.setAttribute('dy', '1');\n        ds.setAttribute('flood-olor', '#000');\n        ds.setAttribute('flood-opacity', '0.75');\n        ds.setAttribute('stdDeviation', '1.5');\n\n        filter.appendChild(ds);\n        defs.appendChild(filter);\n    }\n\n    protected _render(): void {\n        this.$_render();\n    }\n\n    private $_invalidateElement(elt: RcElement): void {\n        this._invalidElements.push(elt);\n        this.invalidate();\n    }\n\n    private $_requestRender(): void {\n        if (window.requestAnimationFrame) {\n            this._requestTimer = window.requestAnimationFrame(() => this.$_render());\n        } else {\n            setTimeout(() => {\n                this.$_render();\n            }, 0);\n        }\n    }\n\n    updateNow(): void {\n        this.$_render();\n    }\n\n    private $_render(): void {\n        // animation 중이면 종료 후에 다시 그리도록 한다.\n        if (+new Date() <= this._toAnimation) {\n            this.$_requestRender();\n            return;\n        }\n\n        console.time('render chart');\n        try {\n            this._doBeforeRender();\n\n            const cr = this._dom.getBoundingClientRect();\n            const sr = this._svg.getBoundingClientRect();\n            const w = this._svg.clientWidth;\n            const h = this._svg.clientHeight;\n\n            this._htmlRoot.style.left = (sr.left - cr.left) + 'px';\n            this._htmlRoot.style.top = (sr.top - cr.top) + 'px';\n\n            this._doRender({x: 0, y: 0, width: w, height: h});\n            this._doRenderBackground(this._container.firstElementChild as HTMLDivElement, w, h);\n\n        } finally {\n            this.loaded = true;\n            this._dirty = false;\n            this._requestTimer = null;\n            // this._invalidElements.forEach(elt => elt.validate());\n            this._invalidElements = [];\n            this._doAfterRender();\n            console.timeEnd('render chart');\n        }\n    }\n\n    protected abstract _doRender(bounds: IRect): void;\n    protected _doBeforeRender(): void {}\n    protected _doAfterRender(): void {}\n    protected _doRenderBackground(elt: HTMLDivElement, width: number, height: number): void {}\n\n    //-------------------------------------------------------------------------\n    // event handlers\n    //-------------------------------------------------------------------------\n    protected _windowResizeHandler = (event: Event) => {\n        this._windowResized();\n    }\n\n    protected _windowResized(): void {\n        this.invalidateLayout();\n    }\n\n    toOffset(event: any): any {\n        //const r = event.target.getBoundingClientRect();\n        const r = this._container.getBoundingClientRect();\n        event.pointX = event.clientX - r.left;\n        event.pointY = event.clientY - r.top;\n        return event;\n    }\n\n    private _clickHandler = (ev: PointerEvent) => {\n        this._pointerHandler && this._pointerHandler.handleClick(this.toOffset(ev));\n    }\n\n    private _dblClickHandler = (event: PointerEvent) => {\n    }\n\n    private _touchMoveHandler = (ev: TouchEvent) => {\n    }\n\n    private _pointerDownHandler = (ev: PointerEvent) => {\n    }\n\n    private _pointerMoveHandler = (ev: PointerEvent) => {\n        this._pointerHandler && this._pointerHandler.handleMove(this.toOffset(ev));\n    }\n\n    private _pointerUpHandler = (ev: PointerEvent) => {\n    }\n\n    private _pointerCancelHandler = (ev: PointerEvent) => {\n    }\n\n    private _pointerLeaveHandler = (ev: PointerEvent) => {\n    }\n\n    private _keyPressHandler = (ev: KeyboardEvent) => {\n    }\n\n    private _wheelHandler = (ev: WheelEvent) => {\n    }\n}\n\nexport type RtControlOrWrapper = RcControl | RcWrapper<RcControl>;\n\n/**\n * @internal\n * \n * RcContainer 구성 요소. \n * SVGElement들로 구현된다.\n */\nexport class RcElement extends RcObject {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static TESTING = false;\n    static DEBUGGING = false;\n    static TEMP_KEY = '_temp_';\n\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    private _visible = true;\n    private _x: number;\n    private _y: number;\n    private _width: number;\n    private _height: number;\n    private _zIndex = 0;\n    private _translateX: number;\n    private _translateY: number;\n    private _scaleX = 1;\n    private _scaleY = 1;\n    private _rotation = 0;\n    private _originX: number;\n    private _originY: number;\n    private _matrix: number[];\n\n    protected _styleName: string;\n    protected _styles: any = {};\n    protected _styleDirty = false;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _dom: SVGElement;\n    private _parent: RcElement;\n    removing: boolean;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string, tag: string = _undefined) {\n        super();\n\n        this._dom = doc.createElementNS(SVGNS, tag || 'g');\n        (this._styleName = styleName) && this.setAttr('class', styleName);\n    }\n\n    protected _doDestory(): void {\n        this.remove();\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get doc(): Document {\n        return this._dom.ownerDocument;\n    }\n\n    get dom(): SVGElement {\n        return this._dom;\n    }\n\n    get parent(): RcElement {\n        return this._parent;\n    }\n\n    get control(): RcControl {\n        return this._parent && this._parent.control;\n    }\n\n    get zIndex(): number {\n        return this._zIndex;\n    }\n    set zIndex(value: number) {\n        if (value !== this._zIndex) {\n            this._zIndex = value;\n            // TODO: dom들의 위치를 변경한다.\n        }\n    }\n\n    get x(): number {\n        return this._x;\n    }\n    set x(value: number) {\n        if (value !== this._x) {\n            this._x = value;\n            this.setAttr('x', this._x);\n        }\n    }\n\n    get tx(): number {\n        return this._translateX;\n    }\n\n    get y(): number {\n        return this._x;\n    }\n    set y(value: number) {\n        if (value !== this._y) {\n            this._y = value;\n            this.setAttr('y', this._y);\n        }\n    }\n\n    get ty(): number {\n        return this._translateY;\n    }\n\n    get width(): number {\n        return this._width;\n    }\n    set width(value: number) {\n        if (value !== this._width) {\n            this._width = value;\n            this.setAttr('width', isNaN(value) ? '' : value);\n        }\n    }\n\n    get height(): number {\n        return this._height;\n    }\n    set height(value: number) {\n        if (value !== this._height) {\n            this._height = value;\n            this.setAttr('height', isNaN(value) ? '' : value);\n        }\n    }\n\n    /**\n     * visible\n     */\n    get visible(): boolean {\n        return this._visible;\n    }\n    set visible(value: boolean) {\n        this.setVisible(value);\n    }\n    setVisible(value: boolean): boolean {\n        if (value !== this._visible) {\n            this._visible = value;\n            if (this._dom) {\n                this._dom.style.display = this._visible ? '' : 'none';\n            }\n        }\n        return this._visible;\n    }\n\n    /**\n     * rotation\n     */\n    get rotation(): number {\n        return this._rotation;\n    }\n    set rotation(value: number) {\n        if (value != this._rotation) {\n            this._rotation = value;\n            this._updateTransform();\n        }\n    }\n\n    setRotaion(originX: number, originY: number, rotation: number): RcElement {\n        if (originX !== this._originX || originY !== this._originY || rotation !== this._rotation) {\n            this._originX = originX;\n            this._originY = originY;;\n            this._rotation = rotation;\n            this._updateTransform();\n        }\n        return this;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getStyle(prop: string): string {\n        return window.getComputedStyle(this._dom).getPropertyValue(prop);\n    }\n\n    hasStyle(className: string): boolean {\n        return this.dom.classList.contains(className);\n    }\n\n    add(child: RcElement): RcElement {\n        if (child && child._parent !== this) {\n            child._parent = this;\n            this._dom.appendChild(child._dom);\n            child._doAttached(this);\n        }\n        return child;\n    }\n\n    insertChild(child: RcElement, before: RcElement): RcElement {\n        if (child && child._parent !== this) {\n            child._parent = this;\n            this._dom.insertBefore(child._dom, before._dom);\n            child._doAttached(this);\n        }\n        return child;\n    }\n\n    insertFirst(child: RcElement): RcElement {\n        if (child && child._parent !== this) {\n            child._parent = this;\n            this._dom.insertBefore(child._dom, this._dom.firstChild);\n            child._doAttached(this);\n        }\n        return child;\n    }\n\n    removeChild(child: RcElement): void {\n        if (child && child._parent === this) {//} child._dom.parentNode === this._dom) {\n            this._dom.removeChild(child._dom);\n            child._parent = null;\n            child._doDetached(this);\n        }\n    }\n\n    remove(): RcElement {\n        this._parent && this._parent.removeChild(this);\n        return this;\n    }\n\n    appendElement(doc: Document, tag: string): SVGElement {\n        const elt = doc.createElementNS(SVGNS, tag);\n        this._dom.appendChild(elt);\n        return elt;\n    }   \n\n    insertElement(doc: Document, tag: string, before: Node): SVGElement {\n        const elt = doc.createElementNS(SVGNS, tag);\n        this._dom.insertBefore(elt, before);\n        return elt;\n    }   \n\n    getAttr(attr: string): any {\n        return this.dom.getAttribute(attr);\n    }\n\n    setAttr(attr: string, value: any): RcElement {\n        this.dom.setAttribute(attr, value);\n        return this;\n    }\n\n    setAttrs(attrs: any): RcElement {\n        for (let attr in attrs) {\n            this.dom.setAttribute(attr, attrs[attr]);\n        }\n        return this;\n    }\n\n    unsetAttr(attr: string): RcElement {\n        this.dom.removeAttribute(attr);\n        return this;\n    }\n\n    setBounds(x: number, y: number, width: number, height: number): RcElement {\n        this.translate(x, y);\n        this.resize(width, height);\n        return this;\n    }\n\n    setRect(rect: IRect): RcElement {\n        this.translate(rect.x, rect.y);\n        this.resize(rect.width, rect.height);\n        return this;\n    }\n\n    getRect(): IRect {\n        return Rectangle.create(this._translateX, this._translateY, this.width, this.height);\n    }\n\n    getSize(): ISize {\n        return { width: this.width, height: this.height };\n    }\n\n    getBBounds(): IRect {\n        return (this._dom as SVGGraphicsElement).getBBox();\n    }\n\n    controlToElement(x: number, y: number): IPoint {\n        return this.control.containerToElement(this, x, y);\n    }\n\n    move(x: number, y: number): RcElement {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    translate(x: number, y: number): RcElement {\n        if (x !== this._translateX || y !== this._translateY) {\n            if (Utils.isValidNumber(x)) this._translateX = x;\n            if (Utils.isValidNumber(y)) this._translateY = y;\n            this._updateTransform();\n        }\n        return this;\n    }\n\n    translateX(x: number): RcElement {\n        if (x !== this._translateX) {\n            if (Utils.isValidNumber(x)) this._translateX = x;\n            this._updateTransform();\n        }\n        return this;\n    }\n\n    translateY(y: number): RcElement {\n        if (y !== this._translateY) {\n            if (Utils.isValidNumber(y)) this._translateY = y;\n            this._updateTransform();\n        }\n        return this;\n    }\n\n    resize(width: number, height: number, attr = true): RcElement {\n        if (width !== this._width) {\n            attr && this.setAttr('width', this._width = width);\n        }\n        if (height !== this._height) {\n            attr && this.setAttr('height', this._height = height);\n        }\n        return this;\n    }\n\n    appendDom(dom: Node): Node {\n        dom && this._dom.appendChild(dom);\n        return dom;\n    }\n\n    insertDom(dom: Node, before: Node): Node {\n        dom && this._dom.insertBefore(dom, before);\n        return dom;\n    }\n\n    clearDom(): void {\n        const dom = this._dom;\n        let child: Node;\n\n        while (child = dom.lastChild) {\n            dom.removeChild(child);\n        }\n    }\n\n    clearStyles(): boolean {\n        const css = (this.dom as SVGElement | HTMLElement).style;\n        let changed = false;\n\n        for (let p in this._styles) {\n            css.removeProperty(p);\n            changed = true;\n        }\n        \n        this._styles = {};\n        if (changed) this._styleDirty = true;\n        return changed;\n    }\n\n    clearStyle(props: string[]): boolean {\n        let changed = false;\n\n        if (props) {\n            const css = (this.dom as SVGElement | HTMLElement).style;\n\n            for (let p of props) {\n                if (p in this._styles) {\n                    css.removeProperty(p);\n                    delete this._styles[p];\n                    changed = true;\n                }                \n            }\n            if (changed) this._styleDirty = true;\n        }\n        return changed;\n    }\n\n    setStyles(styles: any): boolean {\n        let changed = false;\n\n        if (styles) {\n            const css = (this.dom as SVGElement | HTMLElement).style;\n\n            for (let p in styles) {\n                // if (!(p in BACK_STYLES) && this._styles[p] !== styles[p]) {\n                if (this._styles[p] !== styles[p]) {\n                    css[p] = this._styles[p] = styles[p];\n                    changed = true;\n                }\n            }\n            if (changed) this._styleDirty = true;\n        }\n        return changed;\n    }\n\n    resetStyles(styles: any): boolean {\n        const r = this.clearStyles();\n        return this.setStyles(styles) || r;        \n    }\n\n    protected _resetClass(): void {\n        this._styleName ? this.setAttr('class', this._styleName) : this.unsetAttr('class');\n    }\n\n    clearStyleAndClass(): void {\n        this.clearStyles();\n        this._resetClass();\n    }\n\n    setStyleOrClass(style: SVGStyleOrClass): void {\n        if (isString(style)) {\n            this._resetClass();\n            style && this._dom.classList.add(style);\n        } else {\n            this.resetStyles(style);\n        }\n    }\n\n    addStyleOrClass(style: SVGStyleOrClass): void {\n        if (isString(style)) {\n            style && this._dom.classList.add(style);\n        } else if (isObject(style)) {\n            this.setStyles(style);\n        }\n    }\n\n    setStyleName(value: string): void {\n        this.setAttr('class', value);\n    }\n\n    setStyle(prop: string, value: string): boolean {\n        let changed = false;\n\n        //if (!(prop in BACK_STYLES) && value !== this._styles[prop]) {\n        if (value !== this._styles[prop]) {\n            changed = this._styleDirty = true;\n            this._styles[prop] = value;\n            (this.dom as SVGElement | HTMLElement).style[prop] = value;\n        }\n        return changed;\n    }\n\n    putStyles(styles: any, buff?: any): any {\n        buff = buff || {};\n        if (styles) {\n            for (let p in styles) {\n                buff[p] = styles[p];\n            }\n        }\n        return buff;\n    }\n\n    putStyle(prop: string, value: string, buff?: any): any {\n        buff = buff || {};\n        buff[prop] = value;\n        return buff;\n    }\n\n    setData(data: string, value?: string): void {\n        this.dom.dataset[data] = value || '';\n    }\n\n    unsetData(data: string): void {\n        delete this.dom.dataset[data];\n    }\n\n    // TODO\n    removeLater(moveToFirst = true, duration = 0.5): RcElement {\n        return this;\n    }\n\n    // TODO\n    fadeout(removeDelay: number, startOpacity: number): RcElement {\n        return this;\n    }\n\n    clipRect(x: number, y: number, width: number, height: number, rd = 0): ClipElement {\n        const cr = this.control.clipBounds(x, y, width, height, rd);\n\n        this.setClip(cr);\n        return cr;\n    }\n\n    setClip(cr?: ClipElement | ClipPathElement | string): void {\n        if (cr) {\n            this.setAttr('clip-path', 'url(#' + (cr['id'] || cr) + ')');\n        } else {\n            this.unsetAttr('clip-path');\n        }\n    }\n\n    setTemporary(): RcElement {\n        this.setAttr(RcElement.TEMP_KEY, 1);\n        return this;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _testing(): boolean {\n        return RcElement.TESTING;\n    }\n\n    protected _doAttached(parent: RcElement) {\n    }\n\n    protected _doDetached(parent: RcElement) {\n    }\n\n    protected _updateTransform(): void {\n        const dom = this._dom;\n        let tx = this._translateX;\n        let ty = this._translateY;\n\n        // translate\n        let tf = [];\n\n        if (Utils.isValidNumber(tx) || Utils.isValidNumber(ty)) {\n            tx = tx || 0;\n            ty = ty || 0;\n            tf = ['translate(' + tx + ',' + ty + ')'];\n        }\n\n        // matrix\n        if (Utils.isNotEmpty(this._matrix)) {\n            tf.push('matrix(' + this._matrix.join(',') + ')');\n        }\n        \n        // rotation\n        if (this._rotation) {\n            tf.push('rotate(' + this._rotation + ' ' +\n            Utils.pick(this._originX, dom.getAttribute('x'), 0) +\n            ' ' +\n            Utils.pick(this._originY, dom.getAttribute('y') || 0) + ')');\n        }\n\n        // scale\n        const sx = Utils.getNumber(this._scaleX, 1);\n        const sy = Utils.getNumber(this._scaleY, 1);\n        if (sx !== 1 || sy !== 1) {\n            tf.push('scale(' + sx + ' ' + sy + ')');\n        }\n\n        if (tf.length) {\n            this._dom.setAttribute('transform', tf.join(' '));\n        }\n    }\n}\n\nexport class LayerElement extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string) {\n        super(doc, styleName, 'g');\n    }\n}\n\nclass RootElement extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _control: RcControl;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(control: RcControl) {\n        super(control.doc(), null);\n\n        this._control = control;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    get control(): RcControl {\n        return this._control;\n    }\n}\n\nexport class ClipElement extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _id: string;\n    private _rect: RcElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, x: number, y: number, width: number, height: number, rx = 0, ry = 0) {\n        super(doc, _undefined, 'clipPath');\n\n        const id = this._id = Utils.uniqueKey() + '-';\n        this.setAttr('id', id);\n\n        const rect = this._rect = new RcElement(doc, null, 'rect');\n        rect.setAttr('fill', 'none');\n        rx > 0 && rect.setAttr('rx', String(rx));\n        ry > 0 && this.dom.setAttribute('rx', String(ry));\n        if (!isNaN(x)) {\n            rect.setBounds(x, y, width, height);\n        }\n        this.add(rect);\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get id(): string {\n        return this._id;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    setBounds(x: number, y: number, w: number, h: number): RcElement {\n        //this._rect.setBounds(x, y, w, h);\n        // this._rect.setAttr('transform', '');\n        this._rect.move(x, y);\n        this._rect.resize(w, h);\n        return this;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    get x(): number {\n        return this._rect.x;\n    }\n    set x(value: number) {\n        this._rect.x = value;\n    }\n    \n    get y(): number {\n        return this._rect.y;\n    }\n    set y(value: number) {\n        this._rect.y = value;\n    }\n\n    get width(): number {\n        return this._rect.width;\n    }\n    set width(value: number) {\n        this._rect.width = value;\n    }\n    \n    get height(): number {\n        return this._rect.height;\n    }\n    set height(value: number) {\n        this._rect.height = value;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n\nexport class PathElement extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _path: Path;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string = void 0, path: Path = void 0) {\n        super(doc, styleName, 'path');\n\n        path && this.setPath(path);\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    path(): Path {\n        return this._path;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    setPath(path: Path): void {\n        if (path !== this._path) {\n            this._path = path;\n\n            if (isString(path)) {\n                this.setAttr('d', path);\n            } else {\n                this.setAttr('d', path.join(' '));\n            }\n        }\n    }\n\n    renderShape(shape: string, x: number, y: number, rd: number): void {\n        let path: any;\n        \n        switch (shape) {\n            case 'squre':\n            case 'diamond':\n            case 'triangle':\n            case 'itriangle':\n                path = SvgShapes[shape](x - rd, y - rd, rd * 2, rd * 2);\n                break;\n\n            default:\n                path = SvgShapes.circle(x, y, rd);\n                break;\n        }\n        this.setPath(path);\n    }\n    \n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n\n\nexport class ClipPathElement extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _id: string;\n    private _path: PathElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, _undefined, 'clipPath');\n\n        const id = this._id = Utils.uniqueKey() + '-';\n        this.setAttr('id', id);\n\n        this._path = new PathElement(doc);\n        this.add(this._path);\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get id(): string {\n        return this._id;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    setPath(path: Path): void {\n        this._path.setPath(path);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n","////////////////////////////////////////////////////////////////////////////////\n// NumberFormatter.ts\n// 2022. 03. 06. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2022 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nconst ZERO = '0'.charCodeAt(0);\nconst SHARP = '#'.charCodeAt(0);\nconst COMMA = ','.charCodeAt(0);\nconst SIGN = 's'.charCodeAt(0);\nconst ABS = 'a'.charCodeAt(0);\n\n/**\n * @internal \n * \n * 'as,0.0#'\n * NOTE: 'a'는 bigint에 사용할 수 없다.\n * \n * TODO: ',' 자리에 다른 문자(ex. space)를 표시할 수 있도록 한다.\n */\nexport class NumberFormatter {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly DEFAULT_FORMAT = \"\";\n\n\t//-------------------------------------------------------------------------\n    // static members\n\t//-------------------------------------------------------------------------\n    private static readonly Formatters: { [key: string]: NumberFormatter } = {};\n    \n    static getFormatter(format: string): NumberFormatter {\n        let f = NumberFormatter.Formatters[format];\n        if (!f) {\n            NumberFormatter.Formatters[format] = f = new NumberFormatter(format);\n        }\n        return f;\n    }\n    \n    static get Default(): NumberFormatter {\n        return NumberFormatter.getFormatter(NumberFormatter.DEFAULT_FORMAT);\n    }\n\n\t//-------------------------------------------------------------------------\n    // fields\n\t//-------------------------------------------------------------------------\n\tprivate _format: string;\n\tprivate _options: any;\n\n\t//-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n\tconstructor(format: string) {\n\t\tformat = format.trim();\n        this._options = format ? this.$_parse(this._format = format) : {useGrouping: false};\n\t}\n\n\t//-------------------------------------------------------------------------\n    // properties\n\t//-------------------------------------------------------------------------\n\tget format(): string {\n\t\treturn this._format;\n\t}\n\n\t//-------------------------------------------------------------------------\n    // methods\n\t//-------------------------------------------------------------------------\n\ttoStr(value: number | bigint): string {\n\t\treturn value.toLocaleString(undefined, this._options);\n\t}\n\n\t//-------------------------------------------------------------------------\n    // internal members\n\t//-------------------------------------------------------------------------\n\tprivate $_parse(s: string): object {\n\t\tconst len = s.length;\n\n\t\tif (len > 0) {\n\t\t\tconst options: any = {\n\t\t\t\tuseGrouping: false,\n\t\t\t\tminimumIntegerDigits: 0,\n\t\t\t\tminimumFractionDigits: 0,\n\t\t\t\tmaximumFractionDigits: 0,\n\t\t\t};\n\t\t\tlet p = s.indexOf('.');\n\n\t\t\tif (p >= 0) {\n\t\t\t\tlet i = p + 1;\n\t\t\t\twhile (i < len) {\n\t\t\t\t\tif (s.charCodeAt(i) === ZERO) {\n\t\t\t\t\t\toptions.minimumFractionDigits++;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toptions.maximumFractionDigits = options.minimumFractionDigits;\n\t\t\t\twhile (i < len) {\n\t\t\t\t\tif (s.charCodeAt(i) === SHARP) {\n\t\t\t\t\t\toptions.maximumFractionDigits++;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tp = p - 1;\n\t\t\t} else {\n\t\t\t\tp = len - 1;\n\t\t\t}\n\n\t\t\tlet i = p;\n            \n\t\t\twhile (i >= 0) {\n\t\t\t\tif (s.charCodeAt(i) === ZERO) {\n\t\t\t\t\toptions.minimumIntegerDigits++;\n\t\t\t\t\ti--;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (i >= 0) {\n\t\t\t\tconst c = s.charCodeAt(i--);\n\t\t\t\tif (c === COMMA) {\n\t\t\t\t\toptions.useGrouping = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = p;\n\t\t\twhile (i >= 0) {\n\t\t\t\tconst c = s.charCodeAt(i--);\n\t\t\t\tif (c === SIGN) {\n\t\t\t\t\toptions.signDisplay = 'always';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!options.signDisplay) {\n\t\t\t\ti = p;\n\t\t\t\twhile (i >= 0) {\n\t\t\t\t\tconst c = s.charCodeAt(i--);\n\t\t\t\t\tif (c === ABS) {\n\t\t\t\t\t\toptions.signDisplay = 'never';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toptions.minimumIntegerDigits = Math.max(1, options.minimumIntegerDigits);\n\t\t\treturn options;\n\t\t}\n\t}\n}\n","////////////////////////////////////////////////////////////////////////////////\n// RichText.ts\n// 2023. 07. 14. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum } from \"./Common\";\nimport { ZWSP } from \"./Types\";\nimport { TextElement } from \"./impl/TextElement\";\n\nconst HEIGHT = '$_TH';\nconst WIDTH = '$_TW';\n\nexport type RichTextParamCallback = (target: any, param: string) => string;\n\nclass Word {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    text: string;\n    private _literals: string[];\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get type(): string {\n        return '';\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    parse(str: string): Word {\n        this.text = str;\n        this._doParse(str);\n        return this;\n    }\n\n    getText(target: any, callback: RichTextParamCallback): string {\n        const literals = this._literals;\n\n        if (literals && callback) {\n            let s = this.text;\n\n            for (let i = 0; i < literals.length; i += 3) {\n                s = s.replace(literals[i], callback(target, literals[i + 1]));//, literals[i + 2]));\n            }\n            return s;\n        }\n        return this.text;\n    }\n\n    prepareSpan(span: SVGTSpanElement, target: any, domain: RichTextParamCallback): SVGTSpanElement {\n        const s = this.getText(target, domain);\n\n        span.textContent = s;\n        //console.log(span.textContent, span.getBBox().y, span.getBBox().height);\n        return span;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _doParse(str: string): Word {\n        this._literals = [];\n\n        let x = 0;\n\n        while (x < str.length) {\n            const i = str.indexOf('${', x);\n            if (i < 0) break;\n\n            const j = str.indexOf('}', i + 2);\n            if (j < 0) break;\n            \n            const s = str.substring(i, j + 1);\n            const s2 = s.substring(2, s.length - 1);\n            const k = s2.indexOf(':');\n\n            if (k > 0) {\n                this._literals.push(s, s2.substring(0, k), s2.substr(k + 1));\n            } else {\n                this._literals.push(s, s2, '');\n            }\n\n            x = j + 1;\n        }\n\n        if (this._literals.length == 0) this._literals = null;\n        return this;\n    }\n}\n\nabstract class SpanWord extends Word {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    prepareSpan(span: SVGTSpanElement, target: any, domain: RichTextParamCallback): SVGTSpanElement {\n        const s = this.getText(target, domain);\n        const x1 = s.indexOf('>') + 1;\n        const x2 = s.indexOf('<', x1);\n\n        this._doPrepare(span, s, x1, x2);\n\n        //console.log(span.textContent, span.getBBox().y, span.getBBox().height);\n        return span;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _doPrepare(span: SVGTSpanElement, s: string, x1: number, x2: number): void {\n        span.textContent = s.substring(x1, x2);\n\n        const i = s.indexOf('style=');\n\n        if (i > 0 && i < x1) {\n            const c = s[i + 6];\n            const j = s.indexOf(c, i + 7);\n            \n            if (j > 0 && j < x1) {\n                span.setAttribute('style', s.substring(i + 7, j));\n            }\n        }\n    }\n}\n\nclass NormalWord extends SpanWord {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    get type(): string {\n        return 't';\n    }\n}\n\nclass BoldWord extends SpanWord {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    get type(): string {\n        return 'b';\n    }\n\n    protected _doPrepare(span: SVGTSpanElement, s: string, x1: number, x2: number): void {\n        super._doPrepare(span, s, x1, x2);\n        span.setAttribute('class', 'rct-text-bold')\n    }\n}\n\nclass ItalicWord extends SpanWord {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    get type(): string {\n        return 'i';\n    }\n\n    protected _doPrepare(span: SVGTSpanElement, s: string, x1: number, x2: number): void {\n        super._doPrepare(span, s, x1, x2);\n        span.setAttribute('class', 'rct-text-italic')\n    }\n}\n\nconst Words = {\n    't': NormalWord,\n    'b': BoldWord,\n    'i': ItalicWord\n}\n\nclass SvgLine {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _words: Word[];\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get words(): Word[] {\n        return this._words.slice();\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    parse(s: string): SvgLine {\n\n        function addPlain(s: string): void {\n            const cnt = words.length;\n\n            if (cnt > 0 && words[cnt - 1].type === '') {\n                words[cnt - 1].text += s;\n            } else {\n                words.push(new Word().parse(s));\n            }\n        }\n\n        const words = this._words = [];\n        let x = 0;\n\n        while (x < s.length) {\n            const c = s[x];\n            const c2 = s[x + 1];\n\n            if (c == '<') {\n                let w: Word;\n\n                if (c2 in Words) {\n                    const i = s.indexOf('>', x + 2);\n                    if (i >= 0) {\n                        const s2 = '</' + c2 + '>';\n                        const j = s.indexOf(s2, i + 1);\n                        if (j >= 0) {\n                            const s3 = s.substring(x, j + s2.length);\n                            w = new Words[c2]().parse(s3);\n                            x += s3.length;\n                        }\n                    }\n                }\n\n                if (w) {\n                    this._words.push(w);\n                } else {\n                    addPlain(s.substring(x));\n                    break;\n                }\n            } else {\n                const i = s.indexOf('<', x + 1);\n\n                if (i >= 0) {\n                    addPlain(s.substring(x, i));\n                    x = i;\n                } else {\n                    addPlain(s.substring(x));\n                    break;\n                }\n            }\n        }\n        return this;\n    }\n\n    getText(target: any, domain: RichTextParamCallback): string {\n        let s = '';\n        \n        for (let w of this._words) {\n            s += w.getText(target, domain);\n        }\n        return s;\n    }\n}\n\n/**\n * <t>, <b>, <i>, <br>,\n * <b>${label}</b><br><t style=\"fill:#c00;\">${endValue}</t>\n */\nexport class SvgRichText {\n\t\n    //-------------------------------------------------------------------------\n    // static members\n\t//-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    private _format: string;\n    lineHeight = 1;\n\n    //-------------------------------------------------------------------------\n    // fields\n\t//-------------------------------------------------------------------------\n    private _lines: SvgLine[];\n\n\t//-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n\tconstructor(format?: string) {\n\t\tthis.format = format;\n\t}\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /** format */\n\tget format(): string {\n\t\treturn this._format;\n    }\n    set format(value: string) {\n        if (value !== this._format) {\n            this._format = value;\n            value && this.$_parse(value);\n        }\n    }\n\n    get lines(): SvgLine[] {\n        return this._lines.slice();\n    }\n\n\t//-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    // getSvg(target: any, domain: RichTextParamCallback): string {\n    //     let s = '';\n\n    //     for (let line of this._lines) {\n    //         s += line.getText(target, domain);\n    //     }\n    //     return s;\n    // }\n\n    build(view: TextElement, target: any, domain: RichTextParamCallback): void {\n        const doc = view.doc;\n        const hLine = pickNum(this.lineHeight, 1);\n        let hMax = 0;\n        const lines = this._lines;\n        const cnt = lines.length;\n        const firsts: Node[] = [];\n\n        view.clearDom();\n        target = target || view;\n\n        for (let i = 0; i < cnt; i++) {\n            const line = lines[i];\n            let h = 0;\n            let first: Node = null;\n\n            for (let word of line.words) {\n                const span = word.prepareSpan(view.appendElement(doc, 'tspan') as SVGTSpanElement, target, domain);\n                const r = span.getBBox();\n                \n                span[WIDTH] = r.width;\n                h = Math.max(h, span[HEIGHT] = r.height);\n\n                if (!first) first = span;\n            }\n            firsts.push(first);\n            line[HEIGHT] = h * hLine;\n            hMax = Math.max(h, hMax);\n        }\n         \n        for (let i = 1; i < firsts.length; i++) {\n            const span = view.insertElement(doc, 'tspan', firsts[i]);\n            const h: any = Math.ceil(view.getAscent(this._lines[i][HEIGHT]));\n\n            span.setAttribute('x', '0');\n            span.setAttribute('dy', h);\n            span.innerHTML = ZWSP;\n        }\n\n        //parent.layoutText(lines[0][HEIGHT]);\n        view.layoutText(hMax); // 가장 큰 높이의 행 높이를 전달한다. 맞나?\n    }\n\n\t//-------------------------------------------------------------------------\n    // internal members\n\t//-------------------------------------------------------------------------\n    $_parse(fmt: string): void {\n        const lines = this._lines = [];\n\n        if (fmt) {\n            const strs = fmt.split(/<br.*?>|\\r\\n|\\n/);\n\n            for (let s of strs) {\n                lines.push(new SvgLine().parse(s));\n            }\n        }\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ChartItem.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isArray, isBoolean, isObject, isString } from \"../common/Common\";\nimport { NumberFormatter } from \"../common/NumberFormatter\";\nimport { RcObject } from \"../common/RcObject\";\nimport { SvgRichText, RichTextParamCallback } from \"../common/RichText\";\nimport { NUMBER_FORMAT, NUMBER_SYMBOLS, SVGStyleOrClass, _undefined } from \"../common/Types\";\nimport { Utils } from \"../common/Utils\";\nimport { TextElement } from \"../common/impl/TextElement\";\nimport { IChart } from \"./Chart\";\n\nexport abstract class ChartItem extends RcObject {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    readonly chart: IChart;\n    private _visible: boolean;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart, visible = true) {\n        super();\n\n        this.chart = chart;\n        this._visible = visible;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /** visible */\n    get visible(): boolean {\n        return this._visible;\n    }\n    set visible(value: boolean) {\n        if (value !== this._visible) {\n            this._visible = value;\n            this.chart?._visibleChanged(this);\n        }\n    }\n\n    style: SVGStyleOrClass;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    load(source: any): ChartItem {\n        if (!this._doLoadSimple(source)) {\n            this._doLoad(source);\n        }\n        return this;\n    }\n\n    prepareRender(): void {\n        this._doPrepareRender(this.chart);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _changed(): void {\n        this.chart?._modelChanged(this);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _doLoadSimple(source: any): boolean {\n        if (isBoolean(source)) {\n            this.visible = source;\n            return true;\n        }\n    }\n\n    protected _getDefObjProps(prop: string): any {\n        return;\n    }\n\n    protected _doLoad(source: any): void {\n        for (const p in source) {\n            //if (this.hasOwnProperty(p)) {\n                let v = source[p];\n\n                if (this._doLoadProp(p, v)) {\n                } else if (isArray(v)) {\n                    this[p] = v.slice(0);\n                } else if (this[p] instanceof ChartItem) {\n                    this[p].load(v);\n                } else if (isObject(v)) {\n                    this[p] = Object.assign({}, this._getDefObjProps(p), v);\n                } else {\n                    this[p] = v;\n                }\n            //}\n        }\n    }\n\n    protected _doLoadProp(prop: string, value: any): boolean {\n        return false;\n    }\n\n    protected _doPrepareRender(chart: IChart): void {}\n}\n\nexport const BRIGHT_COLOR = 'white';\nexport const DARK_COLOR = 'black';\n\nexport enum ChartTextEffect {\n    NONE = 'none',\n    /**\n     * 텍스트 색상과 대조되는 색상으로 텍스트 외곽을 구분 표시한다.\n     */\n    OUTLINE = 'outline',\n    /**\n     * 텍스트 배경 상자를 표시한다.\n     * <br>\n     * 배경 상자에 {@link backgroundStyle}이 적용된다.\n     * 스타일이 적용되지 않으면 기본 'rct-text-background'이 적용된다.\n     */\n    BACKGROUND = 'background'\n}\n\nexport abstract class ChartText extends ChartItem {\n    effect = ChartTextEffect.NONE;\n    brightStyle: SVGStyleOrClass;\n    darkStyle: SVGStyleOrClass;\n    backgroundStyle: SVGStyleOrClass;\n    /**\n     * 텍스트가 data point 내부에 표시되는 경우 포인트 색상과 대조되도록 표시한다.\n     * <br>\n     * 밝게 표시할 때는 {@link brightStyle}을 적용하고,\n     * 어둡게 표시할 때는 {@link darkStyle}이 적용된다.\n     * brightStyle이 지정되지 않으면 'rct-text-bright'이,\n     * darkStyle이 지정되지 않으면 'rct-text-dark'가 기본 적용된다.\n     */\n    autoContrast = true;// true;\n}\n\nexport abstract class FormattableText extends ChartText {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    private _numberSymbols: string;\n    private _numberFormat: string;\n    private _text: string;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _numSymbols: string[];\n    private _numberFormatter: NumberFormatter;\n    private _richTextImpl: SvgRichText;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart, visible: boolean) {\n        super(chart, visible);\n\n        this.numberSymbols = NUMBER_SYMBOLS;\n        this.numberFormat = NUMBER_FORMAT;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * label 문자열 앞에 추가되는 문자열.\n     */\n    prefix: string;\n\n    /**\n     * label 문자열 끝에 추가되는 문자열.\n     */\n    suffix: string;\n\n    /**\n     * 축의 tick 간격이 1000 이상인 큰 수를 표시할 때 \n     * 이 속성에 지정한 symbol을 이용해서 축약형으로 표시한다.\n     */\n    get numberSymbols(): string {\n        return this._numberSymbols;\n    }\n    set numberSymbols(value: string) {\n        if (value !== this._numberSymbols) {\n            this._numberSymbols = value;\n            this._numSymbols = value && value.split(',');\n        }\n    }\n\n    /**\n     * label이 숫자일 때 표시 형식.\n     */\n    get numberFormat(): string {\n        return this._numberFormat;\n    }\n    set numberFormat(value: string) {\n        if (value !== this._numberFormat) {\n            this._numberFormat = value;\n            this._numberFormatter = value ? NumberFormatter.getFormatter(value) : null;\n        }\n    }\n\n    /**\n     * point label:\n     * position으로 지정된 위치로 부터 떨어진 간격.\n     * center나 middle일 때는 무시.\n     * 파이 시리즈 처럼 label 연결선이 있을 때는 연결선과의 간격.\n     * \n     * axis label:\n     * 축 line과의 간격.\n     */\n    offset = 2;\n\n    /**\n     * rich text format을 지정할 수 있다.\n     */\n    get text(): string {\n        return this._text;\n    }\n    set text(value: string) {\n        if (value !== this._text) {\n            this._text = value;\n            if (value) {\n                if (!this._richTextImpl) this._richTextImpl = new SvgRichText()\n                this._richTextImpl.format = value;\n            } else {\n                this._richTextImpl = null;\n            }\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    // getSvg(target: any, callback: RichTextParamCallback): string {\n    //     if (this._richText) {\n    //         return this._richText.getSvg(target, callback);\n    //     }\n    // }\n\n    buildSvg(view: TextElement, target: any, callback: RichTextParamCallback): void {\n        this._richTextImpl.build(view, target, callback);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doLoadSimple(source: any): boolean {\n        if (isString(source)) {\n            this.text = source;\n            return true;\n        }\n        return super._doLoadSimple(source);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_getNumberText(value: any, useSymbols: boolean, forceSymbols: boolean): string {\n        if (Utils.isValidNumber(value)) {\n            const sv = this._numSymbols && useSymbols && Utils.scaleNumber(value, this._numSymbols, forceSymbols);\n\n            if (this._numberFormatter) {\n                if (sv) {\n                    return this._numberFormatter.toStr(sv.value) + sv.symbol;\n                } else {\n                    return this._numberFormatter.toStr(value);\n                }\n            } else if (sv) {\n                return sv.value + sv.symbol;\n            } else {\n                return String(value);\n            }\n        }\n        return 'NaN';\n    }\n    \n    protected _getText(text: string, value: any, useSymbols: boolean, forceSymbols = false): string {\n        let s = text || this.$_getNumberText(value, useSymbols, forceSymbols) || value;\n        \n        if (this.prefix) s = this.prefix + s;\n        if (this.suffix) s += this.suffix;\n        return s;\n    }\n}\n\nexport class BackgroundImage extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    url: string;\n    style: SVGStyleOrClass;\n}\n","////////////////////////////////////////////////////////////////////////////////\n// Crosshair.ts\n// 2023. 08. 07. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { SVGStyleOrClass } from \"../common/Types\";\nimport { IAxis } from \"./Axis\";\nimport { ChartItem } from \"./ChartItem\";\n\nexport class Crosshair extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(public axis: IAxis) {\n        super(axis.chart);\n\n        this.visible = false;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * true면 마우스 위치를 따라 항상 표시하고, false면 data point 위에 마우스가 있을 때만 표시한다.\n     */\n    showAlways = true;\n\n    // /**\n    //  * true면 포인트가 차지하는 배경 영역 크기에 맞게 line대신 bar를 표시한다.\n    //  */\n    // pointBar = false;\n\n    /**\n     * true면 축 label 위치에 crosshair 지점에 해당하는 값을 표시한다.\n     */\n    showLabel = true;\n\n    /**\n     * {@link showLabel}이 true일 때 표시될 텍스트 형식.\n     * <br>\n     * 별도로 지정하지 않으면 현재 위치에 해당하는 축 값을 표시한다.\n     * Category 축인 경위 위치에 해당하는 category 이름을 표시한다.\n     */\n    labelFormat: string;\n\n    // /**\n    //  * pointBar가 true일 때 표시되는 bar의 스타일.\n    //  */\n    // barStyles: SVGStyleOrClass;\n\n    /**\n     * {@link showLabel}이 true일 때 표시되는 라벨의 스타일.\n     */\n    labelStyles: SVGStyleOrClass;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}","////////////////////////////////////////////////////////////////////////////////\n// Axis.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isArray, isNumber, isObject, isString, pickNum } from \"../common/Common\";\nimport { Align, IPercentSize, SVGStyleOrClass, SizeValue, VerticalAlign, fixnum, isNull, parsePercentSize } from \"../common/Types\";\nimport { IChart } from \"./Chart\";\nimport { ChartItem, FormattableText } from \"./ChartItem\";\nimport { Crosshair } from \"./Crosshair\";\nimport { IClusterable, IPlottingItem } from \"./Series\";\n\nexport interface IAxis {\n\n    type(): string;\n    chart: IChart;\n    \n    _length: number;\n    _isX: boolean;\n    _isHorz: boolean;\n    _isOpposite: boolean;\n\n    reversed: boolean;\n\n    getBaseValue(): number;\n    axisMax(): number;\n    axisMin(): number;\n\n    /**\n     * data point의 값을 축 상의 값으로 리턴한다.\n     */\n    getValue(value: any): number;\n    parseValue(value: any): number;\n    contains(value: number): boolean;\n    /**\n     * 값(축 상 위치)에 해당하는 픽셀 위치.\n     */\n    getPosition(length: number, value: number, point?: boolean): number;\n    /**\n     * 값(축 상 위치)에 해당하는 축 단위 픽셀 크기. \n     * <br>\n     * 값에 따라 크기가 다를 수도 있다.\n     */\n    getUnitLength(length: number, value: number): number;\n}\n\nexport abstract class AxisItem extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    readonly axis: Axis;\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(axis: Axis, visible = true) {\n        super(axis?.chart, visible);\n\n        this.axis = axis;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n}\n\nexport class AxisLine extends AxisItem {\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(axis: Axis) {\n        super(axis, false);\n    }\n}\n\nexport class AxisTitle extends AxisItem {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * 타이틀 텍스트.\n     */\n    text: string;\n    /**\n     * 타이틀과 label 혹은 축 선 사이의 간격.\n     * <br>\n     * \n     * @default 5 pixels\n     */\n    gap = 5;\n    backgroundStyle: SVGStyleOrClass;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    isVisible(): boolean {\n        return this.visible && !isNull(this.text);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doLoadSimple(source: any): boolean {\n        if (isString(source)) {\n            this.text = source;\n            return true;\n        }\n    }\n}\n\n/**\n * visible 기본값이 undefined이다.\n * <br>\n * visible이 undefined나 null로 지정되면, 축 위치에 따라 visible 여부가 결정된다.\n */\nexport class AxisGrid extends AxisItem {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    circular = false;\n    startVisible = true;\n    endVisible = true;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(axis: Axis) {\n        super(axis, null);\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    isVisible(): boolean {\n        return this.visible == null ? !this.axis._isX : this.visible;\n    }\n\n    getPoints(length: number): number[] {\n        const axis = this.axis;\n        return this.axis._ticks.map(tick => axis.getPosition(length, tick.value, false));\n    }\n            \n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n}\n\nexport class AxisGuideLabel extends FormattableText {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart) {\n        super(chart, true);\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * 수평 정렬.\n     */\n    align = Align.LEFT;\n\n    /**\n     * 수직 정렬.\n     */\n    valign = VerticalAlign.TOP;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n}\n\nexport enum AxisGuideType {\n    /**\n     * 축 위의 특정한 값에 선분을 표시한다.\n     */\n    LINE = 'line',\n    /**\n     * 축 위 특정한 두 값 사이의 영역을 구분 표시한다.\n     */\n    RANGE = 'range',\n    /**\n     * Plot 영역에 (x, y)로 지정하는 값 좌표의 배열로 설정되는 다각형을 표시한다.\n     */\n    AREA = 'area'\n}\n\nexport abstract class AxisGuide extends AxisItem {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    readonly label: AxisGuideLabel;\n\n    /**\n     * true면 시리즈들보다 위에 표시된다.\n     */\n    front = true;\n    /**\n     * 모든 guide들 중에서 값이 클수록 나중에 그려진다.\n     */\n    zindex = 0;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(axis: Axis) {\n        super(axis);\n\n        this.label = new AxisGuideLabel(axis.chart);\n    }\n}\n\nexport class AxisGuideLine extends AxisGuide {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    value: number; // TODO: RtPercentSize\n}\n\n/**\n * range -> zone ?\n */\nexport class AxisGuideRange extends AxisGuide {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    start: number;  // TODO: RtPercentSize\n    end: number;\n}\n\n/**\n * 기본적으로 tick 위치에 선으로 표시된다.\n */\nexport class AxisTickMark extends AxisItem {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    /**\n     * axis tick line length.\n     */\n    length = 7;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n}\n\n/**\n * 축에 표시되는 tick 위치와 표시 마크에 관한 설정 모델.\n */\nexport abstract class AxisTick extends AxisItem {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    /**\n     * axis tick line length.\n     */\n    length = 7;\n    margin = 3;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(axis: Axis) {\n        super(axis);\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n\nexport enum AxisLabelArrange {\n    NONE = 'none',\n    /**\n     * -45도 회전시킨다.\n     */\n    ROTATE = 'rotate',\n    /**\n     * label들이 겹치지 않도록 건너 뛰면서 배치한다.\n     * <br>\n     * {@link startStep}으로 지정된 step부터 배치된다.\n     */\n    STEP = 'step',\n    /**\n     * label들이 겹치지 않도록 여러 줄로 나누어 배치한다.\n     * <br>\n     */\n    ROWS = 'rows'\n}\n\n/**\n * [겹치는 경우가 발생할 때]\n * 1. step이 0보다 큰 값으로 설정되면 반영한다.\n * 2. staggerRows가 0보다 큰 값으로 설정되면 반영한다.\n * 3. rotation이 0이 아닌 명시적 값으로 설정되면 반영한다.\n * 4. 1~3 모두 설정되지 않은 경우 autoArrange 설정에 따라 자동 배치한다.\n * 5. 배치 후 공간을 초과하는 label은 wrap 속성에 따라 줄나누기를 하거나, \n *    ellipsis('...')로 처리해서 표시한다.\n */\nexport abstract class AxisLabel extends FormattableText {\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(public axis: Axis) {\n        super(axis && axis.chart, true);\n\n        // 기본은 ','이 포함된다. axis label에 ','를 포함시키지 않도록 한다.\n        this.numberFormat = null;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * label 표시 간격.\n     * <br>\n     * 0보다 큰 값으로 지정하지 않으면\n     * {@link autoStep}이 true일 때, label들이 겹치지 않도록 자동 계산된다.\n     * <br>\n     * 1이면 모든 tick 표시. 2이면 하나씩 건너 띄어서 표시.\n     * 2 이상일 때 {@link startStep}으로 지정된 step부터 배치된다.\n     */\n    step = 0;\n    /**\n     * step이 2 이상일 때, 표시가 시작되는 label 위치.\n     */\n    startStep = 0;\n    /**\n     * 수평 축일 때 tick label 배치 행 수.\n     * <br>\n     * 0보다 큰 값으로 지정하지 않으면\n     * {@link autoRows}가 true일 때, label들이 겹치지 않도록 자동 계산된다.\n     * <br>\n     */\n    rows = 0;\n    /**\n     * 수평 축일 때, tick label 표시 회전 각도.\n     * -90 ~ 90 사이의 각도로 지정할 수 있다.\n     */\n    rotation: number;\n    /**\n     * label들이 본래 차지하는 공간을 초과할 때,\n     * {@link step}이나 {@link rows}가 1 이상으로 설정되지 않고,\n     * {@link rotation}이 0이 아닌 명시적 값으로도 설정되지 않은 경우,\n     * label들을 재배치하는 방식을 지정한다.\n     * <br>\n     */\n    autoArrange = AxisLabelArrange.ROTATE;\n    /**\n     * label 배치 후 텍스트가 차지하는 공간을 넘치는 경우 줄 나누기를 한다.\n     * <br>\n     * false이면 줄 나누기 대신 ellipsis('...')로 표시한다.\n     */\n    wrap = false;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    abstract getTick(v: any): string;\n\n    getRotation(): number {\n        return this.rotation || 0;\n    }\n}\n\nexport interface IAxisTick {\n    pos: number;\n    value: number;\n    label: string;\n}\n\nexport enum AxisPosition {\n    /**\n     * X축은 아래쪽에 수평으로, Y축은 왼쪽에 수직으로 표시된다.\n     * <br>\n     * {@link Chart.inverted}이면 Y축이 아래쪽에 수평으로, X축은 왼쪽에 수직으로 표시된다.\n     */\n    NORMAL = 'normal',\n    /**\n     * X축은 위쪽에 수평으로, Y축은 오른쪽에 수직으로 표시된다.\n     * <br>\n     * {@link Chart.inverted}이면 Y축이 위쪽에 수평으로, X축은 오른쪽에 수직으로 표시된다.\n     */\n    OPPOSITE = 'opposite',\n    /**\n     * Y축의 baseValue 지점에 표시된다.\n     * <br>\n     * [주의] \n     * 1. 축에 연결된 시리즈들이 BarSeries 계열일 때만 가능하다.\n     * 2. 차트의 X축 하나에만 적용할 수 있다. 두번째로 지정된 축의 속성은 {@link NORMAL}로 적용된다.\n     * 3. 상대 축이 **linear** 가 아니거나 {@link LinearAxis.baseValue}가 min 보다 작거나 max보다 크면 이 값은 무시되고,\n     *    {@link NORMAL}로 적용된다.\n     */\n    BASE = 'base'\n}\n\n/**\n * 차트에서 축을 명식적으로 지정하지 않으면, 첫번째 시리즈에 합당한 축이 기본 생성된다.\n */\nexport abstract class Axis extends ChartItem implements IAxis {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    readonly name: string;\n    readonly title = new AxisTitle(this);\n    readonly line = new AxisLine(this);\n    readonly tick: AxisTick;\n    readonly label: AxisLabel;\n    readonly grid = this._createGrid();\n    readonly guides: AxisGuide[] = [];\n    readonly crosshair = new Crosshair(this);\n\n    _isX: boolean;\n    _isHorz: boolean;\n    _isOpposite: boolean;\n    protected _series: IPlottingItem[] = [];\n    _range: { min: number, max: number };\n    _ticks: IAxisTick[];\n    _markPoints: number[];\n    _length: number;\n    _minPad = 0;\n    _maxPad = 0;\n    _values: number[] = [];\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart, name?: string) {\n        super(chart);\n\n        this.name = name;\n        this.tick = this._createTickModel();\n        this.label = this._createLabelModel();\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    abstract type(): string;\n\n    /**\n     * 표시 위치.\n     */\n    position = AxisPosition.NORMAL;\n    /**\n     * true면 반대 방향으로 point 위치들이 지정된다.\n     */\n    reversed = false;\n    /**\n     * 명시적으로 지정하는 최소값.\n     * <br>\n     * 축에 연결된 data point들의 값으로 계산된 최소값 대신 이 값이 축의 최소값이 된다.\n     * {@link minPadding}도 무시된다.\n     */\n    min: number;\n    /**\n     * 명시적으로 지정하는 최대값.\n     * <br>\n     * 축에 연결된 data point들의 값으로 계산된 최대값 대신 이 값이 축의 최소값이 된다.\n     * {@link maxPadding}도 무시된다.\n     */\n    max: number;\n    /**\n     * Plot 영역이나 앞쪽 축 사이의 여백 크기.\n     * <br>\n     */\n    marginNear = 0;\n    /**\n     * 차트 경계나 뒤쪽 축 사이의 여백 크기.\n     */\n    marginFar = 0;\n\n    isEmpty(): boolean {\n        return this._series.length < 1;\n    }\n\n    getBaseValue(): number {\n        return NaN;\n    }\n    \n    abstract axisMin(): number;\n    abstract axisMax(): number;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    protected abstract _createTickModel(): AxisTick;\n    protected abstract _createLabelModel(): AxisLabel;\n    protected abstract _doPrepareRender(): void;\n    protected abstract _doBuildTicks(min: number, max: number, length: number): IAxisTick[];\n\n    disconnect(): void {\n        this._series = [];\n        this._values = [];\n    }\n\n    collectValues(): void {\n        this._series.forEach(item => {\n            item.collectValues(this, this._values);\n        })\n    }\n\n    collectReferentsValues(): void {\n        this._series.forEach(item => {\n            item.pointValuesPrepared(this);\n        })\n    }\n\n    prepareRender(): void {\n        this._isHorz = this.chart.isInverted() ? !this._isX : this._isX;\n        this._isOpposite = this.position === AxisPosition.OPPOSITE;\n\n        this._doPrepareRender();\n\n        // range\n        const series = this._series;\n        const vals: number[] = this._values;\n\n        this._range = this._doCalcluateRange(vals);\n\n        // clustering\n        let sum = 0;\n        let p = 0;\n\n        series.forEach(item => {\n            if (item.clusterable()) {\n                sum += pickNum((item as any as IClusterable).groupWidth, 1);\n            }\n        });\n        series.forEach(item => {\n            if (item.clusterable()) {\n                const w = pickNum((item as any as IClusterable).groupWidth, 1) / sum;\n\n                (item as any as IClusterable).setCluster(w, p);\n                p += w;\n            }\n        });\n        // console.log(this._series.map(s => (s as any)._clusterPos));\n    }\n\n    buildTicks(length: number): void {\n        this._ticks = this._doBuildTicks(this._range.min, this._range.max, this._length = length);\n    }\n\n    calcPoints(length: number, phase: number): void {\n        this._ticks.forEach(t => t.pos = this.getPosition(length, t.value));\n    }\n\n    /**\n     * value에 해당하는 축상의 위치.\n     */\n    abstract getPosition(length: number, value: number, point?: boolean): number;\n    abstract getUnitLength(length: number, value: number): number;\n\n    getLabelLength(length: number, value: number): number {\n        return this.getUnitLength(length, value);\n    }\n\n    getValue(value: any): number {\n        return value == null ? NaN : parseFloat(value);\n    }\n\n    parseValue(value: any): number {\n        return parseFloat(value);\n    }\n\n    contains(value: number): boolean {\n        return value >= this._range.min && value <= this._range.max;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doLoadProp(prop: string, value: any): boolean {\n        if (prop === 'guide') {\n            if (isArray(value)) this.$_loadGuides(value);\n            else if (isObject(value)) this.$_loadGuides([value]);\n            return true;\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _createGrid(): AxisGrid {\n        return new AxisGrid(this);\n    }\n\n    private $_loadGuides(source: any[]): void {\n        for (let i = 0; i < source.length; i++) {\n            const g: any = source[i]\n            let guide: AxisGuide;\n\n            switch (g.type) {\n                case 'range':\n                    guide = new AxisGuideRange(this);\n                    break;\n\n                case 'line':\n                default:    \n                    guide = new AxisGuideLine(this);\n                    break;\n            }\n\n            guide.load(g);\n            this.guides.push(guide);\n        }\n    }\n\n    _connect(series: IPlottingItem): void {\n        if (series && !this._series.includes(series)) {\n            this._series.push(series);\n        }\n    }\n\n    protected _doCalcluateRange(values: number[]): { min: number, max: number } {\n        let min = fixnum(Math.min(...values) || 0);\n        let max = fixnum(Math.max(...values) || 0);\n\n        return { min, max };\n    }\n}\n\nexport class AxisCollection {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    readonly chart: IChart;\n    readonly isX: boolean;\n    private _items: Axis[] = [];\n    private _map = new Map<string, Axis>();\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart, isX: boolean) {\n        this.chart = chart;\n        this.isX = isX;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get count(): number {\n        return this._items.length;\n    }\n\n    get first(): Axis {\n        return this._items[0];\n    }\n\n    get items(): Axis[] {\n        return this._items.slice(0);\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    load(src: any): void {\n        const chart = this.chart;\n        const items = this._items;\n\n        if (isArray(src)) {\n            src.forEach((s, i) => items.push(this.$_loadAxis(chart, s, i)));\n        } else if (isObject(src)) {\n            items.push(this.$_loadAxis(chart, src, 0));\n        }\n    }\n\n    contains(axis: Axis): boolean {\n        return this._items.indexOf(axis) >= 0;\n    }\n\n    get(name: string): Axis {\n        return this._map.get(name);\n    }\n\n    disconnect(): void {\n        this._items.forEach(axis => axis.disconnect());\n    }\n\n    collectValues(): void {\n        this._items.forEach(axis => axis.collectValues());\n    }\n\n    collectReferentsValues(): void {\n        this._items.forEach(axis => axis.collectReferentsValues());\n    }\n\n    prepareRender(): void {\n        this._items.forEach(axis => axis.prepareRender());\n    }\n\n    buildTicks(length: number): void {\n        this._items.forEach(axis => axis.buildTicks(length));\n    }\n\n    connect(series: IPlottingItem): Axis {\n        const items = this._items;\n        const a = this.isX ? series.xAxis : series.yAxis;\n        let axis: Axis;\n\n        if (isNumber(a) && a >= 0 && items.length) {\n            axis = items[a];\n        } else if (isString(a)) {\n            axis = items.find(item => item.name === a);\n        }\n        if (!axis) {\n            axis = items[0];\n        }\n\n        if (axis) {\n            axis._connect(series);\n        }\n        return axis;\n    }\n\n    forEach(callback: (p: Axis, i?: number) => any): void {\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            if (callback(this._items[i], i) === true) break;\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_loadAxis(chart: IChart, src: any, index: number): Axis {\n        let cls = chart._getAxisType(src.type);\n\n        if (!cls) {\n            let t: string;\n\n            if (isArray(src.categories)) {\n                t = 'category';\n            } else if (this.isX) {\n                for (const ser of chart._getSeries().items()) {\n                    if (ser.canCategorized()) {\n                        if (src.name && ser.xAxis === src.name) {\n                            t = 'category';\n                            break;\n                        } else if (isNumber(ser.xAxis) && ser.xAxis === index) {\n                            t = 'category';\n                            break;\n                        }\n                    }   \n                }\n                if (!t && chart.first.canCategorized()) {\n                    t = 'category';\n                }\n            } else {\n                t = chart._getSeries().first.defaultYAxisType();\n            }\n\n            if (t) {\n                cls = chart._getAxisType(t);\n            }\n        }\n        if (!cls) {\n            cls = chart._getAxisType('linear');\n        }\n\n        const axis = new cls(chart, src.name);\n\n        axis._isX = this.isX;\n        axis.load(src);\n        return axis;\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// Body.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { IPercentSize, ORG_ANGLE, SVGStyleOrClass, SizeValue, _undefined, calcPercent, deg2rad, parsePercentSize } from \"../common/Types\";\nimport { AxisGuide } from \"./Axis\";\nimport { IChart } from \"./Chart\";\nimport { BackgroundImage, ChartItem } from \"./ChartItem\";\nimport { Series } from \"./Series\";\n\n/**\n * 시리즈들이 그려지는 plot 영역 모델.\n */\nexport class Body extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _sizeDim: IPercentSize;\n    private _cxDim: IPercentSize;\n    private _cyDim: IPercentSize;\n    _cx: number;\n    _cy: number;\n    _rd: number; \n\n    _guides: AxisGuide[] = [];\n    _frontGuides: AxisGuide[] = [];\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    // name: string;\n    size: SizeValue = '90%';\n    centerX: SizeValue = '50%';\n    centerY: SizeValue = '50%';\n    startAngle = 0;\n    circular = true;\n    image = new BackgroundImage(null);\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getSize(width: number, height: number): number {\n        return calcPercent(this._sizeDim, Math.min(width, height));\n    }\n\n    getCenter(width: number, height: number): {cx: number, cy: number} {\n        return {\n            cx: calcPercent(this._cxDim, width),\n            cy: calcPercent(this._cyDim, height)\n        };\n    }\n\n    getStartAngle(): number {\n        return ORG_ANGLE + deg2rad(this.startAngle);\n    }\n\n    getPolar(series: Series): {start: number, cx: number, cy: number, rd: number, deg: number} {\n        return this.chart._polar ? {\n            start: this.getStartAngle(),\n            cx: this._cx,\n            cy: this._cy,\n            rd: this._rd,\n            deg: Math.PI * 2 / series._visPoints.length\n        } : _undefined;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doLoad(source: any): void {\n        super._doLoad(source);\n\n        this._sizeDim = parsePercentSize(this.size, true) || { size: 90, fixed: false };\n        this._cxDim = parsePercentSize(this.centerX, true) || { size: 50, fixed: false };\n        this._cyDim = parsePercentSize(this.centerY, true) || { size: 50, fixed: false };\n    }\n\n    protected _doPrepareRender(chart: IChart): void {\n        super._doPrepareRender(chart);\n\n        const guides = this._guides = [];\n        const frontGuides = this._frontGuides = [];\n\n        chart._getXAxes().forEach(axis => {\n            axis.guides.forEach(g => {\n                g.front ? frontGuides.push(g) : guides.push(g);\n            })\n        });\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// Legend.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { SVGStyleOrClass } from \"../common/Types\";\nimport { IChart } from \"./Chart\";\nimport { ChartItem } from \"./ChartItem\";\n\nexport interface ILegendRenderer {\n}\n\nexport interface ILegendSource {\n    visible: boolean;\n    \n    legendColor(): string;\n    legendLabel(): string;\n    legendVisible(): boolean;\n}\n\nexport class LegendItem extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(public legend: Legend, public source: ILegendSource) {\n        super(legend.chart)\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    text(): string {\n        return this.source.legendLabel();\n    }\n}\n\nexport enum LegendPosition {\n    BOTTOM = 'bottom',\n    TOP = 'top',\n    RIGHT = 'right',\n    LEFT = 'left',\n    PLOT = 'plot',\n    SUBPLOT = 'subplot'\n}\n\nexport enum LegendAlignBase {\n    CHART = 'chart',\n    PLOT = 'plot'\n}\n\nexport enum LegendLayout {\n    /**\n     * legend가 차트 좌우에 배치되면 item들을 수직으로 배치.\n     * legend가 차트 상하에 배치되면 item들을 수평으로 배치.\n     */\n    AUTO = 'auto',\n    /**\n     * item들을 수평으로 배치\n     */\n    HORIZONTAL = 'horizontal',\n    /**\n     * item들을 수직으로 배치\n     */\n    VERTICAL = 'vertical'\n}\n\n/**\n * 차트 범례 설정 모델.\n * <br>\n * visible 기본값이 undefined이고,\n * 따로 지정하지 않으면 시리즈가 둘 이상 포함돼야 legend를 표시한다.\n */\nexport class Legend extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _items: LegendItem[];\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart) {\n        super(chart, void 0)\n\n        this.visible = void 0;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * legned 표시 위치.\n     */\n    position = LegendPosition.BOTTOM;\n    /**\n     * item 배치 방향.\n     * \n     * @default LegendLayout.DEFAULT\n     */\n    layout = LegendLayout.AUTO;\n    /**\n     * legend 정렬 기준.\n     */\n    alignBase = LegendAlignBase.PLOT;\n    /**\n     * {@link position}이 {@link LegendPosition.PLOT plot}일 때, plot 영역의 좌측 모서리와 legend의 간격.\n     */\n    left: number;\n    /**\n     * {@link position}이 {@link LegendPosition.PLOT plot}일 때, plot 영역의 우측 모서리와 legend의 간격.\n     * <br>\n     * {@link left}가 지정되면 이 속성은 무시된다.\n     */\n    right: number;\n    /**\n     * {@link position}이 {@link LegendPosition.PLOT plot}일 때, plot 영역의 상단 모서리와 legend의 간격.\n     */\n    top: number;\n    /**\n     * {@link position}이 {@link LegendPosition.PLOT plot}일 때, plot 영역의 하단 모서리와 legend의 간격.\n     * <br>\n     * {@link top}이 지정되면 이 속성은 무시된다.\n     */\n    bottom: number;\n    /**\n     * legend 아이템들 사이의 간격.\n     */\n    itemGap = 8;\n    /**\n     * marker와 text사이의 간격.\n     */\n    markerGap = 4;\n    backgroundStyles: SVGStyleOrClass;\n\n    items(): LegendItem[] {\n        return this._items.slice(0);\n    }\n\n    isEmpty(): boolean {\n        return !this._items || this._items.length < 1;\n    }\n\n    isVisible(): boolean {\n        return this.visible || (this.visible !== false && this._items.length > 1);\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getLayout(): LegendLayout {\n        if (this.layout === LegendLayout.AUTO && this.position !== LegendPosition.PLOT) {\n            switch (this.position) {\n                case LegendPosition.BOTTOM:\n                case LegendPosition.TOP:\n                    return LegendLayout.HORIZONTAL;\n                default:\n                    return LegendLayout.VERTICAL;\n            }\n        } else {\n            return this.layout;\n        }\n    }\n\n    prepareRender(): void {\n        this._items = this.$_collectItems();\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_collectItems(): LegendItem[] {\n        return this.chart._getLegendSources().map(src => {\n            return new LegendItem(this, src);\n        });\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// ChartTypes.ts\n// 2023. 08. 05. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nexport enum LineType {\n    DEFAULT = 'default',\n    SPLINE = 'spline',\n    STEP = 'step'\n}\n\n","////////////////////////////////////////////////////////////////////////////////\n// DataPoint.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isArray, isNone, isObject, pickNum, pickProp, pickProp3, pickProp4 } from \"../common/Common\";\nimport { ISeries } from \"./Series\";\n\nlet __point_id__ = 0;\n\nexport interface IPointPos {\n    xPos: number;\n    yPos: number;\n    isNull: boolean;\n}\n\n/**\n * 데이터 포인트를 표시할 수 없는 값을 설정하면 null로 간주한다.\n */\nexport class DataPoint {\n\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    static swap(pts: IPointPos[]): IPointPos[] {\n        const list = [];\n        for (let i = 0; i < pts.length; i++) {\n            list.push({xPos: pts[i].yPos, yPos: pts[i].xPos});\n        }\n        return list;\n    }\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    source: any;\n    index: number;\n    x: any;\n    y: any;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    readonly pid = __point_id__++;\n\n    isNull: boolean;\n    // Series.collectValues() 등에서 결정된다. x, y와 각각 다른 값으로 설정될 수 있다.\n    xValue: number;     // x 좌표상의 value\n    yValue: number;     // y 좌표상의 value\n    yRate: number;      // 전체 point 합 내에서 비율(백분율)\n\n    visible = true;\n    color: string;\n    xPos: number;\n    yPos: number;\n\n    yGroup: number;     // for stacking. stacking 가능한 경우 이 값으로 축 상 위치를 계산한다.\n                        // [주의] yValue를 강제로 재설정하는 경우 이 값도 재설정할 것!\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(source: any) {\n        this.source = source;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get yAbs(): number {\n        return Math.abs(this.yValue);\n    }\n\n    get xAbs(): number {\n        return Math.abs(this.xValue);\n    }\n\n    ariaHint(): string {\n        return this.x + ', ' + this.yValue;\n    }\n\n    labelCount(): number {\n        return 1;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getProp(fld: string | number): any {\n        if (isNone(this.source)) return this.source;\n        else return this.source[fld];\n    }\n\n    parse(series: ISeries): void {\n        const v = this.source;\n\n        if (isArray(v)) {\n            this._readArray(series, v);\n        } else if (isObject(v)) {\n            this._readObject(series, v);\n        } else {\n            this._readSingle(v);\n        }\n    }\n\n    getLabel(index: number): any {\n        return this.y;// this.yValue;\n    }\n\n    getValueOf = (traget: any, param: string): any => {\n        return this[param] || this.source[param];\n    }\n\n    swap(): void {\n        const x = this.xPos;\n        this.xPos = this.yPos;\n        this.yPos = x;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _colorIndex(): number {\n        return 2;\n    }\n\n    protected _readArray(series: ISeries, v: any[]): void {\n        if (v == null) {\n            this.isNull = true;\n        } else {\n            const f = +series.colorField;\n\n            if (!isNaN(f)) {\n                this.color = v[f];\n            }\n\n            if (v.length > 1) {\n                this.x = v[pickNum(series.xField, 0)];\n                this.y = v[pickNum(series.yField, 1)];\n            } else {\n                this.x = this.index;\n                this.y = v[pickNum(series.yField, 0)];\n            }\n        }\n    }\n\n    protected _readObject(series: ISeries, v: any): void {\n        if (v == null) {\n            this.isNull = true;\n        } else {\n            this.x = pickProp4(v[series.xField], v.x, v.name, v.label);\n            this.y = pickProp3(v[series.yField], v.y, v.value);\n            this.color = pickProp(v[series.colorField], v.color);\n        }\n    }\n\n    protected _readSingle(v: any): void {\n        // x 축에 대한 정보가 없으므로 홑 값들은 순서대로 값을 지정한다.\n        //this.x = this.index;\n        this.y = v;\n    }\n}\n\nexport class DataPointCollection {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _owner: ISeries;\n    private _points: DataPoint[] = [];\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(owner: ISeries) {\n        this._owner = owner;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get count(): number {\n        return this._points.length;\n    }\n\n    isEmpty(): boolean {\n        return this._points.length < 1;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    get(index: number): DataPoint {\n        return this._points[index];\n    }\n\n    load(source: any): void {\n        if (isArray(source)) {\n            // x 축에 대한 정보가 없으므로 홑 값들은 앞으로 이동시킨다.\n            source = source.sort((a, b) => {\n                return ((isArray(a) || isObject(a)) ? 1 : 0) - ((isArray(b) || isObject(b)) ? 1 : 0);\n            });\n            this._points = this._owner.createPoints(source);\n        } else {\n            this._points = [];\n        }\n    }\n\n    getProps(prop: string | number): any[] {\n        return this._points.map(p => p.getProp(prop));\n    }\n\n    getValues(axis: string): any[] {\n        return this._points.map(p => p[axis]);\n    }\n\n    forEach(callback: (p: DataPoint, i?: number) => any): void {\n        for (let i = 0, n = this._points.length; i < n; i++) {\n            if (callback(this._points[i], i) === true) break;\n        }\n    }\n\n    getPoints(): DataPoint[] {\n        return this._points;\n    }\n\n    getVisibles(): DataPoint[] {\n        return this._points;\n        // return this._points.filter(p => this._owner.isVisible(p));\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// Tooltip.ts\n// 2023. 08. 12. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ChartItem } from \"./ChartItem\";\nimport { DataPoint } from \"./DataPoint\";\nimport { ISeries } from \"./Series\";\n\nexport class Tooltip extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly HIDE_DELAY = 700;\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(public series: ISeries) {\n        super(series.chart);\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    html: string;\n    text = '<b>${point.x}</b><br>${series}:<b> ${point.y}</b>';\n    offset = 8;\n    hideDelay = Tooltip.HIDE_DELAY;\n    minWidth = 100;\n    minHeight = 40;\n    /**\n     * true이면 툴팁 상자가 마우스 포인터를 따라 다닌다.\n     * <br>\n     * false, true를 명시적으로 지정하지 않으면 시리즈 종류에 따라 자동 설정된다.\n     * ex) pie 시리즈는 true, bar 시리즈는 false가 된다.\n     * \n     * @default undefined\n     */\n    followPointer: boolean;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getValue(point: DataPoint, param: string): string {\n        switch (param) {\n            case 'series':\n            case 'series.name':\n                return this.series.displayName();\n            case 'point.x':\n                return point.x;\n            case 'point':\n            case 'point.y':\n                return point.y;\n            default:\n                return param;\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}","////////////////////////////////////////////////////////////////////////////////\n// CategoryAxis.ts\n// 2023. 06. 21. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isArray, isNumber, isString, pickNum, pickNum3 } from \"../../common/Common\";\nimport { Axis, AxisGrid, AxisTick, AxisLabel, AxisTickMark, IAxisTick } from \"../Axis\";\nimport { IPlottingItem } from \"../Series\";\n\nexport enum CategoryTickPosition {\n    /**\n     * x축이면 {@link POINT}, y축이면 {@link EDGE}이다.\n     */\n    DEFAULT = 'default',\n    /**\n     * 카테고리 중심에 표시한다.\n     */\n    POINT = 'point',\n    /**\n     * 축 양끝과 카테고리들 사이에 표시한다.\n     */\n    EDGE = 'edge'\n}\n\nexport class CategoryAxisTick extends AxisTick {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    position = CategoryTickPosition.POINT;\n    steps = 1;\n    /**\n     * true이면 steps 상관없이 마지막 tick은 항상 표시된다.\n     */\n    showLast = false;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getPosition(): CategoryTickPosition {\n        if (this.position === CategoryTickPosition.POINT || this.position === CategoryTickPosition.EDGE) {\n            return this.position;\n        } else {\n            return this.axis._isX ? CategoryTickPosition.POINT : CategoryTickPosition.EDGE;\n        }\n    }\n}\n\n/**\n * TODO: y축으로 사용되면 edge 위치에 표시한다.\n */\nclass CategoryAxisLabel extends AxisLabel {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    getTick(v: any): string {\n        if (v != null) {\n            return this._getText(v, v, false);\n        } else {\n            return '';\n        }\n    }\n}\n\nclass CategoryAxisGrid extends AxisGrid {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    getPoints(): number[] {\n        const apts = (this.axis as CategoryAxis)._pts;\n        const n = (this.axis as CategoryAxis)._ticks.length;\n        const pts: number[] = [];\n\n        for (let i = 0; i < n; i++) {\n            pts.push(apts[i + 2]);\n        }\n        return pts;\n    }\n}\n\n/**\n * 지정된 카테고리 수로 축을 분할해서 각 카테고리에 연결된 데이터포인트들이 표시되게 한다.\n * <br>\n * 1. categories 속성으로 카테고리 목록을 구성한다.\n * 2. 이 축에 연결된 시리즈들에 포함된 data point들의 문자열인 값들, 혹은 categoryField에 해당하는 값들을 수집한다.\n *    수집된 category들 중 숫자가 아닌 것들은 {@link startValue}부터 시작해서 {@link valueStep} 속성에 지정된 값씩 차례대로 증가한 값을 갖게된다.\n * 3. 각 카테고리 영역의 크기는 {@link categoryStep} 설정값에 따라 기본적으로 동일하게 배분되고, \n *    카테고리 영역 중간점이 카테고리 값의 위치가 된다.\n *    {@link categories} 속성으로 카테고리를 지정할 때, 상대적 크기를 width로 지정해서 각 카테고리의 값을 다르게 표시할 수 있다.\n * 4. tick mark나 label은 기본적으로 카테고리 값 위치에 표시된다.\n *    tick mark는 카테고리 양끝에 표시될 수 있다.\n */\nexport class CategoryAxis extends Axis {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _categories: {c: string, w: number}[];\n    _cats: string[];\n    _weights: number[];  // 한 카테고리의 상대 너비. 한 카테고리의 기본 크기는 1\n    _len: number;\n    // private _step = 1;\n    private _map = new Map<string, number>(); // data point의 축 위치를 찾기 위해 사용한다.\n    private _min: number;\n    private _max: number;\n    private _catPad = 0;\n    _pts: number[];\n    _length: number;\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    // /**\n    //  * 카테고리가 지정되지 않은 데이터포인트들의 이 축에 해당하는 값을 지정할 때 최초 값.\n    //  */\n    // startValue = 0;\n    // /**\n    //  * 카테고리가 지정되지 않은 데이터포인트들의 이 축에 해당하는 값을 지정할 때 값 사이의 간격.\n    //  */\n    // valueStep = 1;\n    /**\n     * Category 목록을 수집하는 시리즈.\n     * 지정하지 않으면 모든 시리즈에서 카테고리를 수집한다.\n     */\n    categorySeries: string;\n    /**\n     * 카테고리로 사용되는 dataPoint 속성.\n     * {@link categories}가 지정되면 이 속성은 무시된다.\n     */\n    categoryField: string | number;\n    /**\n     * 명시적으로 지정하는 카테고리 목록.\n     * <br>\n     * 카테고리 항목을 object로 지정할 때에는 name(혹은 label) 속성에 카테고리 이름을,\n     * width 속성에 상대 너비(1이 기본 너비)를 지정한다.\n     * 첫 번째 값이 {@link startValue}에 해당하고 {@link valueStep}씩 증가한다.\n     * 각 카테고리의 상대적 너비를 지정할 수 있다.\n     */\n    categories: any[];\n    // /** \n    //  * 카테고리 하나의 값 크기.\n    //  */\n    // categoryStep = 1;\n    /**\n     * 축의 양 끝 카테고리 위치 전후에 여백으로 추가되는 크기.\n     * <br>\n     * 각각 시작/끝 카테고리에 대한 상대적 크기로 지정한다.\n     * {@link minPadding}, {@link maxPadding}으로 별도 지정할 수 있다.\n     * \n     * @default 0\n     */\n    padding = 0;\n    /**\n     * 축의 시작 카테고리 위치 이 전에 여백으로 추가되는 크기.\n     * <br>\n     * 카테고리 기본 너비(1)에 대한 상대적 크기로 지정한다.\n     * {@link padding} 속성으로 양끝 padding을 한꺼번에 지정할 수 있다.\n     * \n     * @default undefined\n     */\n    minPadding: number;\n    /**\n     * 축의 끝 카테고리 위치 이 후에 여백으로 추가되는 크기.\n     * <br>\n     * 카테고리 기본 너비(1)에 대한 상대적 크기로 지정한다.\n     * {@link padding} 속성으로 양끝 padding을 한꺼번에 지정할 수 있다.\n     * \n     * @default undefined\n     */\n    maxPadding: number;\n    /**\n     * 각 카테고리의 양 끝에 추가되는 여백의 카테고리에 너비에 대한 상대적 크기.\n     * <br>\n     * @default 0.1.\n     */\n    categoryPadding = 0.1;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getCategories(): string[] {\n        return this._cats;\n    }\n\n    getWdith(length: number, category: number): number {\n        return 0;\n    }\n\n    axisMin(): number {\n        return this._min;\n    }\n\n    axisMax(): number {\n        return this._max;\n    }\n\n    categoryPad(): number {\n        return this._catPad;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    type(): string {\n        return 'category';\n    }\n\n    protected _createGrid(): AxisGrid {\n        return new CategoryAxisGrid(this);\n    }\n\n    protected _createTickModel(): AxisTick {\n        return new CategoryAxisTick(this);\n    }\n\n    protected _createLabelModel(): AxisLabel {\n        return new CategoryAxisLabel(this);\n    }\n\n    protected _doPrepareRender(): void {\n        this._cats = [];\n        this._weights = [];\n\n        this._collectCategories(this._series);\n\n        this._minPad = pickNum3(this.minPadding, this.padding, 0);\n        this._maxPad = pickNum3(this.maxPadding, this.padding, 0);\n\n        // category padding\n        this._catPad = pickNum(this.categoryPadding, 0);\n    }\n\n    protected _doBuildTicks(min: number, max: number, length: number): IAxisTick[] {\n        const tick = this.tick as CategoryAxisTick;\n        const label = this.label as CategoryAxisLabel;\n        let cats = this._cats = this._categories.map(cat => cat.c);\n        let weights = this._weights = this._categories.map(cat => cat.w);\n        const ticks: IAxisTick[] = [];\n\n        min = this._min = Math.floor(min);\n        max = this._max = Math.ceil(max);\n\n        while (cats.length <= max) {\n            cats.push(String(cats.length));\n            weights.push(1);\n        }\n\n        cats = this._cats = cats.slice(min, max + 1);\n        weights = weights.slice(min, max + 1);\n\n        const len = this._len = this._minPad + this._maxPad + weights.reduce((a, c) => a + c, 0);\n        // const step = this._step = this.categoryStep || 1;\n        const pts = this._pts = [0];\n        let p = this._minPad;\n\n        for (let i = min; i <= max; i++) {// += step) {\n            const w = weights[i - min];\n\n            pts.push(p / len);\n            p += weights[i - min];// step\n        }\n        pts.push(p / len);\n        pts.push((p + this._maxPad) / len);\n\n        this._map.clear();\n\n        for (let i = 1; i < pts.length - 2; i++) {\n            const v = min + i - 1;\n\n            ticks.push({\n                pos: NaN,//this.getPosition(length, v),\n                value: v,\n                label: label.getTick(cats[i - 1]),\n            });\n            this._map.set(cats[i - 1], v);\n        }\n\n        // let markPoints: number[];\n\n        // if (tick.getPosition() === CategoryTickPosition.EDGE) {\n        //     markPoints = pts.slice(1, pts.length - 1);\n        // } else {\n        //     markPoints = ticks.map(t => t.pos);\n        // }\n \n        return ticks;\n    }\n\n    calcPoints(length: number, phase: number): void {\n        super.calcPoints(length, phase);\n\n        const pts = this._pts;\n\n        if (phase > 0) {\n            for (let i = 0; i < pts.length; i++) {\n                pts[i] /= this._length;\n            }\n        }\n\n        this._length = length;\n        \n        for (let i = 0; i < pts.length; i++) {\n            pts[i] *= length;\n        }\n\n        const tick = this.tick as CategoryAxisTick;\n        let markPoints: number[];\n\n        if (tick.getPosition() === CategoryTickPosition.EDGE) {\n            markPoints = pts.slice(1, pts.length - 1);\n        } else {\n            markPoints = this._ticks.map(t => t.pos);\n        }\n        this._markPoints = markPoints;\n    }\n\n    getPosition(length: number, value: number, point = true): number {\n        value -= this._min;\n        // data point view는 카테고리 중앙을 기준으로 표시한다.\n        if (point) value += 0.5;//this._step / 2;\n        const v = Math.floor(value);\n        const p = this._pts[v + 1] + (this._pts[v + 2] - this._pts[v + 1]) * (value - v);\n        return this.reversed ? length - p : p;\n    }\n\n    getUnitLength(length: number, value: number): number {\n        const v = Math.floor(value - this._min);\n        return (this._pts[v + 2] - this._pts[v + 1]);\n    }\n\n    getValue(value: any): number {\n        if (isNumber(value)) {\n            return value;\n        } else {\n            return this._map.get(value);\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private _collectCategories(series: IPlottingItem[]): void {\n        const categories = this.categories;\n        const cats = this._categories = [];\n\n        if (isArray(categories) && categories.length > 0) {\n            this._len = 0;\n\n            categories.forEach(cat => {\n                let w = cat == null ? 1 : pickNum(cat.weight, 1);\n                let c: string;\n\n                if (cat == null) c = null;\n                else if (isString(cat)) c = cat;\n                else c = cat.name || cat.label;\n\n                this._len += w;\n                cats.push({c, w});\n            })\n        } else {\n            if (isArray(series)) {\n                for (const ser of series) {\n                    const cats2 = ser.collectCategories(this);\n\n                    for (const c of cats2) {\n                        if (!cats.find(cat => cat.c === c)) {\n                            cats.push({c, w: 1});\n                        }\n                    }\n                }\n            }\n        }\n\n        // const start = pickNum(this.startValue, 0);\n        // const step = this.valueStep || 1;\n\n        // this._map.clear();\n        // this._cats.forEach((c, i) => this._map.set(c, i));//start + i * step));\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// Series.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isArray, isObject, isString, pickNum } from \"../common/Common\";\nimport { IPercentSize, RtPercentSize, calcPercent, parsePercentSize } from \"../common/Types\";\nimport { Utils } from \"../common/Utils\";\nimport { Shape } from \"../common/impl/SvgShape\";\nimport { IAxis } from \"./Axis\";\nimport { Chart, IChart } from \"./Chart\";\nimport { ChartItem, FormattableText } from \"./ChartItem\";\nimport { LineType } from \"./ChartTypes\";\nimport { DataPoint, DataPointCollection } from \"./DataPoint\";\nimport { ILegendSource } from \"./Legend\";\nimport { Tooltip } from \"./Tooltip\";\nimport { CategoryAxis } from \"./axis/CategoryAxis\";\n\nexport enum PointItemPosition {\n    AUTO = 'auto',\n    INSIDE = 'inside',\n    OUTSIDE = 'outside',\n    HEAD = 'head',\n    FOOT = 'foot',\n    INSIDE_FIRST = 'insideFirst',\n    OUTSIDE_FIRST = 'outsideFirst',\n}\n\nexport const NUMBER_SYMBOLS = 'k,M,G,T,P,E';\nexport const NUMBER_FORMAT = '#,##0.#';\n\n/**\n * Series data point label options.\n */\nexport class DataPointLabel extends FormattableText {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    /**\n     * 포인트 label 표시 위치.\n     */\n    position = PointItemPosition.AUTO;\n    \n    // /**\n    //  * position 위치에서 수평 정렬 상태.\n    //  * pie 시리즈에서는 무시.\n    //  */\n    // align = Align.CENTER;\n    // /**\n    //  * position 위치에서 수직 정렬 상태.\n    //  */\n    // valign = VerticalAlign.MIDDLE;\n\n    offset = 4;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart) {\n        super(chart, false);\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getText(value: any): string {\n        if (Utils.isValidNumber(value)) {\n            let s = this._getText(null, value, Math.abs(value) > 1000, true);\n            return s;\n        }\n        return value;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n\nexport interface IPlottingItem {\n    index: number;\n    xAxis: string | number;\n    yAxis: string | number;\n\n    visible: boolean;\n    getVisiblePoints(): DataPoint[];\n    getLegendSources(list: ILegendSource[]): void;\n    needAxes(): boolean;\n    isEmpty(): boolean;\n    canCategorized(): boolean;\n    defaultYAxisType(): string;\n    clusterable(): boolean;\n    getBaseValue(axis: IAxis): number;\n    // axis에 설정된 baseValue를 무시하라!\n    canMinPadding(axis: IAxis): boolean; \n    canMaxPadding(axis: IAxis): boolean; \n    ignoreAxisBase(axis: IAxis): boolean;\n    collectCategories(axis: IAxis): string[];\n    prepareRender(): void;\n    prepareAfter(): void;\n    collectValues(axis: IAxis, vals: number[]): void;\n    pointValuesPrepared(axis: IAxis): void;\n}\n\nexport enum TrendType {\n    LINEAR = 'linear',\n    LOGARITHMIC = 'logarithmic', \n    POLYNOMIAL = 'polynomial', \n    POWER = 'power', \n    EXPONENTIAL = 'exponential', \n    MOVING_AVERAGE = 'movingAverage'\n}\n\nexport class MovingAverage {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    interval: number;\n    type: 'simple' | 'weighted' | 'exponential' | 'triangualr';\n}\n\nconst _movingAverage = {\n    interval: 5,\n    type: 'simple'\n};\n\n/**\n * 시리즈 추세선.\n */\nexport class Trendline extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _points: {x: number, y: number}[];\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(public series: Series) {\n        super(series.chart);\n\n        this.visible = false;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    type = TrendType.LINEAR;\n    lineType = LineType.DEFAULT;\n    movingAverage = new MovingAverage();\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    protected _doPrepareRender(chart: IChart): void {\n        (this['$_' + this.type] || this.$_linear).call(this, this.series._visPoints, this._points = []);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getDefObjProps(prop: string) {\n        if (prop === 'movingAverage') return _movingAverage;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    $_linear(pts: DataPoint[], list: {x: number, y: number}[]): void {\n        const len = pts.length;\n\n        if (len > 1) {\n            let sx = 0;\n            let sy = 0;\n            let sxx = 0;\n            let syy = 0;\n            let sxy = 0;\n\n            pts.forEach(p => {\n                sx += p.xValue;\n                sy += p.yValue;\n                sxx += p.xValue * p.xValue;\n                syy += p.yValue + p.yValue;\n                sxy += p.xValue * p.yValue;\n            });\n\n            const slope  = ((len * sxy) - (sx * sy)) / (len * sxx - (sx * sx));\n            const intercept = (sy - slope * sx) / len;\n\n            list.push({x: pts[0].xValue, y: slope * pts[0].xValue + intercept});\n            list.push({x: pts[len - 1].xValue, y: slope * pts[len - 1].xValue + intercept});\n        }\n    }\n\n    $_logarithmic(pts: DataPoint[], list: {x: number, y: number}[]): void {\n    }\n\n    $_polynomial(pts: DataPoint[], list: {x: number, y: number}[]): void {\n    }\n\n    $_power(pts: DataPoint[], list: {x: number, y: number}[]): void {\n    }\n\n    $_exponential(pts: DataPoint[], list: {x: number, y: number}[]): void {\n    }\n\n    $_movingAverage(pts: DataPoint[], list: {x: number, y: number}[]): void {\n        const ma = this.movingAverage;\n        const length = pts.length;\n        const interval = Math.max(1, Math.min(length, ma.interval));\n        let index = interval - 1;\n\n        while (index <= length) {\n            index = index + 1;\n\n            const slice = pts.slice(index - interval, index);\n            const sum = slice.reduce((a, c) => a + c.yValue, 0);\n\n            if (index <= length) {\n                list.push({x: pts[index - 1].xValue, y: sum / interval});\n            }\n        }\n    }\n}\n\n/**\n * 옆으로 나누어 배치 가능한가? ex) bar series/group\n */\nexport interface IClusterable {\n\n    /**\n     * @internal\n     * 축 단위 내에서 이 그룹이 차지하는 계산된 영역 너비. 0 ~ 1 사이의 값. \n     * 그룹들의 groupWidth로 정해진다.\n     */\n    _clusterWidth: number;\n    /**\n     * @internal\n     * 축 단위 내에서 이 그룹이 시작하는 위치. 0 ~ 1 사이의 상대 값.\n     * 그룹들의 groupWidth와 groupPadding으로 정해진다.\n     */\n    _clusterPos: number;\n\n    /**\n     * 이 아이템이 축의 단위 너비 내에서 차지하는 영역의 상대 크기.\n     * <br>\n     * 0보다 큰 값으로 지정한다.\n     * group이 여러 개인 경우 이 너비를 모두 합한 크기에 대한 상대값으로 group의 너비가 결정된다.\n     */\n    groupWidth: number;\n    // /**\n    //  * 시리즈 point bar들의 양 끝을 점유하는 빈 공간 크기 비율.\n    //  * <br>\n    //  * 0 ~ 1 사이의 비율 값으로 지정한다.\n    //  */\n    // groupPadding: number;\n\n    setCluster(width: number, pos: number): void;\n}\n\nexport interface ISeriesGroup extends IPlottingItem {\n}\n\nexport interface ISeries extends IPlottingItem {\n\n    chart: IChart;\n    group: ISeriesGroup;\n\n    xField: string | number;\n    yField: string | number;\n    colorField: string | number;\n\n    color: string;\n\n    displayName(): string;\n    createPoints(source: any[]): DataPoint[];\n    getPoints(): DataPointCollection;\n    getValue(point: DataPoint, axis: IAxis): number;\n    isVisible(p: DataPoint): boolean;\n}\n\nexport abstract class Series extends ChartItem implements ISeries, ILegendSource {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    static _loadSeries(chart: IChart, src: any, defType?: string): Series {\n        let cls = chart._getSeriesType(src.type);\n\n        if (!cls) {\n            cls = chart._getSeriesType(defType || chart.type);\n        }\n\n        const ser = new cls(chart, src.name);\n\n        ser.load(src);\n        return ser;\n    }\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    readonly name: string;\n    readonly label: string;\n    readonly pointLabel: DataPointLabel;\n    readonly trendline: Trendline;\n    readonly tooltip: Tooltip;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    index = -1;\n    group: SeriesGroup<Series>;\n    _xAxisObj: IAxis;\n    _yAxisObj: IAxis;\n    protected _points: DataPointCollection;\n    _visPoints: DataPoint[];\n    _minValue: number;\n    _maxValue: number;\n    _referents: Series[];\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart, name?: string) {\n        super(chart);\n\n        this.name = name;\n        this.pointLabel = new DataPointLabel(chart);\n        this.trendline = new Trendline(this);\n        this.tooltip = new Tooltip(this);\n\n        this._points = new DataPointCollection(this);\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    abstract _type(): string; // for debugging, ...\n\n    // group: string;\n    zOrder = 0;\n    xAxis: string | number;\n    yAxis: string | number;\n    /**\n     * undefined이면, data point의 값이 array일 때는 0, 객체이면 'x'.\n     */\n    xField: string | number;\n    /**\n     * undefined이면, data point의 값이 array일 때는 1, 객체이면 'y'.\n     */\n    yField: string | number;\n    /**\n     * undefined이면, data point의 값이 객체일 때 'color'.\n     */\n    colorField: string;\n    /**\n     * undefined이면 \"data\".\n     */\n    dataProp: string;\n    /**\n     * 시리즈 데이타에 x축 값이 설정되지 않은 경우, 첫 포인트의 자동 지정 x값.\n     * <br>\n     * 이 속성이 지징되지 않은 경우 {@link Chart.xStart}가 적용된다.\n     */\n    xStart: number;\n    /**\n     * 시리즈 데이타에 x축 값이 설정되지 않은 경우, 포인트 간의 간격 크기.\n     * time 축일 때, 정수 값 대신 시간 단위로 지정할 수 있다.\n     * <br>\n     * 이 속성이 지정되지 않으면 {@link Chart.xStep}이 적용된다.\n     */\n    xStep: number | string;\n    /**\n     * 데이터 포인트 기본 색.\n     */\n    color: string;\n    /**\n     * 데이터 포인트별 색들을 지정한다.\n     * <br>\n     * false로 지정하면 모든 포인트들이 시리즈 색으로 표시된다.\n     * true로 지정하면 기본 색들로 표시된다.\n     * 색 문자열 배열로 지정하면 포함된 색 순서대로 표시된다.\n     * undefined나 null이면 시리즈 종류에 따라 false 혹은 true로 해석된다.\n     */\n    pointColors: boolean | string[];\n\n    /**\n     * body 영역을 벗어난 data point view는 잘라낸다.\n     */\n    clipped = false;\n\n    getPoints(): DataPointCollection {\n        return this._points;\n    }\n\n    getLabeledPoints(): DataPoint[] {\n        return this._points.getPoints();\n    }\n\n    getVisiblePoints(): DataPoint[] {\n        return this._points.getVisibles();\n    }\n\n    isEmpty(): boolean {\n        return this._points.isEmpty();\n    }\n\n    needAxes(): boolean {\n        return true;\n    }\n\n    /**\n     * @internal\n     * \n     * CategoryAxis에 연결 가능한가?\n     */\n    canCategorized(): boolean {\n        return false;\n    }\n\n    defaultYAxisType(): string {\n        return 'linear';\n    }\n\n    /**\n     * @internal\n     * \n     * 병렬 배치 가능한가?\n     */\n    clusterable(): boolean {\n        return false;\n    }\n\n    displayName(): string {\n        return this.label || this.name;\n    }\n\n    legendColor(): string {\n        return this.color;\n    }\n\n    legendLabel(): string {\n        return this.label || this.name;\n    }\n\n    legendVisible(): boolean {\n        return this.visible;\n    }\n\n    ignoreAxisBase(axis: IAxis): boolean {\n        return false;\n    }\n\n    canMixWith(other: IPlottingItem): boolean {\n        return true;\n    }\n\n    /**\n     * BarSeries 계열처럼 base를 기준으로 표시하는 방향이 달라지는 경우 기준 값.\n     */\n    getBaseValue(axis: IAxis): number {\n        return NaN;\n    }\n\n    canMinPadding(axis: IAxis): boolean {\n        return true;\n    }\n\n    canMaxPadding(axis: IAxis): boolean {\n        return true;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    protected _createPoint(source: any): DataPoint {\n        return new DataPoint(source);\n    }\n\n    createPoints(source: any[]): DataPoint[] {\n        return source.map((s, i) => {\n            const p = this._createPoint(s);\n\n            p.index = i;\n            p.parse(this);\n            p.isNull ||= s == null || p.y == null;\n            return p;\n        });\n    }\n\n    getXStart(): number {\n        let s = this._xAxisObj.parseValue(this.xStart);\n\n        if (!isNaN(s)) return s;\n        return this._xAxisObj.parseValue(this.chart.xStart);\n    }\n\n    getXStep(): number {\n        return pickNum(this.xStep, this.chart.xStep);\n    }\n\n    getValue(point: DataPoint, axis: IAxis): number {\n        const pv = point.source;\n\n        if (pv != null) {\n            const fld = this._getField(axis);\n            const v = pv[fld];\n\n        } else {\n            return NaN;\n        }\n    }\n\n    prepareRender(): void {\n        this._xAxisObj = this.group ? this.group._xAxisObj : this.chart._connectSeries(this, true);\n        this._yAxisObj = this.group ? this.group._yAxisObj : this.chart._connectSeries(this, false);\n        this._visPoints = this._points.getVisibles();//.sort((p1, p2) => p1.xValue - p2.xValue);\n        this._doPrepareRender();\n    }\n\n    collectCategories(axis: IAxis): string[] {\n        if (axis instanceof CategoryAxis) {\n            let fld = axis.categoryField;\n\n            if (fld != null) {\n                return this._points.getProps(fld);\n            } else {\n                return this._points.getValues(axis === this._xAxisObj ? 'x' : 'y').filter(v => isString(v));\n            }\n        }\n    }\n\n    /**\n     * vals가 지정되지 않은 상태로 호추될 수 있다.\n     * x값이 숫자가 아닐 때 axis가 해석하지 못하면 xStart 부터 xStep으로 증가 시켜 가면서 순서대로 지정한다.\n     */\n    collectValues(axis: IAxis, vals: number[]): void {\n        if (axis === this._xAxisObj) {\n            let x = this.getXStart() || 0;\n            const xStep = this.getXStep() || 1;\n\n            this._visPoints.forEach((p, i) => {\n                let val = axis.getValue(p.x);\n    \n                // 축이 해석하지 못한 값은 자동으로 값을 지정한다.\n                if (isNaN(val)) {\n                    val = x;\n                    x += xStep;\n                }\n                if (!isNaN(val)) {\n                    p.xValue = val;\n                    vals && vals.push(val);\n                } else {\n                    p.isNull = true;\n                }\n            });\n        } else {\n            this._visPoints.forEach((p, i) => {\n                if (p.isNull) {\n                    p.y = p.yGroup = NaN;\n                } else {\n                    // p.y가 point 생성 시 null이었지만 series.prepareRender() 중 정상 값으로 설정될 수 있다. (waterfall)\n                    // isNull은 유지하면서 p.y 값이 재설정될 수 있도록 한다.\n                    // let val = p.isNull ? NaN : axis.getValue(p.y);\n                    let val = p.y == null ? NaN : axis.getValue(p.y);\n        \n                    if (!isNaN(val)) {\n                        p.yGroup = p.yValue = val;\n                        vals && vals.push(val);\n                    } else {\n                        p.yGroup = 0;\n                    }\n                    p.isNull = isNaN(p.yValue);\n                }\n            });\n\n            if (vals) {\n                this._minValue = Math.min(...vals);\n                this._maxValue = Math.max(...vals);\n            }\n        }\n    }\n\n    pointValuesPrepared(axis: IAxis): void {\n        if (this._referents) {\n            this._referents.forEach(r => r.reference(this, axis));\n        }\n    }\n\n    reference(other: Series, axis: IAxis): void {\n    }\n\n    isVisible(point: DataPoint): boolean {\n        return this._xAxisObj.contains(point.x) && this._yAxisObj.contains(point.y);\n    }\n\n    getLegendSources(list: ILegendSource[]): void {\n        list.push(this);\n    }\n\n    getLabelPosition(p: PointItemPosition): PointItemPosition {\n        return p;\n    }\n\n    getLabelOff(off: number): number {\n        return off;\n    }\n\n    referBy(ref: Series): void {\n        if (ref) {\n            if (!this._referents) {\n                this._referents = [ref];\n            } else if (this._referents.indexOf(ref) < 0) {\n                this._referents.push(ref);\n            }\n        }\n    }\n    \n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    _referOtherSeries(series: Series): boolean {\n        // true 리턴하면 더 이상 참조하지 않는 다는 뜻.\n        return true;\n    }\n\n    protected _getField(axis: IAxis): any {\n        return axis === this._xAxisObj ? this.xField : this.yField;\n    }\n\n    protected _colorByPoint(): boolean {\n        return false;\n    }\n\n    protected _doLoad(src: any): void {\n        super._doLoad(src);\n\n        const data = src[this.dataProp || 'data'];\n\n        if (isArray(data) && data.length > 0) {\n            this._doLoadPoints(data);\n        }\n    }\n\n    protected _doLoadPoints(src: any[]): void {\n        this._points.load(src);\n    }\n\n    protected _doPrepareRender(): void {\n        let color: string;\n        let colors: string[];\n\n        if (this.pointColors === false) {\n            color = this.color;\n        } else if (isArray(this.pointColors)) {\n            colors = this.pointColors;\n        } else if (this._colorByPoint()) { \n            colors = this.chart.colors;\n        } else {\n            color = this.color;\n        }\n\n        this._visPoints.forEach((p, i) => {\n            if (!p.color) {\n                p.color = color || colors[i % colors.length];\n            }\n        })\n    }\n\n    prepareAfter(): void {\n        // DataPoint.xValue가 필요하다.\n        this.trendline.visible && this.trendline.prepareRender();\n    }\n}\n\nexport class PlottingItemCollection  {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    readonly chart: IChart;\n    private _map: {[name: string]: Series} = {};\n    private _items: IPlottingItem[] = [];\n    private _visibles: IPlottingItem[] = [];\n    private _series: Series[] = [];\n    private _visibleSeries: Series[] = [];\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart) {\n        this.chart = chart;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get first(): IPlottingItem {\n        return this._items[0];\n    }\n\n    get firstSeries(): Series {\n        return this._series[0];\n    }\n\n    get firstVisible(): IPlottingItem {\n        return this._visibles[0];\n    }\n\n    get firstVisibleSeries(): Series {\n        return this._visibleSeries[0];\n    }\n\n    isEmpty(): boolean {\n        return !this._items.find(item => !item.isEmpty());\n        // return !this._visibles.find(item => !item.isEmpty());\n    }\n\n    items(): IPlottingItem[] {\n        return this._items.slice(0);\n    }\n\n    visibles(): IPlottingItem[] {\n        return this._visibles.slice(0);\n    }\n\n    series(): Series[] {\n        return this._series.slice(0);\n    }\n\n    visibleSeries(): Series[] {\n        return this._visibleSeries.slice(0);\n    }\n\n    needAxes(): boolean {\n        if (this._visibles.find(item => item.needAxes())) {\n            return true;\n        }\n        return this._visibleSeries.length === 0;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    get(name: string): Series {\n        return this._map[name];\n    }\n\n    getLegendSources(): ILegendSource[] {\n        const legends: ILegendSource[] = [];\n\n        this._items.forEach(ser => ser.getLegendSources(legends));\n        return legends;\n    }\n\n    load(src: any): void {\n        const chart = this.chart;\n        const items: IPlottingItem[] = this._items = [];\n        const series: Series[] = this._series = [];\n        const map = this._map = {};\n\n        if (isArray(src)) {\n            src.forEach((s, i) => {\n                items.push(this.$_loadItem(chart, s, i));\n            });\n        } else if (isObject(src)) {\n            items.push(this.$_loadItem(chart, src, 0));\n        }\n\n        // series\n        items.forEach((item, i) => {\n            item.index = i;\n            if (item instanceof SeriesGroup) {\n                series.push(...item.series);\n            } else if (item instanceof Series) {\n                series.push(item);\n            }\n        })\n\n        series.forEach(ser => {\n            if (ser.name) map[ser.name] = ser;\n            for (const ser2 of this._series) {\n                if (ser2 !== ser) {\n                    if (!ser.canMixWith(ser2)) {\n                        throw new Error('동시에 표시할 수 없는 시리즈들입니다: ' + ser._type() + ', ' + ser2._type());\n                    }\n                    if (ser._referOtherSeries(ser2)) {\n                        break;\n                    }\n                }\n            }\n        });\n    }\n\n    prepareRender(): void {\n        const colors = this.chart.colors;\n        \n        this._visibleSeries = this._series.filter(ser => ser.visible);\n\n        const nCluster = this._visibleSeries.filter(ser => ser.clusterable()).length;\n\n        this._visibleSeries.forEach((ser, i) => {\n            ser.color = ser.color || colors[i++ % colors.length];\n            if (ser instanceof ClusterableSeries) {\n                ser._single = nCluster === 1;\n            }\n        });\n\n        this._visibles = this._items.filter(item => item.visible);\n        this._visibles.forEach(item => item.prepareRender());\n    }\n\n    prepareAfter(): void {\n        this._visibles.forEach(item => item.prepareAfter());\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_loadItem(chart: IChart, src: any, index: number): IPlottingItem {\n        let cls = src.series && (chart._getGroupType(src.type) || chart._getGroupType(chart.type));\n\n        if (cls) {\n            const g = new cls(chart);\n\n            g.load(src);\n            return g;\n        }\n\n        cls = chart._getSeriesType(src.type) || chart._getSeriesType(chart.type);\n\n        const ser = new cls(chart, src.name || `Series ${index + 1}`);\n\n        ser.load(src);\n        ser.index = index;\n        return ser;\n    }\n}\n\nexport enum MarerVisibility {\n    /** visible 속성에 따른다. */\n    DEFAULT = 'default',\n    /** visible 속성과 상관없이 항상 표시한다. */\n    VISIBLE = 'visible',\n    /** visible 속성과 상관없이 항상 표시하지 않는다. */\n    HIDDEN = 'hidden'\n}\n\nexport abstract class SeriesMarker extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    /**\n     * 명시적으로 지정하지 않으면 typeIndex에 따라 Shapes 중 하나로 돌아가면서 설정된다.\n     */\n    shape: Shape;\n    /**\n     * shape의 반지름.\n     */\n    radius = 3;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(public series: Series) {\n        super(series.chart);\n    }\n}\n\nexport abstract class WidgetSeries extends Series {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    needAxes(): boolean {\n        return false;\n    }\n}\n\n/**\n * 직교 좌표계가 표시된 경우, plot area 영역을 기준으로 size, centerX, centerY가 적용된다.\n * <br>\n * TODO: 현재 PieSeris만 계승하고 있다. 추후 PieSeries에 합칠 것.\n */\nexport abstract class RadialSeries extends WidgetSeries {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _sizeDim: IPercentSize;\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    startAngle = 0;\n    centerX = 0;\n    centerY = 0;\n    /**\n     * 원형 플롯 영역의 크기.\n     * <br>\n     * 픽셀 크기나 차지할 수 있는 전체 크기에 대한 상대적 크기로 지정할 수 있다.\n     */\n    size: RtPercentSize;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getSize(width: number, height: number): number {\n        return calcPercent(this._sizeDim, Math.min(width, height));\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doLoad(src: any): void {\n        super._doLoad(src);\n\n        this._sizeDim = parsePercentSize(this.size, true) || { size: 80, fixed: false };\n    }\n}\n\nexport abstract class ClusterableSeries extends Series implements IClusterable {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _clusterWidth = 1;\n    _clusterPos = 0;\n    _childWidth = 1;    // group내에서 이 시리즈의 상대적 너비\n    _childPos = 0;      // group내에서 이 시리즈의 상대적 위치\n\n    _single: boolean;\n    _pointPad = 0;\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * 시리즈가 group에 포함되지 않은 경우, 축 단위 너비에서 이 시리즈가 차지하는 상대적 너비.\n     * <br>\n     * 그룹에 포함되면 이 속성은 무시된다.\n     */\n    groupWidth = 1; // _clusterWidth 계산에 사용된다. TODO: clusterWidth로 변경해야 하나?\n    // /**\n    //  * 시리즈가 group에 포함되지 않은 경우 자동 생성되는 기본 group에 포함되는 데,\n    //  * 그 그룹의 너비에서 포인트들이 표시되기 전후의 상대적 여백 크기.\n    //  * <br>\n    //  * 명시적으로 설정된 그룹에 포함되면 이 속성은 무시된다.\n    //  */\n    // groupPadding = 0.2;\n    /**\n     * 시리즈가 포함된 그룹의 layout이 {@link SeriesGroupLayout.DEFAULT}이거나 특별히 설정되지 않아서,\n     * 그룹에 포함된 시리즈들의 data point가 옆으로 나열되어 표시될 때,\n     * 포인트 표시 영역 내에서 이 시리즈의 포인트가 차지하는 영역의 상대 크기.\n     * <br>\n     * 예를 들어 이 시리즈의 속성값이 1이고 다른 시리즈의 값이 2이면 다른 시리즈의 data point가 두 배 두껍게 표시된다.\n     */\n    pointWidth = 1;\n    /**\n     * 이 시리즈의 point가 차지하는 영역 중에서 point bar 양쪽 끝에 채워지는 빈 영역의 크기.\n     * <br>\n     * point가 차지할 원래 크기에 대한 상대 값으로서,\n     * 0 ~ 1 사이의 비율 값으로 지정한다.\n     * \n     * @default 한 카테고리에 cluster 가능한 시리즈가 하나만 표시되면 0.25, group에 포함된 경우 0.1, 여러 시리즈와 같이 표시되면 0.2.\n     */\n    pointPadding: number;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getPointWidth(length: number): number {\n        const g = this.group as ClustrableSeriesGroup<Series>;\n        let w = length;\n        \n        if (g) {\n            w *= g._clusterWidth;\n            w *= 1 - g.groupPadding * 2;  \n            w *= this._childWidth;      // 그룹 내 시리즈 영역\n        } else {\n            w *= this._clusterWidth;           \n        }\n        w *= 1 - this._pointPad * 2;    // 시리즈 padding\n        return w;\n    }\n\n    getPointPos(length: number): number {\n        const g = this.group as ClustrableSeriesGroup<Series>;\n        let w = length;\n        let p = 0;\n\n        if (g) {\n            p = w * g._clusterPos;\n            w *= g._clusterWidth;\n\n            p += w * g.groupPadding;\n            w -= w * g.groupPadding * 2;\n\n            p += w * this._childPos;\n            w *= this._childWidth;\n        } else {\n            p = w * this._clusterPos;\n            w *= this._clusterWidth;\n        }\n        p += w * this._pointPad;\n        return p;\n    }\n\n    getLabelPosition(p: PointItemPosition): PointItemPosition {\n        return p === PointItemPosition.AUTO ? PointItemPosition.OUTSIDE_FIRST : p;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden mebers\n    //-------------------------------------------------------------------------\n    clusterable(): boolean {\n        return true;\n    }\n\n    setCluster(width: number, pos: number): void {\n        this._clusterWidth = width;\n        this._clusterPos = pos;\n    }\n\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        this._pointPad = isNaN(this.pointPadding) ? (this._single ? 0.25 : this.group ? 0.1 : 0.2) : this.pointPadding;\n    }\n}\n\nexport abstract class BasedSeries extends ClusterableSeries {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _base: number;\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * 위/아래 구분의 기준이 되는 값.\n     * <br>\n     * 숫자가 아닌 값으로 지정하면 0으로 간주한다.\n     */\n    baseValue = 0;\n    /**\n     * null인 y값을 {@link baseValue}로 간주한다.\n     */\n    nullAsBase = false;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        this._base = pickNum(this._getGroupBase(), this._yAxisObj.getBaseValue());\n    }\n\n    getBaseValue(axis: IAxis): number {\n        return axis === this._yAxisObj ? this._base : NaN;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _getGroupBase(): number {\n        return this.baseValue;\n    }\n}\n\nexport abstract class RangedSeries extends ClusterableSeries {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    collectValues(axis: IAxis, vals: number[]): void {\n        super.collectValues(axis, vals);\n\n        if (axis === this._yAxisObj) {\n            this._visPoints.forEach((p: DataPoint) => {\n                const v = this._getBottomValue(p);\n                vals && !isNaN(v) && vals.push(v);\n            })\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected abstract _getBottomValue(p: DataPoint): number;\n}\n\nexport enum SeriesGroupLayout {\n\n    /**\n     * 시리즈 종류에 따른 기본 표시 방식.\n     * <br>\n     * bar 종류의 시리즈인 경우 포인트들을 순서대로 옆으로 배치하고,\n     * line 종류인 경우 {@link OVERLAP}과 동일하게 순서대로 표시된다.\n     * pie 종류인 경우 {@link FILL}과 동일하다.\n     * <br>\n     * 기본 값이다.\n     */\n    DEFAULT = 'default',\n    /**\n     * 포인트들을 순서대로 겹쳐서 표시한다.\n     * <br>\n     * bar 종류의 시리지은 경우, \n     * 마지막 시리즈의 포인트 값이 큰 경우 이전 포인트들은 보이지 않을 수 있다.\n     */\n    OVERLAP = 'overlap',\n    /**\n     * 포인트 그룹 내에서 각 포인트들을 순서대로 쌓아서 표시한다.\n     */\n    STACK = 'stack',\n    /**\n     * 포인트 그룹 내에서 각 포인트의 비율을 표시한다.\n     * <br>\n     * 그룹 합은 SeriesGroup.max로 지정한다.\n     * 각 포인트들은 STACK과 마찬가지로 순서대로 쌓여서 표시된다.\n     * SeriesGroup.baseValue 보다 값이 큰 point는 baseValue 위쪽에 작은 값을 가진\n     * 포인트들은 baseValue 아래쪽에 표시된다.\n     * <br>\n     * Pie 시리즈에서는 {@link FILL}과 동일하다.\n     */\n    FILL = 'fill',\n}\n\nexport abstract class SeriesGroup<T extends Series> extends ChartItem implements ISeriesGroup {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    /**\n     * {@link layout}이 {@link SeriesGroupLayout.FILL}일 때 상대적 최대값.\n     * <br>\n     * \n     * @default 100\n     */\n    layoutMax = 100;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    index = -1;\n    private _series: T[] = [];\n    protected _visibles: T[] = [];\n    _xAxisObj: IAxis;\n    _yAxisObj: IAxis;\n    _stackPoints: Map<number, DataPoint[]>;\n\n    //-------------------------------------------------------------------------\n    // ISeriesGroup\n    //-------------------------------------------------------------------------\n    layout = SeriesGroupLayout.DEFAULT;\n    xAxis: string | number;\n    yAxis: string | number;\n\n    get series(): T[] {\n        return this._series.slice(0);\n    }\n\n    needAxes(): boolean {\n        return true;\n    }\n\n    isEmpty(): boolean {\n        return this._series.length < 1;\n        // return this._visibles.length < 1;\n    }\n\n    canCategorized(): boolean {\n        return true;\n    }\n\n    defaultYAxisType(): string {\n        return 'linear';\n    }\n\n    clusterable(): boolean {\n        return false;\n    }\n\n    getBaseValue(axis: IAxis): number {\n        return NaN;//axis.getBaseValue();\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return this._seriesType();\n    }\n\n    abstract _seriesType(): string;\n\n    // Axis에서 요청한다.\n    collectValues(axis: IAxis, vals: number[]): void {\n        if (this._visibles.length > 0) {\n            if (axis === this._visibles[0]._yAxisObj) {\n                switch (this.layout) {\n                    case SeriesGroupLayout.STACK:\n                        this.$_collectStack(axis, vals);\n                        break;\n\n                    case SeriesGroupLayout.FILL:\n                        this.$_collectFill(axis, vals);\n                        break;\n        \n                    case SeriesGroupLayout.DEFAULT:\n                    case SeriesGroupLayout.OVERLAP:\n                        this.$_collectValues(axis, vals);\n                        break;\n                }\n            } else {\n                this.$_collectValues(axis, vals);\n            }\n        }\n    }\n\n    pointValuesPrepared(axis: IAxis): void {\n        this._series.forEach(ser => ser.pointValuesPrepared(axis));\n    }\n\n    collectCategories(axis: IAxis): string[] {\n        let cats: string[] = [];\n\n        this._visibles.forEach(ser => cats = cats.concat(ser.collectCategories(axis)));\n        return cats;\n    }\n\n    ignoreAxisBase(axis: IAxis): boolean {\n        for (const ser of this._visibles) {\n            if (ser.ignoreAxisBase(axis)) return true;\n        }\n    }\n\n    getLegendSources(list: ILegendSource[]) {\n        // list.push(...this._visibles);\n        list.push(...this._series);\n    }\n\n    canMinPadding(axis: IAxis): boolean {\n        return true;\n    }\n\n    canMaxPadding(axis: IAxis): boolean {\n        return this.layout !== SeriesGroupLayout.FILL;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    getVisiblePoints(): DataPoint[] {\n        const pts: DataPoint[] = [];\n\n        this._visibles.forEach(ser => pts.push(...ser.getVisiblePoints()));\n        return pts;\n    }\n\n    protected _doLoadProp(prop: string, value: any): boolean {\n        if (prop === 'series') {\n            this.$_loadSeries(this.chart, value);\n            return true;\n        }\n    }\n\n    prepareRender(): void {\n        this._visibles = this._series.filter(ser => ser.visible);\n\n        super.prepareRender();\n    }\n\n    protected _doPrepareRender(chart: IChart): void {\n        const series = this._visibles.sort((s1, s2) => (s1.zOrder || 0) - (s2.zOrder || 0));\n        \n        this._xAxisObj = this.chart._connectSeries(this, true);\n        this._yAxisObj = this.chart._connectSeries(this, false);\n\n        if (series.length > 0) {\n            series.forEach(ser => ser.prepareRender());\n            this._doPrepareSeries(series);\n        }\n    }\n\n    prepareAfter(): void {\n        this._visibles.forEach(ser => ser.prepareAfter());\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected abstract _canContain(ser: Series): boolean;\n\n    protected _doPrepareSeries(series: T[]): void {}\n\n    private $_loadSeries(chart: IChart, src: any) {\n        const type = this._seriesType();\n\n        if (isArray(src)) {\n            src.forEach((s, i) => this.$_add(Series._loadSeries(chart, s, type) as T));\n        } else if (isObject(src)) {\n            this.$_add(Series._loadSeries(chart, src, type) as T);\n        }\n    }\n\n    private $_add(series: T): void {\n        if (this._canContain(series)) {\n            this._series.push(series);\n            series.group = this;\n            series.index = this._series.length - 1;\n        } else {\n            throw new Error('이 그룹에 포함될 수 없는 시리즈입니다: ' + series);\n        }\n    }\n    private $_collectValues(axis: IAxis, vals: number[]): void {\n        this._visibles.forEach(ser => {\n            ser.collectValues(axis, vals);\n        })\n    }\n\n    private $_collectPoints(axis: IAxis): Map<number, DataPoint[]> {\n        const series = this._visibles;\n        const map: Map<number, DataPoint[]> = this._stackPoints = new Map();\n\n        // point들의 yValue를 준비한다.\n        series.forEach(ser => {\n            ser.collectValues(axis, null);\n        });\n\n        series[0]._visPoints.forEach(p => {\n            // p.yGroup = p.yValue || 0;\n            map.set(p.xValue, [p]);\n        });\n\n        for (let i = 1; i < series.length; i++) {\n            series[i]._visPoints.forEach(p => {\n                const pts = map.get(p.xValue);\n                \n                if (pts) {\n                    pts.push(p);\n                } else {\n                    map.set(p.xValue, [p]);\n                }\n                // p.yGroup = p.yValue || 0;\n            });\n        }\n        return map;\n    }\n\n    private $_collectStack(axis: IAxis, vals: number[]): void {\n        const base = this.getBaseValue(axis);\n        const map = this.$_collectPoints(axis);\n\n        if (!isNaN(base)) {\n            for (const pts of map.values()) {\n                let v = pts[0].yValue || 0;\n                let prev = v >= base ? 0 : -1;\n                let nprev = v < base ? 0 : -1;\n\n                pts[0].yGroup = pts[0].yValue || 0;\n\n                for (let i = 1; i < pts.length; i++) {\n                    v = pts[i].yValue || 0;\n\n                    if (v >= base) {    \n                        if (prev >= 0) {\n                            pts[i].yGroup = pts[prev].yGroup + v;\n                        }\n                        prev = i;\n                    } else {\n                        if (nprev >= 0) {\n                            pts[i].yGroup = pts[nprev].yGroup + v;\n                        }\n                        nprev = i;\n                    }\n                }\n                if (prev >= 0) {\n                    vals.push(pts[prev].yGroup);\n                }\n                if (nprev >= 0) {\n                    vals.push(pts[nprev].yGroup);\n                }\n            }\n        } else {\n            for (const pts of map.values()) {\n                pts[0].yGroup = pts[0].yValue || 0;\n\n                for (let i = 1; i < pts.length; i++) {\n                    pts[i].yGroup = pts[i - 1].yGroup + (pts[i].yValue || 0);\n                }\n                vals.push(pts[pts.length - 1].yGroup);\n            }\n        }\n    }\n\n    private $_collectFill(axis: IAxis, vals: number[]): void {\n        const base = this.getBaseValue(axis);\n        const max = this.layoutMax || 100;\n        const map = this.$_collectPoints(axis);\n\n        if (!isNaN(base)) {\n            for (const pts of map.values()) {\n                let sum = 0;\n                for (const p of pts) {\n                    sum += Math.abs(p.yValue) || 0;\n                }\n\n                let prev = 0;\n                let nprev = 0;\n                \n                for (const p of pts) {\n                    p.yValue = (p.yValue || 0) / sum * max;\n\n                    if (p.yValue < base) {\n                        nprev = p.yGroup = (p.yValue || 0) + nprev;\n                    } else {\n                        prev = p.yGroup = (p.yValue || 0) + prev;\n                    }\n                }\n                vals.push(nprev, prev);\n            }\n        } else {\n            for (const pts of map.values()) {\n                let sum = 0;\n                for (const p of pts) {\n                    sum += p.yValue || 0;\n                }\n                let prev = 0;\n                for (const p of pts) {\n                    prev = p.yGroup = (p.yValue || 0) / sum * max + prev;\n                }\n                vals.push(max);\n            }\n        }\n    }\n}\n\nexport abstract class ConstraintSeriesGroup<T extends Series> extends SeriesGroup<T> {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    collectValues(axis: IAxis, vals: number[]): void {\n        super.collectValues(axis, vals);\n\n        if (axis === this._yAxisObj) {\n            const vals2 = this._doConstraintYValues(this._visibles);\n\n            vals.length = 0;\n            vals.push(...vals2);\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected abstract _doConstraintYValues(series: Series[]): number[];\n}\n\nexport abstract class ClustrableSeriesGroup<T extends Series> extends SeriesGroup<T> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _clusterWidth = 1;\n    _clusterPos = 0;\n    \n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * 축 단위 너비에서 이 그룹이 차지하는 상대적 너비.\n     */\n    groupWidth = 1;\n    /**\n     * 이 그룹의 너비에서 포인트들이 표시되기 전후의 상대적 여백 크기.\n     */\n    groupPadding = 0.1;\n\n}","////////////////////////////////////////////////////////////////////////////////\n// Title.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isString } from \"../common/Common\";\nimport { Align, SVGStyleOrClass, VerticalAlign, isNull } from \"../common/Types\";\nimport { ChartItem } from \"./ChartItem\";\n\nexport class Title extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    text = 'Title';\n    align = Align.CENTER;\n    backgroundStyle: SVGStyleOrClass;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    isVisible(): boolean {\n        return this.visible && !isNull(this.text);\n    }\n    \n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doLoadSimple(source: any): boolean {\n        if (isString(source)) {\n            this.text = source;\n            return true;\n        }\n    }\n}\n\nexport enum SubtitlePosition {\n    BOTTOM = 'bottom',\n    RIGHT = 'right',\n    LEFT = 'left',\n    TOP = 'top'\n}\n\nexport class Subtitle extends Title {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    position = SubtitlePosition.BOTTOM;\n    valign = VerticalAlign.BOTTOM;\n    text = '';\n}","////////////////////////////////////////////////////////////////////////////////\n// LinearAxis.ts\n// 2023. 06. 21. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isArray, isObject, pickNum, pickNum3 } from \"../../common/Common\";\nimport { IPercentSize, RtPercentSize, assert, calcPercent, ceil, fixnum, parsePercentSize } from \"../../common/Types\";\nimport { Axis, AxisItem, AxisTick, AxisLabel, IAxisTick } from \"../Axis\";\nimport { DataPoint } from \"../DataPoint\";\nimport { SeriesGroup, SeriesGroupLayout } from \"../Series\";\n\nexport class ContinuousAxisTick extends AxisTick {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    stepSize: number;\n    stepPixels = 72;\n    stepCount: number;\n    steps: number[];\n    /**\n     * true면 소수점값이 표시되지 않도록 한다.\n     */\n    integral = false;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _step: number;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    buildSteps(length: number, base: number, min: number, max: number): number[] {\n        let pts: number[];\n\n        if (Array.isArray(this.steps)) {\n            // 지정한 위치대로 tick들을 생성한다.\n            pts = this.steps.slice(0);\n        } else if (this.stepCount > 0) {\n            pts = this._getStepsByCount(this.stepCount, base, min, max);\n        } else if (this.stepSize > 0) {\n            pts = this._getStepsBySize(this.stepSize, base, min, max);\n        } else if (this.stepPixels > 0) {\n            pts = this._getStepsByPixels(length, this.stepPixels, base, min, max);\n        } else {\n            pts = [min, max];\n        }\n        return pts;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _getStepsByCount(count: number, base: number, min: number, max: number): number[] {\n        if (min > base) {\n            min = base;\n            base = NaN;\n        } else if (max < base) {\n            max = base;\n            base = NaN;\n        }\n\n        const integral = isNaN(base) && this.integral;\n        const len = max - min;\n        let step = len / (count - 1);\n        const scale = Math.pow(10, Math.floor(Math.log10(step)));\n        const steps: number[] = [];\n\n        step = this._step = Math.ceil(step / scale) * scale;\n\n        if (!isNaN(base)) { // min이 base 아래, max가 base 위에 있다.\n            assert(min < base && max > base, \"base error\");\n            count = Math.max(3, count);\n\n            while (true) {\n                const n = ceil((base - min) / step) + ceil((max - base) / step) + 1; // +1은 base\n                if (n > count) {\n                    step += scale;\n                } else {\n                    break;\n                }\n            }\n            min = base - ceil((base - min) / step) * step;\n\n        } else {\n            if (min > Math.floor(min / scale) * scale) {\n                min = Math.floor(min / scale) * scale;\n            } else if (min < Math.ceil(min / scale) * scale) {\n                min = Math.ceil(min / scale) * scale;\n            }\n        }\n\n        steps.push(min);\n        for (let i = 1; i < count; i++) {\n            steps.push(fixnum(steps[i - 1] + step));\n        }\n        return steps;\n    }\n\n    protected _getStepsBySize(size: number, base: number, min: number, max: number): number[] {\n        const steps: number[] = [];\n        let v: number;\n\n        if (!isNaN(base)) {\n            steps.push(v = base);\n            while (v > min) {\n                steps.unshift(v -= size);\n            }\n            v = base;\n            while (v < max) {\n                steps.push(v += size);\n            }\n        } else {\n            steps.push(v = min);\n            while (v < max) {\n                steps.push(v += size);\n            }\n        }\n        this._step = size;\n        return steps;\n    }\n\n    protected _getStepMultiples(step: number): number[] {\n        return [1, 2, 2.5, 5, 10];\n    }\n\n    protected _getStepsByPixels(length: number, pixels: number, base: number, min: number, max: number): number[] {\n        if (min >= base) {\n            min = base;\n            // base = NaN;\n        } else if (max <= base) {\n            max = base;\n            // base = NaN;\n        }\n\n        const len = max - min;\n\n        if (len === 0) {\n            return [];\n        }\n\n        let count = Math.floor(length / this.stepPixels) + 1;\n        let step = len / (count - 1);\n        const scale = Math.pow(10, Math.floor(Math.log10(step)));\n        const multiples = this._getStepMultiples(step);\n        const steps: number[] = [];\n        let v: number;\n\n        step = step / scale;\n        if (multiples) {\n            if (step > multiples[0]) {\n                let i = 0;\n                for (; i < multiples.length - 1; i++) {\n                    if (step > multiples[i] && step < multiples[i + 1]) {\n                        step = multiples[i + 1];\n                        break;\n                    }\n                }\n                if (i >= multiples.length) {\n                    debugger;\n                    step = multiples[multiples.length - 1];\n                }\n            } else {\n                step = multiples[0];\n            }\n        }\n        step *= scale;\n\n        if (!isNaN(base)) { // min이 base 아래, max가 base 위에 있다.\n            assert(min <= base && max >= base, \"base error\");\n            count = Math.max(3, count);\n\n            while (true) {\n                const n = ceil((base - min) / step) + ceil((max - base) / step) + 1; // +1은 base\n                if (n > count) {\n                    step += scale;\n                } else {\n                    break;\n                }\n            }\n            min = base - ceil((base - min) / step) * step;\n\n        } else {\n            if (min > Math.floor(min / step) * step) {\n                min = Math.floor(min / step) * step;\n            } else if (min < Math.ceil(min / step) * step) {\n                min = Math.ceil(min / step) * step;\n            }\n        }\n\n        this._step = step;\n        steps.push(fixnum(v = min));\n        while (v < max) {\n            steps.push(fixnum(v += step));\n        }\n        return steps;\n    }\n}\n\nclass ContinuousAxisLabel extends AxisLabel {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    useSymbols = true;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    getTick(v: any): string {\n        return this._getText(null, v, this.useSymbols && (this.axis.tick as ContinuousAxisTick)._step > 100);\n    }\n}\n\n/**\n * from에서 to 이전까지의 값은 from으로 표시된다.\n * space는 break line 등을 표시하기 위한 공간.\n * \n * 1. to가 from보다 커야 한다.\n * 2. ratio가 0보다 크고 1보다 작은 값으로 반드시 설정돼야 한다.\n * 3. 이전 break의 ratio보다 큰 값으로 설정돼야 한다.\n * 4. 1, 2, 3 중 하나라도 위반하면 병합에서 제외시킨다.\n * 5. 이전 범위와 겹치면 병합된다.\n */\nexport class AxisBreak extends AxisItem {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    enabled = true;\n    from: number;\n    to: number;\n    size: RtPercentSize = '30%';\n    space = 12;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _sizeDim: IPercentSize;\n    _sect: AxisBreakSect;\n\n    //-------------------------------------------------------------------------\n    // method\n    //-------------------------------------------------------------------------\n    getSize(domain: number): number {\n        return calcPercent(this._sizeDim, domain);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doLoad(source: any): void {\n        super._doLoad(source);\n\n        this.space = pickNum(this.space, 0);\n        this._sizeDim = parsePercentSize(this.size, false);\n    }\n}\n\ninterface AxisBreakSect {\n    from: number;\n    to: number;\n    pos: number;\n    len: number;\n}\n\n/**\n * 축 양 끝 맞춤 방식.\n */\nexport enum AxisFit {\n    /**\n     * x축이면 {@link VALUE}, y축이면 {@link TICK}.\n     */\n    DEFAULT = 'default',\n    /**\n     * 축의 min/max가 tick에 해당하지 않는 경우 tick이 표시될 수 있도록 증가 시킨다.\n     */\n    TICK = 'tick',\n    /**\n     * 축의 min/max에 맞춰 표시한다.\n     */\n    VALUE = 'value'\n}\n\nexport abstract class ContinuousAxis extends Axis {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _hardMin: number;\n    private _hardMax: number;\n    private _min: number;\n    private _max: number;\n    private _base: number;\n    private _unitLen: number;\n    private _calcedMin: number;\n    private _calcedMax: number;\n    private _minBased: boolean;\n    private _maxBased: boolean;\n\n    private _runBreaks: AxisBreak[];\n    private _sects: AxisBreakSect[];\n    private _lastSect: AxisBreakSect;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * data point의 이 축 값이 NaN일 때도 point를 표시할 지 여부.\n     */\n    nullable = true;\n    /**\n     */\n    baseValue: number;\n\n    /**\n     * {@link minPadding}, {@link maxPadding}의 기본값이다.\n     */\n    padding = 0.05;\n    /**\n     * 첫번째 tick 앞쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n     * <br>\n     * 이 값을 지정하지 않으면 {@link padding}에 지정된 값을 따른다.\n     * {@link startFit}이 {@link AxitFit.TICK}일 때,\n     * data point의 최소값과 첫번째 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n     * {@link strictMin}이 지정돼도 이 속성은 무시된다.\n     */\n    minPadding: number;\n    /**\n     * 마지막 tick 뒤쪽에 추가되는 최소 여백을 축 길이에 대한 상대값으로 지정한다.\n     * <br>\n     * 이 값을 지정하지 않으면 {@link padding}에 지정된 값을 따른다.\n     * {@link endFit}이 {@link AxitFit.TICK}일 때,\n     * data point의 최대값과 마지막 tick 사이에 이미 그 이상의 간격이 존재한다면 무시된다.\n     * {@link strictMax}가 지정돼도 이 속성은 무시된다.\n     */\n    maxPadding: number;\n\n    strictMin: number;\n    strictMax: number;\n\n    /**\n     * 축 시작 위치에 tick 표시 여부.\n     * <br>\n     * {@link strictMin}이 설정되고 {@link AxisFit.VALUE}로 적용된다.\n     */\n    startFit = AxisFit.DEFAULT;\n    /**\n     * 축 끝 위치에 tick 표시 여부.\n     * <br>\n     * {@link strictMax}가 설정되면 무시되고 {@link AxisFit.VALUE}로 적용된다.\n     */\n    endFit = AxisFit.DEFAULT;\n\n    /** y축으로 사용될 때만 적용한다. */\n    readonly breaks: AxisBreak[] = [];\n\n    getBaseValue(): number {\n        return this.baseValue;\n    }\n\n    axisMin(): number {\n        return this._min;\n    }\n\n    axisMax(): number {\n        return this._max;\n    }\n\n    hasBreak(): boolean {\n        return !!this._runBreaks;\n    }\n\n    runBreaks(): AxisBreak[] {\n        return this._runBreaks && this._runBreaks.slice(0);\n    }\n\n    getStartFit(): AxisFit {\n        return this.startFit === AxisFit.DEFAULT ? (this._isX ? AxisFit.VALUE : AxisFit.TICK) : this.startFit;\n    }\n\n    getEndFit(): AxisFit {\n        return this.endFit === AxisFit.DEFAULT ? (this._isX ? AxisFit.VALUE : AxisFit.TICK) : this.endFit;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    contains(value: number): boolean {\n        return !isNaN(value);\n        // return (this.nullable && isNaN(value)) || super.contains(value);\n    }\n\n    protected _createTickModel(): AxisTick {\n        return new ContinuousAxisTick(this);\n    }\n\n    protected _createLabelModel(): AxisLabel {\n        return new ContinuousAxisLabel(this);\n    }\n\n    protected _doLoadProp(prop: string, value: any): boolean {\n        if (prop ==='break') {\n            this.$_loadBreaks(value);\n            return true;\n        }\n        return super._doLoadProp(prop, value);\n    }\n\n    protected _doPrepareRender(): void {\n        // const base = this.baseValue;\n\n        this._hardMin = this.min;\n        this._hardMax = this.max;\n\n        // if (this._series.find(s => s.ignoreAxisBase(this))) {\n        //     this._base = NaN;\n        // } else {\n        //     this._base = pickNum(+base, 0);\n        // }\n\n        this._base = parseFloat(this.baseValue as any);\n        this._unitLen = NaN;\n    }\n\n    protected _doBuildTicks(calcedMin: number, calcedMax: number, length: number): IAxisTick[] {\n        const tick = this.tick as ContinuousAxisTick;\n        let { min, max } = this._adjustMinMax(this._calcedMin = calcedMin, this._calcedMax = calcedMax);\n        let base = this._base;\n\n        if (isNaN(base) && min < 0 && max > 0) {\n            base = 0;\n        } \n\n        let steps = tick.buildSteps(length, base, min, max);\n        const ticks: IAxisTick[] = [];\n\n        if (!isNaN(this.strictMin) || this.getStartFit() === AxisFit.VALUE) {\n            if (steps.length > 1 && min > steps[0]) {\n                steps = steps.slice(1);\n            }\n        } else if (steps.length > 2 && steps[1] <= min) {\n            steps.slice(1);\n        } else {\n            min = Math.min(min, steps[0]); \n        }\n        if (!isNaN(this.strictMax) || this.getEndFit() === AxisFit.VALUE) {\n            if (max < steps[steps.length - 1] && steps.length > 1) {\n                steps.pop();\n            }\n        } else if (steps.length > 2 && steps[steps.length - 2] > max) {\n            steps.pop();\n        } else {\n            max = Math.max(max, steps[steps.length - 1]);\n        }\n\n        this._setMinMax(min, max);\n\n        if (min !== max) {\n            if (this._runBreaks) {\n                steps = this.$_getBrokenSteps(this._runBreaks, length, min, max);\n            }\n    \n            for (let i = 0; i < steps.length; i++) {\n                const tick = this._createTick(length, steps[i]);\n                ticks.push(tick);\n            }\n        }\n        return ticks;\n    }\n\n    protected _getTickLabel(value: number): string {\n        return this.label.getTick(value) || String(value);\n    }\n\n    protected _createTick(length: number, step: number): IAxisTick {\n        return {\n            pos: NaN,//this.getPosition(length, step),\n            value: step,\n            label: this._getTickLabel(step)\n        }\n    }\n\n    calcPoints(length: number, phase: number): void {\n        super.calcPoints(length, phase);\n\n        this._markPoints = this._ticks.map(t => t.pos);\n    }\n\n    private $_buildBrokenSteps(sect: AxisBreakSect): number[] {\n        const tick = this.tick as ContinuousAxisTick;\n        const steps = tick.buildSteps(sect.len, void 0, sect.from, sect.to);\n\n        return steps;\n    }\n\n    private $_getBrokenSteps(breaks: AxisBreak[], len: number, min: number, max: number): number[] {\n        let p = 0;\n        let start = min;\n        const steps: number[] = [start];\n        const sects = this._sects = [];\n        \n        len -= breaks.reduce((a, c) => a + c.space, 0);\n\n        breaks.forEach(br => {\n            const sz = br.getSize(len);\n            const sect = {\n                from: start,\n                to: br.from,\n                pos: p,\n                len: sz\n            };\n\n            p += sz;\n\n            sects.push(sect, br._sect = {\n                from: br.from,\n                to: br.to,\n                pos: p,\n                len: br.space\n            })\n\n            p += br.space;\n\n            const steps2 = this.$_buildBrokenSteps(sect);\n\n            steps2.forEach(s => {\n                if (s > sect.from && s <= sect.to) {\n                    steps.push(s);\n                }\n            })\n            if (br.space > 0) {\n                steps.push(br.to);\n            }\n        });\n\n        const last = breaks[breaks.length - 1];\n\n        if (max > last.to) {\n            const sect = {\n                from: last.to,\n                to: max,\n                pos: p,\n                len: this._length - p\n            };\n\n            sects.push(sect);\n\n            const steps2 = this.$_buildBrokenSteps(sect);\n            steps2.forEach(s => {\n                if (s > sect.from && s <= sect.to) {\n                    steps.push(s);\n                }\n            })\n        }\n\n        this._lastSect = sects[sects.length - 1];\n        return steps;\n    }\n\n    getPosition(length: number, value: number): number {\n        if (this._runBreaks) {\n            const sect = this._sects.find(s => value < s.to) || this._lastSect;\n            const p = sect.len * (value - sect.from) / (sect.to - sect.from);\n\n            return (this.reversed ? length - p : p) + sect.pos;\n        } else {\n            const p = length * (value - this._min) / (this._max - this._min);\n\n            return this.reversed ? length - p : p;\n        }\n    }\n\n    getUnitLength(length: number, value: number): number {\n        if (isNaN(this._unitLen)) {\n            this._unitLen = this.$_calcUnitLength(length);\n        }\n        return this._unitLen;\n    }\n\n    getLabelLength(length: number, value: number): number {\n        return Math.floor(length / this._ticks.length);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _adjustMinMax(min: number, max: number): { min: number, max: number } {\n        this._minBased = this._maxBased = false;\n\n        this._series.forEach(ser => {\n            const base = ser.getBaseValue(this);\n            \n            if (!isNaN(base)) {\n                if (isNaN(this._hardMin) && base <= min) {\n                    min = base;\n                    this._minBased = true;\n                } else if (isNaN(this._hardMax) && base >= max) {\n                    max = base;\n                    this._maxBased = true;\n                }\n            }\n            if (!this._minBased && !ser.canMinPadding(this)) {\n                this._minBased = true;\n            }\n            if (!this._maxBased && !ser.canMaxPadding(this)) {\n                this._maxBased = true;\n            }\n        })\n\n        let minPad = 0;\n        let maxPad = 0;\n\n        if (!isNaN(this.strictMin)) {\n            min = this.strictMin;\n        } else {\n            if (this._hardMin < min) {\n                min = this._hardMin;\n            }\n            if (!this._minBased) {\n                minPad = pickNum3(this.minPadding, this.padding, 0);\n            }\n        }\n\n        if (!isNaN(this.strictMax)) {\n            max = this.strictMax;\n        } else {\n            if (this._hardMax > max) {\n                max = this._hardMax;\n            }\n            if (!this._maxBased) {\n                maxPad = pickNum3(this.maxPadding, this.padding, 0);\n            }\n        }\n\n        let len = Math.max(0, max - min);\n\n        min -= len * (this._minPad = minPad);\n        max += len * (this._maxPad = maxPad);\n\n        return { min, max };\n    }\n\n    protected _setMinMax(min: number, max: number): void {\n        this._min = min;\n        this._max = max;\n    }\n\n    protected $_calcUnitLength(length: number): number {\n        const pts: DataPoint[] = [];\n\n        this._series.forEach(ser => {\n            if (ser.visible && ser.clusterable()) {\n                pts.push(...ser.getVisiblePoints());\n            }\n        })\n\n        const isX = this._isX;\n        const vals = pts.map(p => isX ? p.xValue : p.yValue).sort();\n        let min = vals[1] - vals[0];\n\n        for (let i = 2; i < vals.length; i++) {\n            min = Math.min(vals[i] - vals[i - 1]);\n        }\n\n        // 이 축에 연결된 clsuterable 시리즈들의 point 최소 간격.\n        length *= min / (this._max - this._min);\n        return this._unitLen = pickNum(length, 1);\n    }\n    private $_loadBreak(source: any): AxisBreak {\n        if (isObject(source) && 'from' in source && 'to' in source) {\n            return new AxisBreak(this).load(source) as AxisBreak;\n        }\n    }\n\n    private $_loadBreaks(source: any): void {\n        if (isArray(source)) {\n            for (let src of source) {\n                const br = this.$_loadBreak(src);\n                br && this.breaks.push(br);\n            }\n        } else if (source) {\n            const br = this.$_loadBreak(source);\n            br && this.breaks.push(br);\n        }\n        this.$_mergeBreaks();\n    }\n\n    /**\n     * 1. rate가 0보다 크고 1보다 작은 값으로 반드시 설정돼야 한다.\n     * 2. 이전 break의 rate보다 큰 값으로 설정돼야 한다.\n     * 3. 1, 2 중 하나라도 위반하면 병합에서 제외시킨다.\n     */\n    private $_mergeBreaks(): void {\n\n        function intersects(br1: AxisBreak, br2: AxisBreak): boolean {\n            return br2.from < br1.to;\n        }\n\n        function merge(br1: AxisBreak, br2: AxisBreak): void {\n            br1.to = br2.to;\n        }\n\n        const breaks = this.breaks.sort((b1, b2) => b1.from - b2.from).filter(b => b.to > b.from);\n\n        this._runBreaks = null;\n\n        if (breaks.length > 0) {\n            const runs = this._runBreaks = [];\n\n            runs.push(Object.assign(new AxisBreak(this), breaks[0]));\n\n            for (let i = 1; i < breaks.length; i++) {\n                const r = runs[runs.length - 1];\n                const b = breaks[i];\n\n                if (intersects(r, b)) {\n                    merge(r, b);\n                } else {\n                    runs.push(Object.assign(new AxisBreak(this), b));\n                }\n            }\n        }\n    }\n}\n\nexport class LinearAxis extends ContinuousAxis {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * tick 개수를 맞춰야 하는 대상 axis.\n     * <br>\n     * base의 strictMin, strictMax가 설정되지 않아야 한다.\n     * base의 startFit, endFilt의 {@link AxisFit.TICK}으로 설정되어야 한다.\n     */\n    tickBase: number | string\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    type(): string {\n        return 'linear';\n    }\n\n    protected _adjustMinMax(min: number, max: number): { min: number; max: number; } {\n        const v = super._adjustMinMax(min, max);\n        const series = this._series;\n\n        if (series.length === 1 && series[0] instanceof SeriesGroup && series[0].layout === SeriesGroupLayout.FILL) {\n            v.max = series[0].layoutMax;\n        }\n        return v;\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// LogAxis.ts\n// 2023. 06. 21. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { AxisTick, IAxisTick } from \"../Axis\";\nimport { ContinuousAxis, LinearAxis, ContinuousAxisTick } from \"./LinearAxis\";\n\nexport class LogAxisTick extends ContinuousAxisTick {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    // buildSteps(length: number, base: number, min: number, max: number): number[] {\n    //     min = Math.log10(min);\n    //     max = Math.log10(max);\n\n    //     const steps =  super.buildSteps(length, base, min, max);\n    //     return steps;\n    // }\n}\n\n/**\n * 이 축에 연결된 시리즈들의 point y값을 log10으로 재설정한다.\n * <br>\n * y축으로만 사용될 수 있다.\n */\nexport class LogAxis extends ContinuousAxis {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    type(): string {\n        return 'log';\n    }\n\n    protected _createTickModel(): AxisTick {\n        return new LogAxisTick(this);\n    }\n\n    protected _doCalcluateRange(values: number[]): { min: number; max: number; } {\n        const v = super._doCalcluateRange(values);\n\n        v.min = Math.log10(v.min);\n        v.max = Math.log10(v.max);\n        return v;\n    }\n\n    protected _createTick(length: number, step: number): IAxisTick {\n        return super._createTick(length, Math.pow(10, step));\n    }\n\n    getPosition(length: number, value: number): number {\n        value = value > 0 ? Math.log10(value) : 0;\n        return super.getPosition(length, value);\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// TimeAxis.ts\n// 2023. 06. 21. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isString } from \"../../common/Common\";\nimport { pad2 } from \"../../common/Types\";\nimport { AxisTick, IAxisTick } from \"../Axis\";\nimport { IChart } from \"../Chart\";\nimport { ContinuousAxis, LinearAxis, ContinuousAxisTick } from \"./LinearAxis\";\n\nconst enum TimeScale {\n    MS,\n    SEC,\n    MIN,\n    HOUR,\n    DAY,\n    WEEK,\n    MONTH,\n    YEAR\n};\n\n// 밀리초 기준 시간 단위별 크기\nconst time_scales = [\n    1,\n    1000,\n    60 * 1000,\n    60 * 60 * 1000,\n    24 * 60 * 60 * 1000,\n    7 * 24 * 60 * 60 * 1000,\n    28 * 24 * 60 * 60 * 1000,    // 최소 월 일수\n    364 * 24 * 60 * 60 * 1000    // 최소 연 일수\n];\n\nconst time_multiples = [\n    [1, 2, 5, 10, 20, 25, 50, 100, 200, 250, 500],  // ms\n    [1, 2, 5, 10, 15, 30],                          // sec\n    [1, 2, 3, 4, 6, 8, 12],                         // min\n    [1, 2, 3, 4, 6, 12],                            // hour\n    [1, 2],                                         // day\n    [1, 2],                                         // week\n    [1, 2, 3, 4, 6]                                 // mon\n]\n\nexport class TimeAxisTick extends ContinuousAxisTick {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    scale: number;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getStepMultiples(step: number): number[] {\n        for (let i = TimeScale.MS; i < TimeScale.YEAR; i++) {\n            if (step >= time_scales[i] && step < time_scales[i + 1] / 2) {\n                // if (step <= time_scales[i]) {\n                this.scale = i;\n                return time_multiples[i];\n            }\n        }\n        this.scale = TimeScale.YEAR;\n    }\n\n    buildSteps(length: number, base: number, min: number, max: number): number[] {\n        const steps = super.buildSteps(length, base, min, max);\n\n        return steps;\n    }\n\n    protected _getStepsByPixels(length: number, pixels: number, base: number, min: number, max: number): number[] {\n        const len = max - min;\n\n        if (len === 0) {\n            return [];\n        }\n\n        const axis = this.axis as TimeAxis;\n        let count = Math.floor(length / this.stepPixels) + 1;\n        let step = Math.max(1, Math.floor(len / (count - 1)));\n        // const scale = Math.pow(10, Math.floor(Math.log10(step)));\n        const multiples = this._getStepMultiples(step);\n        const scale = time_scales[this.scale];\n        const steps: number[] = [];\n        let v: number;\n\n        step = step / scale;\n        if (multiples) {\n            if (step > multiples[0]) {\n                let i = 0;\n                for (; i < multiples.length - 1; i++) {\n                    if (step > multiples[i] && step < multiples[i + 1]) {\n                        step = multiples[i + 1];\n                        break;\n                    }\n                }\n                if (i >= multiples.length) {\n                    debugger;\n                    step = multiples[multiples.length - 1];\n                }\n            } else {\n                step = multiples[0];\n            }\n        }\n\n        const minDate = axis.date(min);\n        const maxDate = axis.date(max);\n        let dt = minDate;\n        let t: number;\n\n        if (this.scale === TimeScale.YEAR) {\n            let y = dt.getFullYear();\n\n            // step = Math.round(step);\n            step = Math.ceil(step);\n            dt = new Date(y, 0);\n\n            if (dt < minDate) {\n                y += step;\n                dt = new Date(y, 0)\n            }\n            do {\n                steps.push(+dt);\n                y += step;\n                dt = new Date(y, 0)\n            } while (dt <= maxDate);\n        } else if (this.scale === TimeScale.MONTH) {\n            let y = dt.getFullYear();\n            let m = dt.getMonth();\n\n            // step = Math.round(step);\n            step = Math.ceil(step);\n            dt = new Date(y, m);\n\n            if (dt < minDate) {\n                m += step;\n                dt = new Date(y, m);\n            }\n            do {\n                steps.push(+dt);\n                m += step;\n                dt = new Date(y, m)\n            } while (dt <= maxDate);\n        } else if (this.scale === TimeScale.DAY || this.scale === TimeScale.WEEK) {\n            let y = dt.getFullYear();\n            let m = dt.getMonth();\n            let d = dt.getDate();\n\n            // step = Math.round(step);\n            step = Math.ceil(step);\n            dt = new Date(y, m, d);\n\n            if (dt < minDate) {\n                d += step;\n                dt = new Date(y, m, d);\n            }\n            do {\n                steps.push(+dt);\n                d += step * (this.scale === TimeScale.WEEK ? 7 : 1);\n                dt = new Date(y, m, d)\n            } while (dt <= maxDate);\n        } else {\n            step *= scale;\n\n            switch (this.scale) {\n                case TimeScale.HOUR:\n                    dt.setMinutes(0);\n                case TimeScale.MIN:\n                    dt.setSeconds(0);\n                case TimeScale.SEC:\n                    dt.setMilliseconds(0);\n                    break;\n            }\n\n            t = dt.getTime();\n            if (t < min) {\n                t += step;\n            }\n\n            do {\n                steps.push(t);\n                t += step;\n            } while (t <= max);\n        }\n\n        return steps;\n    }\n}\n\n/**\n *  timeUnit(기본값 1)밀리초가 1에 해당한다.\n */\nexport class TimeAxis extends ContinuousAxis {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _offset = new Date().getTimezoneOffset() * 60 * 1000;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart, name?: string) {\n        super(chart, name);\n\n        this.baseValue = NaN;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * true면 숫자나 문자열 값을 utc date로 생성한다.\n     */\n    utc: boolean = true;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    type(): string {\n        return 'time';\n    }\n\n    protected _createTickModel(): AxisTick {\n        return new TimeAxisTick(this);\n    }\n\n    protected _adjustMinMax(min: number, max: number): { min: number; max: number; } {\n        const v = super._adjustMinMax(min, max);\n        return v;\n    }\n\n    protected _doBuildTicks(min: number, max: number, length: number): IAxisTick[] {\n        const ticks = super._doBuildTicks(min, max, length);\n\n        ticks.forEach((tick, i) => {\n            tick.label = this.$_getLabel(tick.value, i);\n        })\n\n        return ticks;\n    }\n\n    parseValue(value: any): number {\n        if (!isNaN(value)) {\n            return +value;\n        } else if (isString(value)) {\n            return new Date(value).getTime();\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    date(value: number): Date {\n        return new Date(value);\n        // return this.utc ? new Date(value + this._offset) : new Date(value);\n    }\n\n    private $_getLabel(value: number, index: number): string {\n        const d = this.date(value);\n        let t: number;\n\n        switch ((this.tick as TimeAxisTick).scale) {\n            case TimeScale.YEAR:\n                return `${d.getFullYear()}`;\n            case TimeScale.MONTH:\n                if (index === 0 || d.getMonth() === 0) {\n                    return `${d.getFullYear()}-${pad2(d.getMonth() + 1)}`;\n                } else {\n                    return `${d.getMonth() + 1}`;\n                }      \n            case TimeScale.WEEK:\n            case TimeScale.DAY:\n                if (index === 0 || d.getDate() === 1) {\n                    return `${d.getMonth() + 1}-${pad2(d.getDate())}`;\n                } else {\n                    return `${d.getDate()}`;\n                }      \n            case TimeScale.HOUR:\n                if (index === 0 || d.getHours() === 0) {\n                    return `${d.getDate()} ${pad2(d.getHours())}:00`;\n                } else {\n                    return `${pad2(d.getHours())}:00`;\n                }\n            case TimeScale.MIN:\n                // TODO\n                return `${d.getMinutes()}`;\n            case TimeScale.SEC:\n                // TODO\n                return `${d.getSeconds()}`;\n            case TimeScale.MS:\n                return String(value);         \n        }\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// BarRangeSeries.ts\n// 2023. 07. 25. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum, pickProp, pickProp3 } from \"../../common/Common\";\nimport { DataPoint } from \"../DataPoint\";\nimport { RangedSeries } from \"../Series\";\n\nexport class BarRangeSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    low: any;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    lowValue: number;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    labelCount(): number {\n        return 2;\n    }\n\n    getLabel(index: number) {\n        return index === 1 ? this.lowValue : this.yValue;\n    }\n\n    protected _readArray(series: BarRangeSeries, v: any[]): void {\n        const d = v.length > 2 ? 1 : 0;\n\n        this.low = v[pickNum(series.lowField, 0 + d)];\n        this.y = v[pickNum(series.yField, 1 + d)];\n\n        if (d > 0) {\n            this.x = v[pickNum(series.xField, 0)];\n        } else {\n            this.x = this.index;\n        }\n    }\n\n    protected _readObject(series: BarRangeSeries, v: any): void {\n        super._readObject(series, v);\n\n        this.low = pickProp(v[series.lowField], v.low);\n        this.y = pickProp3(v[series.yField], v.y, v.value);\n    }\n\n    protected _readSingle(v: any): void {\n        super._readSingle(v);\n\n        this.low = this.y;\n    }\n\n    parse(series: BarRangeSeries): void {\n        super.parse(series);\n\n        this.lowValue = parseFloat(this.low);\n    }\n}\n\nexport class BarRangeSeries extends RangedSeries {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    lowField: string;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'barrange';\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new BarRangeSeriesPoint(source);\n    }\n\n    protected _getBottomValue(p: BarRangeSeriesPoint): number {\n        return p.lowValue;\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// BarSeries.ts\n// 2023. 06. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum } from \"../../common/Common\";\nimport { IAxis } from \"../Axis\";\nimport { DataPoint } from \"../DataPoint\";\nimport { BasedSeries, ClustrableSeriesGroup, IClusterable, Series, SeriesGroup, SeriesGroupLayout } from \"../Series\";\n\nexport class BarSeriesPoint extends DataPoint {\n    \n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    // borderRaidus: number;\n}\n\nexport class BarSeries extends BasedSeries {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    borderRaidus = 0;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'bar';\n    }\n\n    canCategorized(): boolean {\n        return true;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new BarSeriesPoint(source);\n    }\n\n    protected _getGroupBase(): number {\n        return this.group ? (this.group as BarSeriesGroup).baseValue: this.baseValue;\n    }\n}\n\nexport class BarSeriesGroup extends ClustrableSeriesGroup<BarSeries> implements IClusterable {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    baseValue = 0;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _seriesType(): string {\n        return 'bar';\n    }\n\n    protected _canContain(ser: Series): boolean {\n        return ser instanceof BarSeries;\n    }\n\n    clusterable(): boolean {\n        return true;\n    }\n\n    setCluster(width: number, pos: number): void {\n        this._clusterWidth = width;\n        this._clusterPos = pos;\n    }\n\n    getBaseValue(axis: IAxis): number {\n        return axis._isX ? NaN : pickNum(this.baseValue, axis.getBaseValue());\n    }\n\n    protected _doPrepareSeries(series: BarSeries[]): void {\n        if (this.layout === SeriesGroupLayout.DEFAULT) {\n            const sum = series.length > 1 ? series.map(ser => ser.pointWidth).reduce((a, c) => a + c, 0) : series[0].pointWidth;\n            let x = 0;\n            \n            series.forEach(ser => {\n                ser._childWidth = ser.pointWidth / sum;\n                ser._childPos = x;\n                x += ser._childWidth;\n            });\n        } else if (this.layout === SeriesGroupLayout.STACK) {\n        }\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// LineSeries.ts\n// 2023. 06. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum, pickProp } from \"../../common/Common\";\nimport { SVGStyleOrClass, StyleProps } from \"../../common/Types\";\nimport { Shape } from \"../../common/impl/SvgShape\";\nimport { IAxis } from \"../Axis\";\nimport { LineType } from \"../ChartTypes\";\nimport { DataPoint } from \"../DataPoint\";\nimport { MarerVisibility, Series, SeriesGroup, SeriesMarker } from \"../Series\";\n\nexport class LineSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    radius: number;\n    shape: Shape;\n}\n\nexport class LineSeriesMarker extends SeriesMarker {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    radius = 4;\n    /**\n     * baseValue 보다 작은 값을 가진 point를 그릴 때 추가로 적용되는 style.\n     */\n    // private _negativeStyles: StyleProps;\n    /**\n     * 첫번째 point의 marker 표시 여부.\n     */\n    firstVisible = MarerVisibility.DEFAULT;\n    /**\n     * 첫번째 point의 marker 표시 여부.\n     */\n    lastVisible = MarerVisibility.DEFAULT;\n    /**\n     * 최소값 point들의 marker 표시 여부.\n     */\n    minVisible = MarerVisibility.DEFAULT;\n    /**\n     * 최대값 point들의 marker 표시 여부.\n     */\n    maxVisible = MarerVisibility.DEFAULT;\n}\n\nexport abstract class LineSeriesBase extends Series {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    marker = new LineSeriesMarker(this);\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * null인 y값을 {@link baseValue}로 간주한다.\n     */\n    nullAsBase = false;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _createPoint(source: any): DataPoint {\n        return new LineSeriesPoint(source);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    abstract getLineType(): LineType;\n}\n\nexport enum LineStepDirection {\n    FORWARD = 'forward',\n    BACKWARD = 'backward'\n}\n\nexport class LineSeries extends LineSeriesBase {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    lineType = LineType.DEFAULT;\n    stepDir = LineStepDirection.FORWARD;\n\n    connectNulls = false;\n    /**\n     * 위/아래 구분의 기준이 되는 값.\n     * <br>\n     */\n    baseValue = 0;\n    /**\n     * {@link baseValue} 혹은 y축의 baseValue보다 작은 쪽의 선들에 적용되는 스타일.\n     */\n    belowStyle: SVGStyleOrClass;\n\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'line';\n        \n    }\n    getLineType(): LineType {\n        return this.lineType;\n    }\n}\n\nexport class AreaSeriesPoint extends LineSeriesPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    yLow: number;\n}\n\nexport class AreaSeries extends LineSeries {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _base: number;\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    areaStyle: StyleProps;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'area';\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new AreaSeriesPoint(source);\n    }\n\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        this._base = pickNum(this.baseValue, this._yAxisObj.getBaseValue());\n    }\n\n    getBaseValue(axis: IAxis): number {\n        return this._base;\n    }\n}\n\nexport class AreaRangeSeriesPoint extends AreaSeriesPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    low: any;\n    high: any;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    lowValue: number;\n    highValue: number;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    parse(series: AreaRangeSeries): void {\n        super.parse(series);\n\n        this.y = this.high = pickProp(this.high, this.low);\n        this.lowValue = parseFloat(this.low);\n        this.highValue = this.yValue = parseFloat(this.high);\n    }\n\n    protected _readArray(series: AreaRangeSeries, v: any[]): void {\n        const d = v.length > 2 ? 1 : 0;\n\n        this.low = v[pickNum(series.lowField, 0 + d)];\n        this.high = v[pickNum(series.highField, 1 + d)];\n\n        if (d > 0) {\n            this.x = v[pickNum(series.xField, 0)];\n        } else {\n            this.x = this.index;\n        }\n    }\n\n    protected _readObject(series: AreaRangeSeries, v: any): void {\n        super._readObject(series, v);\n\n        this.low = pickProp(v[series.lowField], v.low);\n        this.high = pickProp(v[series.lowField], v.high);\n    }\n\n    protected _readSingle(v: any): void {\n        super._readSingle(v);\n\n        this.low = this.y;\n    }\n}\n\nexport class AreaRangeSeries extends LineSeriesBase {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    lowField: string;\n    highField: string;\n    areaStyle: StyleProps;\n    /**\n     * true면 spline 곡선으로 표시한다.\n     * <br>\n     * \n     * @default false\n     */\n    curved = false;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'arearange';\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new AreaRangeSeriesPoint(source);\n    }\n\n    getLineType(): LineType {\n        return this.curved ? LineType.SPLINE : LineType.DEFAULT;\n    }\n\n    collectValues(axis: IAxis, vals: number[]): void {\n        super.collectValues(axis, vals);\n\n        if (vals && axis === this._yAxisObj) {\n            this._visPoints.forEach((p: AreaRangeSeriesPoint) => vals.push(p.lowValue));\n        }\n    }\n}\n\nexport class LineSeriesGroup extends SeriesGroup<LineSeries> {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    baseValue = 0;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _seriesType(): string {\n        return 'line';\n    }\n\n    protected _canContain(ser: Series): boolean {\n        return ser instanceof LineSeries;\n    }\n\n    getBaseValue(axis: IAxis): number {\n        return axis === this._yAxisObj ? pickNum(this.baseValue, axis.getBaseValue()) : NaN;\n    }\n}\n\nexport class AreaSeriesGroup extends SeriesGroup<AreaSeries> {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    baseValue = 0;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _seriesType(): string {\n        return 'area';\n    }\n\n    protected _canContain(ser: Series): boolean {\n        return ser instanceof AreaSeries;\n    }\n\n    getBaseValue(axis: IAxis): number {\n        return axis === this._yAxisObj ? pickNum(this.baseValue, axis.getBaseValue()) : NaN;\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// HitstogramSeries.ts\n// 2023. 07. 22. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { LineType } from \"../ChartTypes\";\nimport { DataPoint } from \"../DataPoint\";\nimport { Series } from \"../Series\";\nimport { LineSeriesBase, LineSeriesPoint } from \"./LineSeries\";\n\nexport class BellCurveSeriesPoint extends LineSeriesPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n}\n\n/**\n */\nexport class BellCurveSeries extends LineSeriesBase {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    refSeries: string;\n    sigmas = 3;\n    pointsInSigma = 5;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'bellcurve';\n    }\n\n    // ignoreAxisBase(axis: IAxis): boolean {\n    //     return axis === this._xAxisObj;\n    // }\n\n    getLineType(): LineType {\n        return LineType.SPLINE;\n    }\n\n    createPoints(source: any[]): DataPoint[] {\n        const pts = super.createPoints(source);\n\n        if (pts && pts.length > 0) {\n            return this.$_loadTable(pts);\n        }      \n        return []; \n    }\n\n    _referOtherSeries(series: Series): boolean {\n        if (!this._points.isEmpty()) return true;\n        if (series.name === this.refSeries) {\n            this.$_loadTable(series.getPoints().getVisibles());\n            return true;\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_loadTable(pts: DataPoint[]): BellCurveSeriesPoint[] {\n        const vals = pts.map(p => p.yValue).filter(v => !isNaN(v));\n        const len = vals.length;\n\n        if (len < 1) {\n            return;\n        }\n\n        const sum = vals.reduce((a, c) => a + c, 0);\n        const mean = sum / len;\n        const stdv = Math.sqrt(vals.reduce((a, c) => a + Math.pow(c - mean, 2)) / (len - 1));\n        const step = stdv / this.pointsInSigma;\n        const min = mean - this.sigmas * stdv;\n        const max = mean + this.sigmas * stdv;\n        let sigma = mean;\n\n        pts = [];\n\n        pts.push(this.$_getDenstiy(mean, stdv, sigma));\n        while (sigma > min) {\n            sigma -= step;\n            pts.unshift(this.$_getDenstiy(mean, stdv, sigma));\n        }\n        sigma = mean;\n        while (sigma < max) {\n            sigma += step;\n            pts.push(this.$_getDenstiy(mean, stdv, sigma));\n        }\n\n        pts.forEach((p, i) => {\n            p.index = i;\n            p.x = p.source.x;\n            p.y = p.source.y;\n            p.yGroup = p.y;\n        })\n        return pts as BellCurveSeriesPoint[];\n    }\n\n    private $_getDenstiy(mean: number, stdv: number, sigma: number): BellCurveSeriesPoint {\n        const dist = sigma - mean;\n        const y = Math.exp(-(dist * dist) / (2 * stdv * stdv)) / (stdv * Math.sqrt(2 * Math.PI));\n\n        return new BellCurveSeriesPoint({\n            x: sigma, \n            y: y\n        });\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// BoxPlotSeries.ts\n// 2023. 06. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum, pickProp, pickProp3 } from \"../../common/Common\";\nimport { DataPoint } from \"../DataPoint\";\nimport { RangedSeries } from \"../Series\";\n\nexport class BoxPlotSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    min: any;\n    low: any;    // first quartile(q1, 25th percentile)\n    mid: any;    // median (q2, 50th percentile)\n    high: any;   // third quartile (q3 75th percentile)\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    minValue: number;\n    lowValue: number;\n    midValue: number;\n    highValue: number;\n\n    lowPos: number;\n    midPos: number;\n    highPos: number;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    // getInside(): IRect {\n    //     return { x: 0, y: 0, width: this.width, height: this.height };\n    // }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    labelCount(): number {\n        return 2;\n    }\n\n    getLabel(index: number) {\n        return index === 0 ? this.yValue : this.minValue;\n    }\n\n    protected _readArray(series: BoxPlotSeries, v: any[]): void {\n        const d = v.length > 5 ? 1 : 0;\n\n        this.min = v[pickNum(series.minField, 0 + d)];\n        this.low = v[pickNum(series.lowField, 1 + d)];\n        this.mid = v[pickNum(series.midField, 2 + d)];\n        this.high = v[pickNum(series.highField, 3 + d)];\n        this.y = v[pickNum(series.yField, 4 + d)];\n\n        if (d > 0) {\n            this.x = v[pickNum(series.xField, 0)];\n        } else {\n            this.x = this.index;\n        }\n    }\n\n    protected _readObject(series: BoxPlotSeries, v: any): void {\n        super._readObject(series, v);\n\n        this.min = pickProp(v[series.minField], v.min);\n        this.low = pickProp(v[series.lowField], v.low);\n        this.mid = pickProp(v[series.midField], v.mid);\n        this.high = pickProp(v[series.highField], v.high);\n        this.y = pickProp3(v[series.yField], v.y, v.value);\n    }\n\n    protected _readSingle(v: any): void {\n        super._readSingle(v);\n\n        this.min = this.low = this.mid = this.high = this.y;\n    }\n\n    parse(series: BoxPlotSeries): void {\n        super.parse(series);\n\n        this.minValue = parseFloat(this.min);\n        this.lowValue = parseFloat(this.low);\n        this.midValue = parseFloat(this.mid);\n        this.highValue = parseFloat(this.high);\n\n        this.isNull ||= isNaN(this.minValue) || isNaN(this.lowValue) || isNaN(this.midValue) || isNaN(this.highValue);\n    }\n}\n\n/**\n * https://en.wikipedia.org/wiki/Box_plot\n * https://danbi-ncsoft.github.io/study/2018/07/23/study_eda2.html\n */\nexport class BoxPlotSeries extends RangedSeries {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    minField: string;\n    lowField: string;\n    midField: string;\n    highField: string;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'boxplot';\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new BoxPlotSeriesPoint(source);\n    }\n\n    protected _getBottomValue(p: BoxPlotSeriesPoint): number {\n        return p.minValue;\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// BubbleSeries.ts\n// 2023. 06. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum, pickProp } from \"../../common/Common\";\nimport { IPercentSize, RtPercentSize, calcPercent, parsePercentSize } from \"../../common/Types\";\nimport { Shape } from \"../../common/impl/SvgShape\";\nimport { IAxis } from \"../Axis\";\nimport { IChart } from \"../Chart\";\nimport { DataPoint } from \"../DataPoint\";\nimport { Series, SeriesMarker } from \"../Series\";\n\nexport class BubbleSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    z: any;\n    radius: number;\n    shape: Shape;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    zValue: number;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    getLabel(index: number) {\n        return this.z;\n    }\n\n    parse(series: BubbleSeries): void {\n        super.parse(series);\n\n        this.zValue = parseFloat(this.z);\n    }\n\n    protected _readArray(series: BubbleSeries, v: any[]): void {\n        const d = v.length > 2 ? 1 : 0;\n\n        this.y = v[pickNum(series.yField, 0 + d)];\n        this.z = v[pickNum(series.zProp, 1 + d)];\n\n        if (d > 0) {\n            this.x = v[pickNum(series.xField, 0)];\n        } else {\n            this.x = this.index;\n        }\n    }\n\n    protected _readObject(series: BubbleSeries, v: any): void {\n        super._readObject(series, v);\n\n        this.z = pickProp(v[series.zProp], v.z);\n    }\n\n    protected _readSingle(v: any): void {\n        super._readSingle(v);\n\n        this.z = this.y;\n    }\n}\n\nexport class BubbleSeriesMarker extends SeriesMarker {\n}\n\nexport enum BubbleSizeMode {\n\n    WIDTH = 'width',\n    AREA = 'area'\n}\n\nexport class BubbleSeries extends Series {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    zProp: string;\n    sizeMode = BubbleSizeMode.AREA;\n    minSize: RtPercentSize = 8;\n    maxSize: RtPercentSize = '20%';\n    colorByPoint = false;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _minDim: IPercentSize;\n    private _maxDim: IPercentSize;\n\n    marker: BubbleSeriesMarker;\n    _zMin: number;\n    _zMax: number;\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart, name?: string) {\n        super(chart, name);\n\n        this.marker = new BubbleSeriesMarker(this);\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getPxMinMax(len: number): {min: number, max: number} {\n        return {\n            min: calcPercent(this._minDim, len),\n            max: calcPercent(this._maxDim, len)\n        };\n    }\n\n    getRadius(value: number, pxMin: number, pxMax: number): number {\n        let r = (value - this._zMin) / (this._zMax - this._zMin);\n\n        if (this.sizeMode == BubbleSizeMode.AREA) {\n            r = Math.sqrt(r);\n        }\n        r = Math.ceil(pxMin + r * (pxMax - pxMin)) / 2;\n\n        return r;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'bubble';\n    }\n\n    ignoreAxisBase(axis: IAxis): boolean {\n        return true;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new BubbleSeriesPoint(source);\n    }\n\n    protected _colorByPoint(): boolean {\n        return this.colorByPoint;\n    }\n\n    load(src: any): BubbleSeries {\n        super.load(src);\n\n        this._minDim = parsePercentSize(this.minSize, true);\n        this._maxDim = parsePercentSize(this.maxSize, true);\n        return this;\n    }\n\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        this._zMin = Number.MAX_VALUE;\n        this._zMax = Number.MIN_VALUE;\n\n        this._visPoints.forEach((p: BubbleSeriesPoint) => {\n            this._zMin = Math.min(this._zMin, p.zValue);\n            this._zMax = Math.max(this._zMax, p.zValue);\n        })\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// BumpSeriesGroup.ts\n// 2023. 07. 31. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { Utils } from \"../../common/Utils\";\nimport { DataPoint } from \"../DataPoint\";\nimport { ConstraintSeriesGroup, Series } from \"../Series\";\nimport { LineSeries } from \"./LineSeries\";\n\n/**\n * 포함된 시리즈들의 y값들을 비교해서 순위로 시리즈를 표시한다.\n * <br>\n * 포함된 시리즈들의 x값이 동일한 data point y값들을 비교해서 순위를 yValue로 재설정한다.\n */\nexport class BumpSeriesGroup extends ConstraintSeriesGroup<LineSeries> {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'bump';\n    }\n\n    _seriesType(): string {\n        return 'line';\n    }\n\n    protected _canContain(ser: Series): boolean {\n        return ser instanceof LineSeries;\n    }\n\n    protected _doConstraintYValues(series: Series[]): number[] {\n        const map: {[key: number]: DataPoint[]} = {};\n\n        series.forEach(ser => {\n            ser._visPoints.forEach(p => {\n                const x = p.xValue;\n                let pts = map[x];\n\n                if (pts) {\n                    pts.push(p);\n                } else {\n                    map[x] = [p];\n                }\n            });\n        });\n\n        for (const x in map) {\n            const pts = map[x].sort((p1, p2) => p1.yValue - p2.yValue);\n\n            for (let i = pts.length - 1; i >= 0; i--) {\n                pts[i].yValue = pts[i].yGroup = i;\n            }\n        }\n        return Utils.makeIntArray(0, series.length);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}","////////////////////////////////////////////////////////////////////////////////\n// CandlestickSeries.ts\n// 2023. 07. 29. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum, pickProp } from \"../../common/Common\";\nimport { DataPoint } from \"../DataPoint\";\nimport { RangedSeries } from \"../Series\";\n\n/**\n * [low, open, close, high]\n * [x, low, open, close, high]\n */\nexport class CandlestickSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    low: any;\n    close: any;\n    open: any;\n    high: any;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    lowValue: number;\n    closeValue: number;\n    openValue: number;\n    highValue: number;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    parse(series: CandlestickSeries): void {\n        super.parse(series);\n\n        this.lowValue = parseFloat(this.low);\n        this.openValue = parseFloat(this.open);\n        this.closeValue = parseFloat(this.close);\n        this.highValue = parseFloat(this.high);\n\n        this.isNull ||= isNaN(this.lowValue) || isNaN(this.openValue) || isNaN(this.closeValue);\n    }\n\n    protected _readArray(series: CandlestickSeries, v: any[]): void {\n        const d = v.length > 4 ? 1 : 0;\n\n        this.low = v[pickNum(series.lowField, 0 + d)];\n        this.open = v[pickNum(series.openField, 1 + d)];\n        this.close = v[pickNum(series.closeField, 2 + d)];\n        this.y = this.high = v[pickNum(series.highField, 3 + d)];\n\n        if (d > 0) {\n            this.x = v[pickNum(series.xField, 0)];\n        } else {\n            this.x = this.index;\n        }\n    }\n\n    protected _readObject(series: CandlestickSeries, v: any): void {\n        super._readObject(series, v);\n\n        this.low = pickProp(v[series.lowField], v.row);\n        this.open = pickProp(v[series.openField], v.open);\n        this.close = pickProp(v[series.closeField], v.close);\n        this.high = pickProp(v[series.highField], v.high);\n        if (!isNaN(this.high)) this.y = this.high;\n        else if (!isNaN(this.y)) this.high = this.y;\n    }\n\n    protected _readSingle(v: any): void {\n        super._readSingle(v);\n\n        this.low = this.close = this.open = this.high = this.y;\n    }\n}\n\nexport class CandlestickSeries extends RangedSeries {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    lowField: string;\n    openField: string;\n    closeField: string;\n    highField: string;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'candlestick';\n    }\n\n    canCategorized(): boolean {\n        return true;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new CandlestickSeriesPoint(source);\n    }\n\n    protected _getBottomValue(p: CandlestickSeriesPoint): number {\n        return p.lowValue;\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// DumbbellSeries.ts\n// 2023. 08. 01. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum, pickProp, pickProp3 } from \"../../common/Common\";\nimport { Shape } from \"../../common/impl/SvgShape\";\nimport { IAxis } from \"../Axis\";\nimport { DataPoint } from \"../DataPoint\";\nimport { ClusterableSeries, SeriesMarker } from \"../Series\";\n\nexport class DumbbellSeriesMarker extends SeriesMarker {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    radius = 4;\n    shape = Shape.CIRCLE;\n}\n\nexport class DumbbellSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    low: any;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    lowValue: number;\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    hPoint: number;\n    radius: number;\n    shape: Shape;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    labelCount(): number {\n        return 2;\n    }\n\n    getLabel(index: number) {\n        return index === 0 ? this.lowValue : this.yValue;\n    }\n\n    protected _readArray(series: DumbbellSeries, v: any[]): void {\n        const d = v.length > 2 ? 1 : 0;\n\n        this.low = v[pickNum(series.lowField, 0 + d)];\n        this.y = v[pickNum(series.yField, 1 + d)];\n\n        if (d > 0) {\n            this.x = v[pickNum(series.xField, 0)];\n        } else {\n            this.x = this.index;\n        }\n    }\n\n    protected _readObject(series: DumbbellSeries, v: any): void {\n        super._readObject(series, v);\n\n        this.low = pickProp(v[series.lowField], v.low);\n        this.y = pickProp3(v[series.yField], v.y, v.value);\n    }\n\n    protected _readSingle(v: any): void {\n        super._readSingle(v);\n\n        this.low = this.y;\n    }\n\n    parse(series: DumbbellSeries): void {\n        super.parse(series);\n\n        this.lowValue = parseFloat(this.low);\n    }\n}\n\n/**\n * BarRange 시리즈 변종.\n */\nexport class DumbbellSeries extends ClusterableSeries {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    marker = new DumbbellSeriesMarker(this);\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    lowField: string;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'dumbbell';\n    }\n\n    canCategorized(): boolean {\n        return true;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new DumbbellSeriesPoint(source);\n    }\n\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        const radius = this.marker.radius;\n        const shape = this.marker.shape;\n\n        this._visPoints.forEach((p: DumbbellSeriesPoint) => {\n            p.radius = radius;\n            p.shape = shape;\n        })\n    }\n\n    collectValues(axis: IAxis, vals: number[]): void {\n        super.collectValues(axis, vals);\n\n        if (vals && axis === this._yAxisObj) {\n            this._visPoints.forEach(p => {\n                const v = (p as DumbbellSeriesPoint).lowValue\n                !isNaN(v) && vals.push(v);\n            });\n        }\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// EqualizerSeries.ts\n// 2023. 08. 01. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { IPercentSize, RtPercentSize, SVGStyleOrClass, calcPercent, parsePercentSize } from \"../../common/Types\";\nimport { DataPoint } from \"../DataPoint\";\nimport { BasedSeries } from \"../Series\";\n\nexport class EqualizerSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n}\n\n/**\n * Bar 시리즈 변종.\n */\nexport class EqualizerSeries extends BasedSeries {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _segmentDim: IPercentSize;\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    backStyle: SVGStyleOrClass;\n    maxCount: number;\n    segmentSize: RtPercentSize = 10;\n    segmentGap = 4;\n    segmented = false;\n    backSegments = false;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getSegmentSize(domain: number): number {\n        return calcPercent(this._segmentDim, domain);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'equalizer';\n    }\n\n    canCategorized(): boolean {\n        return true;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new EqualizerSeriesPoint(source);\n    }\n\n    protected _doLoad(src: any): void {\n        super._doLoad(src);\n\n        this._segmentDim = parsePercentSize(this.segmentSize, false);\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// ErrorBarSeries.ts\n// 2023. 07. 31. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum, pickProp, pickProp3 } from \"../../common/Common\";\nimport { IAxis } from \"../Axis\";\nimport { DataPoint } from \"../DataPoint\";\nimport { ClusterableSeries, RangedSeries } from \"../Series\";\n\nexport class ErrorBarSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    low: any;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    lowValue: number;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    labelCount(): number {\n        return 2;\n    }\n\n    getLabel(index: number) {\n        return index === 1 ? this.lowValue : this.yValue;\n    }\n\n    protected _readArray(series: ErrorBarSeries, v: any[]): void {\n        const d = v.length > 2 ? 1 : 0;\n\n        this.low = v[pickNum(series.lowField, 0 + d)];\n        this.y = v[pickNum(series.yField, 1 + d)];\n\n        if (d > 0) {\n            this.x = v[pickNum(series.xField, 0)];\n        } else {\n            this.x = this.index;\n        }\n    }\n\n    protected _readObject(series: ErrorBarSeries, v: any): void {\n        super._readObject(series, v);\n\n        this.low = pickProp(v[series.lowField], v.low);\n        this.y = pickProp3(v[series.yField], v.y, v.value);\n    }\n\n    protected _readSingle(v: any): void {\n        super._readSingle(v);\n\n        this.low = this.y;\n    }\n\n    parse(series: ErrorBarSeries): void {\n        super.parse(series);\n\n        this.lowValue = parseFloat(this.low);\n        this.isNull ||= isNaN(this.lowValue);\n    }\n}\n\nexport class ErrorBarSeries extends RangedSeries {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    lowField: string;\n\n    pointPadding = 0.3;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'errorbar';\n    }\n\n    clusterable(): boolean {\n        return false;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new ErrorBarSeriesPoint(source);\n    }\n\n    protected _getBottomValue(p: ErrorBarSeriesPoint): number {\n        return p.lowValue;\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// FunnelSeries.ts\n// 2023. 07. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ISize } from \"../../common/Size\";\nimport { IPercentSize, SizeValue, calcPercent, fixnum, parsePercentSize2 } from \"../../common/Types\";\nimport { IChart } from \"../Chart\";\nimport { DataPoint } from \"../DataPoint\";\nimport { WidgetSeries } from \"../Series\";\n\nexport class FunnelSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    height: number;\n}\n\nexport class FunnelSeries extends WidgetSeries {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly DEF_WIDTH = '85%';\n    static readonly DEF_HEIGHT = '90%';\n    static readonly DEF_NECK_WIDTH = '30%';\n    static readonly DEF_NECK_HEIGHT = '25%';\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _widthDim: IPercentSize;\n    private _heightDim: IPercentSize;\n    private _neckWidthDim: IPercentSize;\n    private _neckHeightDim: IPercentSize;\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart, name?: string) {\n        super(chart, name);\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    width: SizeValue = FunnelSeries.DEF_WIDTH;\n    height: SizeValue = FunnelSeries.DEF_HEIGHT;\n    neckWidth: SizeValue = FunnelSeries.DEF_NECK_WIDTH;\n    neckHeight: SizeValue = FunnelSeries.DEF_NECK_WIDTH;\n    reversed = false;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getSize(plotWidth: number, plotHeight: number): ISize {\n        return {\n            width: calcPercent(this._widthDim, plotWidth),\n            height: calcPercent(this._heightDim, plotHeight)\n        };\n    }\n\n    getNeckSize(plotWidth: number, plotHeight: number): ISize{\n        return {\n            width: calcPercent(this._neckWidthDim, plotWidth),\n            height: calcPercent(this._neckHeightDim, plotHeight)\n        };\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'funnel';\n    }\n\n    protected _colorByPoint(): boolean {\n        return true;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new FunnelSeriesPoint(source);\n    }\n\n    load(src: any): FunnelSeries {\n        super.load(src);\n\n        this._widthDim = parsePercentSize2(this.width, FunnelSeries.DEF_WIDTH);\n        this._heightDim = parsePercentSize2(this.height, FunnelSeries.DEF_HEIGHT);\n        this._neckWidthDim = parsePercentSize2(this.neckWidth, FunnelSeries.DEF_NECK_WIDTH);\n        this._neckHeightDim = parsePercentSize2(this.neckHeight, FunnelSeries.DEF_NECK_HEIGHT);\n        return this;\n    }\n\n    // protected _doPrepareRender(): void {\n    //     super._doPrepareRender();\n\n    //     const pts = this._visPoints as FunnelSeriesPoint[];\n    //     let sum = 0;\n    //     let y = 0;\n\n    //     pts.forEach(p => {\n    //         sum += p.yValue;\n    //     });\n\n    //     const cnt = pts.length;\n    //     let i = 0;\n\n    //     for (; i < cnt - 1; i++) {\n    //         const p = pts[i];\n    //         const h = fixnum(p.yValue / sum);\n\n    //         p.yRate = h * 100;\n    //         p.yPos = y;\n    //         p.height = h;\n    //         y += h;\n    //     }\n    //     pts[i].yPos = y;\n    //     pts[i].height = 1 - y;\n    // }\n\n    prepareAfter(): void {\n        super.prepareAfter();\n\n        const pts = this._visPoints as FunnelSeriesPoint[];\n        let sum = 0;\n        let y = 0;\n\n        pts.forEach(p => {\n            sum += p.yValue;\n        });\n\n        const cnt = pts.length;\n        let i = 0;\n\n        for (; i < cnt - 1; i++) {\n            const p = pts[i];\n            const h = fixnum(p.yValue / sum);\n\n            p.yRate = h * 100;\n            p.yPos = y;\n            p.height = h;\n            y += h;\n        }\n        pts[i].yPos = y;\n        pts[i].height = 1 - y;\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// HeatmapSeries.ts\n// 2023. 08. 01. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum, pickProp } from \"../../common/Common\";\nimport { DataPoint } from \"../DataPoint\";\nimport { IPlottingItem, Series } from \"../Series\";\n\nexport class HeatmapSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    color: any;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    colorValue: number;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    parse(series: HeatmapSeries): void {\n        super.parse(series);\n\n        this.colorValue = parseFloat(this.color);\n    }\n\n    protected _readArray(series: HeatmapSeries, v: any[]): void {\n        const d = v.length > 2 ? 1 : 0;\n\n        this.y = v[pickNum(series.yField, 0 + d)];\n        this.color = v[pickNum(series.colorField, 1 + d)];\n\n        if (d > 0) {\n            this.x = v[pickNum(series.xField, 0)];\n        } else {\n            this.x = this.index;\n        }\n    }\n\n    protected _readObject(series: HeatmapSeries, v: any): void {\n        super._readObject(series, v);\n\n        this.color = pickProp(v[series.colorField], v.color);\n    }\n\n    protected _readSingle(v: any): void {\n        super._readSingle(v);\n    }\n\n    getLabel(index: number) {\n        return this.color;\n    }\n}\n\n/**\n * [셀 색상]\n * 1. color-axis가 연결되면 거기에서 색을 가져온다.\n * 2. series의 minColor, maxColor 사이의 색으로 가져온다.\n * 3. series의 기본 색상과 흰색 사이의 색으로 가져온다.\n */\nexport class HeatmapSeries extends Series {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    colorField: string;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _colorMin: number;\n    _colorMax: number;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getColor(value: number): string {\n        return;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'heatmap';\n    }\n\n    canMixWith(other: IPlottingItem): boolean {\n        return false;\n    }\n\n    canCategorized(): boolean {\n        return true;\n    }\n\n    defaultYAxisType(): string {\n        return 'category';\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new HeatmapSeriesPoint(source);\n    }\n\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        this._colorMin = Number.MAX_VALUE;\n        this._colorMax = Number.MIN_VALUE;\n\n        (this._visPoints as HeatmapSeriesPoint[]).forEach(p => {\n            this._colorMin = Math.min(this._colorMin, p.colorValue);\n            this._colorMax = Math.max(this._colorMax, p.colorValue);\n        })\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// HitstogramSeries.ts\n// 2023. 06. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isArray, isObject, pickNum, pickProp3 } from \"../../common/Common\";\nimport { IAxis } from \"../Axis\";\nimport { DataPoint } from \"../DataPoint\";\nimport { ISeries, Series } from \"../Series\";\n\nexport class HistogramSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    min: number;\n    max: number;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    parse(series: ISeries): void {\n        super.parse(series);\n\n        const v = this.source;\n\n        this.min = v.min;\n        this.max = v.max;\n    }\n}\n\nexport enum BinsNumber {\n    SQURE_ROOT = 'squreRoot',   // Squre-root choice\n    STURGES = 'struges',        // Sturges' formula\n    RICE = 'rice'               // Rice Rule\n}\n\n// https://en.wikipedia.org/wiki/Histogram\nconst binsNumberFunc = {\n    'squreRoot': function (length: number): number { \n        return Math.ceil(Math.sqrt(length)); \n    },\n    'struges': function (length: number): number { \n        return Math.ceil(Math.log(length) * Math.LOG2E);\n    },\n    'rice': function (length: number): number { \n        return Math.ceil(2 * Math.pow(length, 1 / 3));\n    },\n}\n\n/**\n * 각 bin은 하한값을 포함하고 상한값은 포함하지 않는다. 마지막 bin은 상한값을 포함한다.\n * https://en.wikipedia.org/wiki/Histogram\n * X축이 'linear'이어야 한다.\n */\nexport class HistogramSeries extends Series {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    minValue: number;\n    maxValue: number;\n    binsNumber: number | BinsNumber = BinsNumber.SQURE_ROOT;\n    binWidth: number;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _binInterval: number;\n    private _base: number;\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    baseValue = 0;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getBinCount(length: number): number {\n        const w = pickNum(this.binWidth, 0);\n        if (w > 0) {\n            return length / w;\n        }\n\n        const cnt = pickNum(this.binsNumber, 0);\n        if (cnt < 1) {\n            return binsNumberFunc[this.binsNumber || BinsNumber.SQURE_ROOT](length);\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'histogram';\n    }\n\n    ignoreAxisBase(axis: IAxis): boolean {\n        return axis === this._xAxisObj;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new HistogramSeriesPoint(source);\n    }\n\n    protected _doLoadPoints(src: any[]): void {\n\n        function getValue(v: any): number {\n            let y: any;\n\n            if (isArray(v)) {\n                y = v[pickNum(this.yField, 0)];\n            } else if (isObject(v)) {\n                y = pickProp3(v[this.yField], v.y, v.value);\n            } else {\n                y = v;\n            }\n            return parseFloat(y);\n        }\n\n        const pts = [];\n        let sample: number[ ] = [];\n\n        for (let i = 0; i < src.length; i++) {\n            const v = getValue(src[i]);\n\n            if (!isNaN(v)) {\n                sample.push(v);\n            }\n        }\n\n        if (sample.length > 0) {\n            sample = sample.sort((v1, v2) => v1 - v2);\n            if (this.minValue < sample[0]) {\n                sample.unshift(this.minValue);\n            }\n            if (this.maxValue > sample[sample.length - 1]) {\n                sample.push(this.maxValue);\n            }\n\n            const len = sample.length;\n            const min = sample[0];\n            const max = sample[len - 1];\n            const count = this.getBinCount(len);//max - min);\n            const interval = this._binInterval = (max - min) / count;\n            let n = 0;\n            let x = min;\n            let x2 = x + interval;\n\n            for (let i = 0; i < count; i++) {\n                let f = 0;\n\n                if (i == count - 1) {\n                    f = len - n;\n                } else {\n                    while (n < len && (sample[n] < x2)) {\n                        f++;\n                        n++;\n                    }\n                }\n\n                pts.push({\n                    x: x,\n                    y: f,\n                    min: x,\n                    max: (i === count - 1) ? max : x2 \n                })\n\n                x = x2;\n                x2 = x + interval;\n            }\n        }\n        super._doLoadPoints(pts);\n    }\n\n    collectValues(axis: IAxis, vals: number[]): void {\n        super.collectValues(axis, vals);\n\n        if (vals) {\n            // point.x가 point.min과 같은 값이므로 축 범위에 마지막 bin의 max가 포함되어야 한다.\n            if (axis === this._xAxisObj) {\n                vals.push((this._visPoints[this._visPoints.length - 1] as HistogramSeriesPoint).max);\n            } else if (axis === this._yAxisObj) {\n                vals.push(this._base);\n            }\n        }\n    }\n\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        this._base = pickNum(this.baseValue, this._yAxisObj.getBaseValue());\n    }\n\n    getBaseValue(axis: IAxis): number {\n        return axis === this._yAxisObj ? this._base : NaN;\n    }\n\n}","////////////////////////////////////////////////////////////////////////////////\n// LollipopSeries.ts\n// 2023. 07. 31. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { Shape } from \"../../common/impl/SvgShape\";\nimport { DataPoint } from \"../DataPoint\";\nimport { BasedSeries, ClusterableSeries, SeriesMarker } from \"../Series\";\n\nexport class LollipopSeriesMarker extends SeriesMarker {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    radius = 4;\n    shape = Shape.CIRCLE;\n}\n\nexport class LollipopSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    radius: number;\n    shape: Shape;\n}\n\n/**\n * Bar 시리즈 변종.\n */\nexport class LollipopSeries extends BasedSeries {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    marker = new LollipopSeriesMarker(this);\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'lollipop';\n    }\n\n    canCategorized(): boolean {\n        return true;\n    }\n\n    getLabelOff(off: number): number {\n        return off + this.marker.radius;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new LollipopSeriesPoint(source);\n    }\n\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        const radius = this.marker.radius;\n        const shape = this.marker.shape;\n\n        this._visPoints.forEach((p: LollipopSeriesPoint) => {\n            p.radius = radius;\n            p.shape = shape;\n        })\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// OhlcSeries.ts\n// 2023. 08. 08. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { DataPoint } from \"../DataPoint\";\nimport { CandlestickSeries, CandlestickSeriesPoint } from \"./CandlestickSeries\";\n\n/**\n * Low/Open/Close/High 네 값을 수직선(low-high)과 \n * 왼쪽(open), 오른쪽(close) 수평 선분으로 표시한다.<br>\n * close가 open보다 큰 경와 작은 경우를 다른 색으로 표시할 수 있다.<br>\n * 일정 기간 동안 한 값의 대체적인 변화를 표시한다.\n *\n * [low, open, close, high]\n * [x, low, open, close, high]\n */\nexport class OhlcSeriesPoint extends CandlestickSeriesPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n}\n\nexport class OhlcSeries extends CandlestickSeries {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'ohlc';\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new OhlcSeriesPoint(source);\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// HitstogramSeries.ts\n// 2023. 08. 03. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum } from \"../../common/Common\";\nimport { Axis, IAxis } from \"../Axis\";\nimport { LineType } from \"../ChartTypes\";\nimport { DataPoint } from \"../DataPoint\";\nimport { ISeries, Series } from \"../Series\";\nimport { LineSeriesBase } from \"./LineSeries\";\n\nexport class ParetoSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    parse(series: ISeries): void {\n        super.parse(series);\n\n        this.xValue = this.x;\n        this.yValue = this.y;\n    }\n}\n\n/**\n * 참조하는 원본 시리즈의 누적 비율을 표시한다.\n * <br>\n */\nexport class ParetoSeries extends LineSeriesBase {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    /**\n     * 이 시리즈 data point들을 구성할 수 있는 데이터를 포함한 원본 시리즈.\n     * <br>\n     * 시리즈 이름이나 index로 지정한다.\n     */\n    source: string | number;\n    /**\n     * true면 spline 곡선으로 표시한다.\n     * <br>\n     * \n     * @default false\n     */\n    curved = false;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'pareto';\n    }\n\n    getLineType(): LineType {\n        return this.curved ? LineType.SPLINE : LineType.DEFAULT;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new ParetoSeriesPoint(source);\n    }\n\n    _referOtherSeries(series: Series): boolean {\n        if (series.name === this.source || series.index === this.source) {\n            series.referBy(this);\n            return true;\n        }\n    }\n\n    reference(other: Series, axis: IAxis): void {\n        if (!axis._isX) {\n            this.$_loadPoints(other._visPoints);\n            this.collectValues(this._xAxisObj, (this._xAxisObj as Axis)._values);\n            this.collectValues(this._yAxisObj, (this._yAxisObj as Axis)._values);\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_loadPoints(pts: DataPoint[]): void {\n        const list = [];\n        const sum = pts.reduce((a, c) => a + pickNum(c.yValue, 0), 0);\n        let acc = 0;\n\n        pts.forEach(p => {\n            if (!p.isNull) {\n                list.push({\n                    x: p.xValue, \n                    y: acc += p.yValue * 100 / sum\n                });\n            }\n        })\n\n        this._doLoadPoints(list);\n        this._visPoints = this._points.getVisibles();\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// PieSeries.ts\n// 2023. 06. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum } from \"../../common/Common\";\nimport { IPercentSize, RtPercentSize, calcPercent, parsePercentSize } from \"../../common/Types\";\nimport { DataPoint } from \"../DataPoint\";\nimport { ILegendSource } from \"../Legend\";\nimport { ISeries, PointItemPosition, RadialSeries, Series, SeriesGroup, SeriesGroupLayout } from \"../Series\";\n\nexport class PieSeriesPoint extends DataPoint implements ILegendSource {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    sliced = false;\n    startAngle = 0;\n    angle = 0;\n    borderRaidus: number;\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get endAngle(): number {\n        return this.startAngle + this.angle;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    legendColor(): string {\n        return this.color;\n    }\n\n    legendLabel(): string {\n        return this.x;\n    }\n\n    legendVisible(): boolean {\n        return this.visible;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    parse(series: ISeries): void {\n        super.parse(series);\n\n        this.sliced = this.source.sliced;\n    }\n}\n\nexport class PieSeries extends RadialSeries {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _innerDim: IPercentSize;\n    private _sliceDim: IPercentSize;\n    _groupPos: number;\n    _groupSize: number;\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    groupSize = 1;\n    /**\n     * 0보다 큰 값을 지정해서 도넛 형태로 표시할 수 있다.\n     */\n    innerSize: RtPercentSize = 0;\n    sliceOffset: RtPercentSize = '7%';\n    labelDistance = 25;\n    /**\n     * true이면 섹터 하나만 마우스 클릭으로 sliced 상태가 될 수 있다.\n     * Point의 sliced 속성을 직접 지정하는 경우에는 이 속성이 무시된다.\n     */\n    exclusive = true;\n    /**\n     * Slice animation duration.\n     * 밀리세컨드 단위로 지정.\n     * @default 300ms.\n     */\n    sliceDuration = 300;\n    borderRadius = 0;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getInnerRadius(rd: number): number {\n        // 반지름에 대한 비율로 전달해야 한다.\n        const dim = this._innerDim;\n        return dim ? dim.size / (dim.fixed ? rd : 100) : 0;\n    }\n\n    getSliceOffset(rd: number): number {\n        return this._sliceDim ? calcPercent(this._sliceDim, rd) : 0;\n    }\n\n    getLabelPosition(): PointItemPosition {\n        const p = this.pointLabel.position;\n        return p === PointItemPosition.AUTO ? PointItemPosition.INSIDE : p;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'pie';\n    }\n\n    protected _colorByPoint(): boolean {\n        return true;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new PieSeriesPoint(source);\n    }\n\n    getLegendSources(list: ILegendSource[]): void {\n        this._visPoints.forEach(p => {\n            list.push(p as PieSeriesPoint);\n        })        \n    }\n\n    protected _doLoad(src: any): void {\n        super._doLoad(src);\n\n        this._innerDim = parsePercentSize(this.innerSize, true);\n        this._sliceDim = parsePercentSize(this.sliceOffset, true);\n    }\n\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        // group에서 필요하면 설정한다. 이 값의 여부로 pieseriesview에서 stacking 상태인 지 확인한다.\n        this._groupPos = NaN; \n    }\n}\n\nexport class PieSeriesGroup extends SeriesGroup<PieSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _polarDim: IPercentSize;\n    private _innerDim: IPercentSize;\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * polar 그룹일 때 원형 플롯 영역의 크기.\n     * <br>\n     * 픽셀 크기나 차지할 수 있는 전체 크기에 대한 상대적 크기로 지정할 수 있다.\n     * <br>\n     * Pie 시리즈들의 그룹이고, \n     * {@link layout}이 {@link SeriesGroupLayout.FILL}이나 {@link SeriesGroupLayout.STACK}인 경우\n     * 개별 시리즈의 size 대신 이 속성값으로 표시되고,\n     * 각 시리즈의 size는 상대 크기로 적용된다.\n     */\n    polarSize: RtPercentSize = '80%';\n    /**\n     * Pie 시리즈들의 그룹이고, \n     * {@link layout}이 {@link SeriesGroupLayout.FILL}이나 {@link SeriesGroupLayout.STACK}인 경우,\n     * 경우 0보다 큰 값을 지정해서 도넛 형태로 표시할 수 있다.\n     * <br>\n     * 포함된 pie 시리즈들의 innerSize는 무시된다.\n     */\n    innerSize: RtPercentSize = 0;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getPolarSize(width: number, height: number): number {\n        return calcPercent(this._polarDim, Math.min(width, height));\n    }\n\n    getInnerRadius(rd: number): number {\n        // 반지름에 대한 비율로 전달해야 한다.\n        const dim = this._innerDim;\n        return dim ? dim.size / (dim.fixed ? rd : 100) : 0;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _seriesType(): string {\n        return 'pie';\n    }\n\n    needAxes(): boolean {\n        return false;\n    }\n\n    protected _canContain(ser: Series): boolean {\n        return ser instanceof PieSeries;\n    }\n\n    protected _doLoad(source: any): void {\n        super._doLoad(source);\n\n        this._polarDim = parsePercentSize(this.polarSize, true) || { size: 80, fixed: false };\n        this._innerDim = parsePercentSize(this.innerSize, true);\n    }\n\n    protected _doPrepareSeries(series: PieSeries[]): void {\n        if (this.layout === SeriesGroupLayout.STACK || this.layout === SeriesGroupLayout.FILL) {\n            const sum = series.map(ser => (ser as PieSeries).groupSize).reduce((a, c) => a + pickNum(c, 1), 0);\n            let p = 0;\n            \n            series.forEach((ser: PieSeries) => {\n                ser._groupPos = p;\n                p += ser._groupSize = pickNum(ser.groupSize, 1) / sum;\n            });\n        }\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// ScatterSeries.ts\n// 2023. 06. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { IAxis } from \"../Axis\";\nimport { IChart } from \"../Chart\";\nimport { DataPoint } from \"../DataPoint\";\nimport { Series, SeriesMarker } from \"../Series\";\n\nexport class ScatterSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n}\n\nexport class ScatterSeriesMarker extends SeriesMarker {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    radius = 5;\n}\n\nexport class ScatterSeries extends Series {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    marker: ScatterSeriesMarker;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart, name?: string) {\n        super(chart, name);\n\n        this.marker = new ScatterSeriesMarker(this);\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * https://thomasleeper.com/Rcourse/Tutorials/jitter.html\n     */\n    jitterX = 0;\n    jitterY = 0;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'scatter';\n    }\n\n    ignoreAxisBase(axis: IAxis): boolean {\n        return true;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new ScatterSeriesPoint(source);\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// TreemapSeries.ts\n// 2023. 08. 01. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { Color } from \"../../common/Color\";\nimport { toStr } from \"../../common/Types\";\nimport { DataPoint } from \"../DataPoint\";\nimport { IPlottingItem, Series } from \"../Series\";\n\nexport class TreemapSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    id: string;\n    group: string;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _readArray(series: TreemapSeries, v: any[]): void {\n        super._readArray(series, v);\n\n        this.id = toStr(v[+series.idField]);\n        this.group = toStr(v[+series.groupField]);\n    }\n\n    protected _readObject(series: TreemapSeries, v: any): void {\n        super._readObject(series, v);\n\n        this.id = toStr(v[series.idField]);\n        this.group = toStr(v[series.groupField]);\n    }\n}\n\ninterface IArea {\n    x: number, \n    y: number,\n    width: number;\n    height: number;\n}\n\nexport class TreeNode {\n    parent: TreeNode;\n    children: TreeNode[];\n    index: number;\n    value: number;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    _color: Color;\n\n    constructor(public point: TreemapSeriesPoint) {}\n\n    getArea(): IArea {\n        return {x: this.x, y: this.y, width: this.width, height: this.height};\n    }\n\n    setArea(x: number, y: number, w: number, h: number): void {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n\n    getTotal(): number {\n        return this.children.reduce((a, c) => a + c.value, 0);\n    }\n}\n\nexport enum TreemapAlgorithm {\n    /**\n     * 최대한 정사각형에 가까운 비율을 유지한다.\n     * <br>\n     * 줄마다 배치 방향을 바꾼다.\n     * 사용자가 크기를 비교하기에 유리하다.\n     */\n    SQUARIFY = 'squarify',\n    /**\n     * 최대한 정사각형에 가까운 비율을 유지한다.\n     * <br>\n     * 같은 방향을 유지하면 배치한다.\n     */\n    STRIP = 'strip',\n    /**\n     * 수평/수직 한 쪽 방향으로 나눈다.\n     * <br>\n     * level이 바뀌면 방향을 바꾼다.\n     */\n    SLICE = 'slice',\n    /**\n     * 방향을 번갈아 가면서 나눈다.\n     */\n    SLICE_DICE = 'sliceDice'\n}\n\n/**\n * 1. 본래 하드 드라이브의 파일 분포 상태를 표시하기 위해 고안됨.\n * 2. node & link 스타일의 전통적 표시 방식은 공간을 많이 필요로 한다.\n * 3. 일정 표시 공간을 100% 사용한다.\n * 4. 초기 공간을 재귀적으로 나누어 가면서 구성한다.\n * \n * // TODO: grouping된 data 설정 가능하도록 한다. data[{data:[]}, {data:[]}]\n */\nexport class TreemapSeries extends Series {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    idField = 'id';\n    groupField = 'group';\n    algorithm = TreemapAlgorithm.SQUARIFY;\n    /**\n     * 수직, 수평으로 방향을 바꾸어 가며 배치한다.\n     */\n    alternate = true;\n    /**\n     * 시작 방향.\n     * <br>\n     * 지정하지 않으면 ploting 영역의 너비/높이 비율 기준으로 정해진다.\n     */\n    startDir: 'vertical' | 'horizontal';\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _roots: TreeNode[];\n    _leafs: TreeNode[];\n    private _map: {[id: string]: TreeNode} = {};\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    buildMap(width: number, height: number): TreeNode[] {\n\n        function visit(node: TreeNode): void {\n            if (node.children) {\n                let sum = 0;\n\n                node.children.forEach((node, i) => {\n                    visit(node);\n                    sum += node.value;\n                })\n                node.value = sum;\n                node.children = node.children.sort((n1, n2) => n2.value - n1.value);\n                node.children.forEach((node, i) => {\n                    node.index = i;\n                });\n            } else {\n                leafs.push(node);\n                node.value = node.point ? node.point.yValue : 0;\n            }\n        }\n\n        const vertical = this.startDir === 'vertical' || height > width;\n        const leafs = this._leafs = [];\n\n        this._roots.forEach((node, i) => {\n            visit(node);\n        });\n\n        this._roots = this._roots.sort((n1, n2) => n2.value - n1.value);\n        this._roots.forEach((node, i) => {\n            node.index = i;\n        });\n\n        (this[this.algorithm] || this.squarify).call(this, this._roots, width, height, vertical);\n        return this._leafs;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'treemap';\n    }\n\n    needAxes(): boolean {\n        return false;\n    }\n\n    canMixWith(other: IPlottingItem): boolean {\n        return false;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new TreemapSeriesPoint(source);\n    }\n\n    getLabeledPoints(): DataPoint[] {\n        return this._leafs.map(node => node.point);\n    }\n\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        this._roots = this.$_buildTree(this._visPoints as TreemapSeriesPoint[]);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_buildTree(pts: TreemapSeriesPoint[]): TreeNode[] {\n        const roots: TreeNode[] = [];\n        const list = [];\n        const map = this._map;\n\n        pts.forEach(p => {\n            const node = new TreeNode(p);\n\n            if (p.id) {\n                map[p.id] = node;\n            } \n            if (p.group) {\n                list.push(node);\n            } else {\n                roots.push(node);\n            }\n        })\n\n        for (let i = list.length - 1; i >= 0; i--) {\n            const node = list[i];\n            const g = map[node.point.group];\n\n            if (node.parent = g) {\n                if (!g.children) g.children = [];\n                g.children.push(node);\n                if (node.children) list.splice(i, 1);\n            } else {\n                roots.push(node);\n                list.splice(i, 1);\n            }\n        };\n        return roots;\n    }\n\n    private $_squarifyRow(nodes: TreeNode[], area: IArea, dir: number, total: number): number {\n        const totalArea = area.width * area.height;\n        const w = area.width;\n        const h = area.height;\n        let x = area.x;\n        let y = area.y;\n        let prevRate = Number.MAX_VALUE;\n        let sum = 0;\n        const list: TreeNode[] = [];\n\n        while (nodes.length > 0) {\n            let node: TreeNode;\n            let wNode: number;\n            let hNode: number;\n            let pArea: number;\n            let rate: number;\n\n            node = nodes.shift();\n            sum += node.value;\n            pArea = sum * totalArea / total;\n\n            if (dir === 1) {\n                wNode = pArea / h;\n                hNode = h * node.value / sum;\n            } else {\n                hNode = pArea / w;\n                wNode = w * node.value / sum;\n            }\n            rate = Math.max(wNode / hNode, hNode / wNode);\n\n            if (nodes.length > 0 && rate > prevRate) {\n                nodes.unshift(node);\n                sum -= node.value;\n                pArea = totalArea * sum / total;\n\n                if (dir === 1) {\n                    hNode = h;\n                    wNode = pArea / hNode;\n                } else {\n                    wNode = w;\n                    hNode = pArea / wNode;\n                }\n\n                list.forEach(node => {\n                    if (dir === 1) {\n                        node.setArea(x, y, wNode, h * node.value / sum);\n                        y += node.height;\n                    } else {\n                        node.setArea(x, y, w * node.value / sum, hNode);\n                        x += node.width;\n                    }\n                })\n\n                if (dir === 1) {\n                    area.x += wNode;\n                    area.width -= wNode;\n                } else {\n                    area.y += hNode;\n                    area.height -= hNode;\n                }\n                return total - sum;\n\n            } else if (nodes.length === 0) {\n                pArea = totalArea * sum / total;\n                if (dir === 1) {\n                    hNode = h;\n                    wNode = pArea / hNode;\n                } else {\n                    wNode = w;\n                    hNode = pArea / wNode;\n                }\n\n                list.push(node);\n                list.forEach(node => {\n                    if (dir === 1) {\n                        node.setArea(x, y, wNode, h * node.value / sum);\n                        y += node.height;\n                    } else {\n                        node.setArea(x, y, w * node.value / sum, hNode);\n                        x += node.width;\n                    }\n                })\n                return 0;\n\n            } else {\n                prevRate = rate;\n                list.push(node);\n            }\n        }\n    }\n\n    private $_squarify(roots: TreeNode[], area: IArea, vertical: boolean, changeDir: boolean): void {\n        const nodes = roots.slice(0);\n        let dir = vertical ? 1 : 0;\n        let sum = roots.reduce((a, c) => a + c.value, 0);\n\n        do {\n            sum = this.$_squarifyRow(nodes, area, dir, sum);\n            if (changeDir) {\n                dir = 1 - dir;\n            }\n        } while (sum > 0);\n\n        roots.forEach(node => {\n            if (node.children) {\n                this.$_squarify(node.children, node.getArea(), !vertical, true);\n            }\n        })\n    }\n\n    private squarify(roots: TreeNode[], width: number, height: number, vertical: boolean): void {\n        this.$_squarify(roots, {x: 0, y: 0, width, height}, vertical, true);\n    }\n\n    private strip(roots: TreeNode[], width: number, height: number, vertical: boolean): void {\n        this.$_squarify(roots, {x: 0, y: 0, width, height}, vertical, false);\n    }\n\n    private $_sliceNext(node: TreeNode, area: IArea, dir: number, sum: number): void {\n        node.x = area.x;\n        node.y = area.y;\n\n        if (dir === 1) { // vertical\n            const h = area.height * node.value / sum;\n            \n            node.width = area.width;\n            node.height = h;\n            area.y += h;\n            area.height -= h;\n        } else {\n            const w = area.width * node.value / sum;\n\n            node.height = area.height;\n            node.width = w;\n            area.x += w;\n            area.width -= w;\n        }\n\n        if (node.children) {\n            this.$_slice(node.children, node.getArea(), dir === 0, true);\n        }\n    }\n\n    private $_slice(roots: TreeNode[], area: IArea, vertical: boolean, changeDir: boolean): void {\n        let sum = roots.reduce((a, c) => a + c.value, 0);\n        let dir = vertical ? 1 : 0;\n\n        roots.forEach(node => {\n            this.$_sliceNext(node, area, dir, sum);\n            sum -= node.value;\n            if (changeDir) {\n                dir = 1 - dir;\n            }\n        })\n    }\n    \n    private slice(roots: TreeNode[], width: number, height: number, vertical: boolean): void {\n        this.$_slice(roots, {x: 0, y: 0, width, height}, vertical, false);\n    }\n\n    private sliceDice(roots: TreeNode[], width: number, height: number, vertical: boolean): void {\n        this.$_slice(roots, {x: 0, y: 0, width, height}, vertical, true);\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// VectorSeries.ts\n// 2023. 08. 01. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum, pickProp, pickProp3 } from \"../../common/Common\";\nimport { IAxis } from \"../Axis\";\nimport { DataPoint } from \"../DataPoint\";\nimport { Series } from \"../Series\";\n\n/**\n * [x, y, length, angle]\n */\nexport class VectorSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    length: any;\n    angle: any;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    lengthValue: number;\n    angleValue: number;\n\n    _len: number;\n    _off: number; \n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _readArray(series: VectorSeries, v: any[]): void {\n        const d = v.length > 3 ? 1 : 0;\n\n        this.y = v[pickNum(series.yField, 0 + d)];\n        this.length = v[pickNum(series.lengthField, 1 + d)];\n        this.angle = v[pickNum(series.angleField, 2 + d)];\n\n        if (d > 0) {\n            this.x = v[pickNum(series.xField, 0)];\n        } else {\n            this.x = this.index;\n        }\n    }\n\n    protected _readObject(series: VectorSeries, v: any): void {\n        super._readObject(series, v);\n\n        this.length = pickProp(v[series.lengthField], v.length);\n        this.angle = pickProp(v[series.angleField], v.angle);\n        this.y = pickProp3(v[series.yField], v.y, v.value);\n    }\n\n    protected _readSingle(v: any): void {\n        super._readSingle(v);\n\n        this.length = this.angle = this.y;\n    }\n\n    parse(series: VectorSeries): void {\n        super.parse(series);\n\n        this.lengthValue = parseFloat(this.length);\n        this.angleValue = parseFloat(this.angle);\n\n        this.isNull ||= isNaN(this.lengthValue) || isNaN(this.angleValue);\n    }\n}\n\nexport enum VectorOrigin {\n    CENTER = 'center',\n    START = 'start',\n    END = 'end'\n}\n\nexport enum ArrowHead {\n    NONE = 'none',\n    CLOSE = 'close',\n    OPEN = 'open',\n}\n\n/**\n */\nexport class VectorSeries extends Series {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    lengthField: string;\n    angleField: string;\n    origin = VectorOrigin.CENTER;\n    maxLength = 20;\n    startAngle = 0;\n    arrowHead = ArrowHead.CLOSE;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'vector';\n    }\n\n    ignoreAxisBase(axis: IAxis): boolean {\n        return true;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new VectorSeriesPoint(source);\n    }\n\n    protected _doLoad(src: any): void {\n        super._doLoad(src);\n    }\n\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        const pts = this._visPoints as VectorSeriesPoint[];\n\n        if (pts.length > 0) {\n            const len = this.maxLength;\n            const org = this.origin;\n            const max = pts.map(p => p.length).reduce((r, c) => Math.max(r, c));\n    \n            pts.forEach(p => {\n                const f = p.length / max;\n                \n                p._len = f * len;\n                switch (org) {\n                    case VectorOrigin.START:\n                        p._off =  p._len / 2;\n                        break;\n                    case VectorOrigin.END:\n                        p._off = p._len / 2;\n                        break;\n                    default:\n                        p._off = 0;\n                        break;\n                }\n            });\n        }\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// WaterfallSeries.ts\n// 2023. 07. 29. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { IChart } from \"../Chart\";\nimport { DataPoint } from \"../DataPoint\";\nimport { RangedSeries } from \"../Series\";\n\nexport class WaterfallSeriesPoint extends DataPoint {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _isSum: boolean;\n    _intermediate: boolean;\n    save: number;\n    low = 0;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    parse(series: WaterfallSeries): void {\n        super.parse(series);\n\n        this._isSum = this.source.isSum === true;\n        this._intermediate = this.source.intermediate;\n        if (this._isSum) this.y = 0; // 이렇게 하지 않으면 isNull이 true가 된다.\n        // series에서 this.y를 변경하므로 원본을 저장하고 나중에 복원한다.\n        this.save = this.y;\n    }\n}\n\nexport class WaterfallSeries extends RangedSeries {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(chart: IChart, name?: string) {\n        super(chart, name);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    _type(): string {\n        return 'waterfall';\n    }\n\n    canCategorized(): boolean {\n        return true;\n    }\n\n    protected _createPoint(source: any): DataPoint {\n        return new WaterfallSeriesPoint(source);\n    }\n\n    protected _doPrepareRender(): void {\n        super._doPrepareRender();\n\n        const pts = this._visPoints as WaterfallSeriesPoint[];\n        if (pts.length < 1) return;\n\n        let p = pts[0];\n        let yPrev = p.y = p._isSum ? 0 : p.y;\n        let prev = yPrev;\n        let total = yPrev;  // 전체 total\n        let sum = yPrev;    // 중간 total\n        let low = 0;        // 시작값\n        let v: number;\n        let y: number;\n\n        for (let i = 1, cnt = pts.length; i < cnt; i++) {\n            p = pts[i];\n\n            if (p._isSum) {\n                const pPrev = pts[i - 1];\n                const inter = p._intermediate === true || i < cnt - 1 && p._intermediate !== false;\n                const v = p.save = p.y = inter ? sum : total;\n\n                p.yGroup = p.yValue = p.y;\n\n                if (inter) {\n                    if (sum < 0) {\n                        low = pPrev.low;\n                        y = low - v;\n                    } else {\n                        y = pPrev.y;\n                        low = y - v;\n                    }\n                } else {\n                    low = pts[0].low;\n                    y = low + v;\n                }\n                sum = 0;\n                \n            } else {\n                v = p.y;\n\n                if (v < 0) {\n                    if (prev < 0) {\n                        y = yPrev + prev;\n                        low = y + v;\n                    } else {\n                        y = yPrev;\n                        low = y + v;\n                    }\n                } else {\n                    if (prev < 0) {\n                        low = yPrev;\n                        y = low + v;\n                    } else {\n                        low = yPrev;\n                        y = low + v;\n                    }\n                }\n\n                sum += v;\n                total += v;\n            }\n\n            prev = p.y;\n            p.y = yPrev = y;\n            p.low = low;\n\n        }\n    }\n\n    protected _getBottomValue(p: WaterfallSeriesPoint): number {\n        // [NOTE] low value를 axis에 포함시키지 않는다. 다른 ranged 시리즈와 다르다.\n        p.y = p.save;\n        return NaN;\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// Chart.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { RcEventProvider } from \"../common/RcObject\";\nimport { SVGStyleOrClass, SectionDir, isNull } from \"../common/Types\";\nimport { Axis, AxisCollection, IAxis } from \"./Axis\";\nimport { Body } from \"./Body\";\nimport { ChartItem } from \"./ChartItem\";\nimport { ILegendSource, Legend } from \"./Legend\";\nimport { IPlottingItem, PlottingItemCollection, Series } from \"./Series\";\nimport { Subtitle, Title } from \"./Title\";\nimport { CategoryAxis } from \"./axis/CategoryAxis\";\nimport { LinearAxis } from \"./axis/LinearAxis\";\nimport { LogAxis } from \"./axis/LogAxis\";\nimport { TimeAxis } from \"./axis/TimeAxis\";\nimport { BarRangeSeries } from \"./series/BarRangeSeries\";\nimport { BarSeries, BarSeriesGroup } from \"./series/BarSeries\";\nimport { BellCurveSeries } from \"./series/BellCurveSeries\";\nimport { BoxPlotSeries } from \"./series/BoxPlotSeries\";\nimport { BubbleSeries } from \"./series/BubbleSeries\";\nimport { BumpSeriesGroup } from \"./series/BumpSeriesGroup\";\nimport { CandlestickSeries } from \"./series/CandlestickSeries\";\nimport { DumbbellSeries } from \"./series/DumbbellSeries\";\nimport { EqualizerSeries } from \"./series/EqualizerSeries\";\nimport { ErrorBarSeries } from \"./series/ErrorBarSeries\";\nimport { FunnelSeries } from \"./series/FunnelSeries\";\nimport { HeatmapSeries } from \"./series/HeatmapSeries\";\nimport { HistogramSeries } from \"./series/HistogramSeries\";\nimport { AreaRangeSeries, AreaSeries, AreaSeriesGroup, LineSeries, LineSeriesGroup } from \"./series/LineSeries\";\nimport { LollipopSeries } from \"./series/LollipopSeries\";\nimport { OhlcSeries } from \"./series/OhlcSeries\";\nimport { ParetoSeries } from \"./series/ParetoSeries\";\nimport { PieSeries, PieSeriesGroup } from \"./series/PieSeries\";\nimport { ScatterSeries } from \"./series/ScatterSeries\";\nimport { TreemapSeries } from \"./series/TreemapSeries\";\nimport { VectorSeries } from \"./series/VectorSeries\";\nimport { WaterfallSeries } from \"./series/WaterfallSeries\";\n\nexport interface IChart {\n    type: string;\n    xStart: number;\n    xStep: number;\n    // series2: ISeries;\n    first: IPlottingItem;\n    firstSeries: Series;\n    xAxis: IAxis;\n    yAxis: IAxis;\n    colors: string[];\n\n    _polar: boolean;\n    isInverted(): boolean;\n    animatable(): boolean;\n    startAngle(): number;\n\n    seriesByName(series: string): Series;\n    axisByName(axis: string): Axis;\n    // getGroup(group: String): SeriesGroup2;\n    getAxes(dir: SectionDir): Axis[];\n\n    _getGroupType(type: string): any;\n    _getSeriesType(type: string): any;\n    _getAxisType(type: string): any;\n    _getSeries(): PlottingItemCollection;\n    // _getSeries2(): SeriesCollection;\n    _getXAxes(): AxisCollection;\n    _getYAxes(): AxisCollection;\n    getAxesGap(): number;\n    _connectSeries(series: IPlottingItem, isX: boolean): Axis;\n    _getLegendSources(): ILegendSource[];\n    _visibleChanged(item: ChartItem): void;\n    _modelChanged(item: ChartItem): void;\n}\n\nconst group_types = {\n    'bar': BarSeriesGroup,\n    'line': LineSeriesGroup,\n    'area': AreaSeriesGroup,\n    'pie': PieSeriesGroup,\n    'bump': BumpSeriesGroup\n};\n\nconst series_types = {\n    'area': AreaSeries,\n    'arearange': AreaRangeSeries,\n    'bar': BarSeries,\n    'barrange': BarRangeSeries,\n    'bellcurve': BellCurveSeries,\n    'boxplot': BoxPlotSeries,\n    'bubble': BubbleSeries,\n    'candlestick': CandlestickSeries,\n    'dumbbell': DumbbellSeries,\n    'equalizer': EqualizerSeries,\n    'errorbar': ErrorBarSeries,\n    'funnel': FunnelSeries,\n    'heatmap': HeatmapSeries,\n    'histogram': HistogramSeries,\n    'line': LineSeries,\n    'lollipop': LollipopSeries,\n    'ohlc': OhlcSeries,\n    'pareto': ParetoSeries,\n    'pie': PieSeries,\n    'scatter': ScatterSeries,\n    'treemap': TreemapSeries,\n    'vector': VectorSeries,\n    'waterfall': WaterfallSeries,\n};\n\nconst axis_types = {\n    'category': CategoryAxis,\n    'linear': LinearAxis,\n    'time': TimeAxis,\n    'date': TimeAxis,\n    'log': LogAxis\n}\n\nexport class Credit extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    text = 'realreport-chart.com';\n}\n\nexport class ChartOptions extends ChartItem {\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * true면 차트가 {@link https://en.wikipedia.org/wiki/Polar_coordinate_system 극좌표계}로 표시된다.\n     * <br>\n     * 기본은 {@link https://en.wikipedia.org/wiki/Cartesian_coordinate_system 직교좌표계}이다.\n     * <br>\n     * 극좌표계일 때,\n     * x축이 원호에, y축은 방사선에 위치하고, 아래의 제한 사항이 있다.\n     * 1. x축은 첫번째 축 하나만 사용된다.\n     * 2. axis.position 속성은 무시된다.\n     * 3. chart, series의 inverted 속성이 무시된다.\n     * 4. 극좌표계에 표시할 수 없는 series들은 표시되지 않는다.\n     */\n    polar = false;\n    /**\n     * false로 지정하면 차트 전체척으로 animation 효과를 실행하지 않는다.\n     */\n    animatable = true;\n    /**\n     * x값이 설정되지 않은 포인트들의 시작 x값.\n     * {@link Series.xStart}의 기본값.\n     */\n    xStart = 0;\n    /**\n     * 시리즈 데이타에 x축 값이 설정되지 않은 경우, 포인트 간의 간격 x 크기.\n     * {@link Series.xStep}의 기본값.\n     * time 축일 때, 정수 값 대신 시간 단위로 지정할 수 있다.\n     */\n    xStep = 1;\n    /**\n     * 복수 axis가 표시되는 경우 axis 사이의 간격\n     * <br>\n     * @default 8 pixels\n     */\n    axisGap = 8;\n    style: SVGStyleOrClass;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n}\n\nexport interface IChartEventListener {\n    onVisibleChanged?(chart: Chart, item: ChartItem): void;\n}\n\nexport class Chart extends RcEventProvider<IChartEventListener> implements IChart {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _options: ChartOptions;\n    private _title: Title;\n    private _subtitle: Subtitle;\n    private _legend: Legend;\n    private _series: PlottingItemCollection;\n    private _xAxes: AxisCollection;\n    private _yAxes: AxisCollection;\n    private _body: Body;\n\n    private _inverted: boolean;\n    _polar: boolean;\n    colors = [\"#1bafdc\", \"#12d365\", \"#343ec3\", \"#81d8c1\", \n    \"#fe6a35\", \"#6b8abc\", \"#d568fb\", \"#2ee0ca\", \"#fa4b42\", \"#feb56a\"];\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(source?: any) {\n        super();\n\n        this._options = new ChartOptions(this);\n        this._title = new Title(this);\n        this._subtitle = new Subtitle(this);\n        this._legend = new Legend(this);\n        this._series = new PlottingItemCollection(this);\n        this._xAxes = new AxisCollection(this, true);\n        this._yAxes = new AxisCollection(this, false);\n        this._body = new Body(this);\n\n        source && this.load(source);\n        this._polar = this.options.polar === true;\n    }\n\n    //-------------------------------------------------------------------------\n    // IChart\n    //-------------------------------------------------------------------------\n    startAngle(): number {\n        return this.body.getStartAngle();\n    }\n\n    get xStart(): number {\n        return this._options.xStart;\n    }\n\n    get xStep(): number {\n        return this._options.xStep;\n    }\n\n    animatable(): boolean {\n        return this._options.animatable !== false;\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * 기본 시리즈 type.\n     * <br>\n     * {@link Series._type}의 기본값.\n     * 시리즈에 type을 지정하지 않으면 이 속성 type의 시리즈로 생성된다.\n     * \n     * @default 'bar'\n     */\n    type = 'bar';\n\n    /**\n     * true면 x축이 수직, y축이 수평으로 배치된다.\n     * <br>\n     * 기본값은 undefined로 첫번째 series의 종류에 따라 결정된다.\n     * 즉, bar 시리즈 계통이면 true가 된다.\n     */\n    inverted: boolean;\n\n    get options(): ChartOptions {\n        return this._options;\n    }\n\n    get title(): Title {\n        return this._title;\n    }\n\n    get subtitle(): Subtitle {\n        return this._subtitle;\n    }\n\n    get first(): IPlottingItem {\n        return this._series.first;\n    }\n\n    get firstSeries(): Series {\n        return this._series.firstSeries;\n    }\n\n    get legend(): Legend {\n        return this._legend;\n    }\n\n    get xAxis(): IAxis {\n        return this._xAxes.first;\n    }\n\n    get yAxis(): IAxis {\n        return this._yAxes.first;\n    }\n\n    get body(): Body {\n        return this._body;\n    }\n\n    /**\n     * 좌표축이 필요하면true이다.\n     * <br>\n     * 현재, 모든 시리즈가 pie 이면 false가 된다.\n     * false이면 직교 좌표가 표시되지 않는다.\n     */\n    needAxes(): boolean {\n        return this._series.needAxes();\n    }\n\n    _getSeries(): PlottingItemCollection {\n        return this._series;\n    }\n\n    // _getSeries2(): SeriesCollection {\n    //     return this._series2;\n    // }\n\n    // _getGroups2(): SeriesGroupCollection2 {\n    //     return this._groups2;\n    // }\n\n    _getXAxes(): AxisCollection {\n        return this._xAxes;\n    }\n\n    _getYAxes(): AxisCollection {\n        return this._yAxes;\n    }\n\n    isInverted(): boolean {\n        return !this._polar && this._inverted;\n    }\n\n    isEmpty(): boolean {\n        return this._series.isEmpty();\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    seriesByName(series: string): Series {\n        return this._series.get(series);\n    }\n\n    axisByName(axis: string): Axis {\n        return this._xAxes.get(axis) || this._yAxes.get(axis);\n    }\n\n    // getGroup(group: string): SeriesGroup2 {\n    //     return this._groups2.get(group);\n    // }\n\n    containsAxis(axis: Axis): boolean {\n        return this._xAxes.contains(axis) || this._yAxes.contains(axis);\n    }\n\n    getAxes(dir: SectionDir): Axis[] {\n        const xAxes = this._xAxes.items;\n        const yAxes = this._yAxes.items;\n        let axes: Axis[];\n\n        if (this.isInverted()) {\n            switch (dir) {\n                case SectionDir.LEFT:\n                    axes = xAxes.filter(a => !a._isOpposite);\n                    break;\n                case SectionDir.RIGHT:\n                    axes = xAxes.filter(a => a._isOpposite);\n                    break;\n                case SectionDir.BOTTOM:\n                    axes = yAxes.filter(a => !a._isOpposite);\n                    break;\n                case SectionDir.TOP:\n                    axes = yAxes.filter(a => a._isOpposite);\n                    break;\n            } \n        } else {\n            switch (dir) {\n                case SectionDir.LEFT:\n                    axes = yAxes.filter(a => !a._isOpposite);\n                    break;\n                case SectionDir.RIGHT:\n                    axes = yAxes.filter(a => a._isOpposite);\n                    break;\n                case SectionDir.BOTTOM:\n                    axes = xAxes.filter(a => !a._isOpposite);\n                    break;\n                case SectionDir.TOP:\n                    axes = xAxes.filter(a => a._isOpposite);\n                    break;\n            } \n        }\n        return axes || [];\n    }\n\n    _getLegendSources(): ILegendSource[] {\n        return this._series.getLegendSources();\n    }\n\n    load(source: any): void {\n        // properites\n        ['type', 'inverted'].forEach(prop => {\n            if (prop in source) {\n                this[prop] = source[prop];\n            }\n        })\n\n        // options\n        this._options.load(source.options);\n\n        // titles\n        this._title.load(source.title);\n        this._subtitle.load(source.subtitle);\n\n        // legend\n        this._legend.load(source.legend);\n\n        // series - 시리즈를 먼저 로드해야 디폴트 axis를 지정할 수 있다.\n        this._series.load(source.series);\n        // this._series2.load(source.series);\n        // series group\n        // this._groups2.load(source.groups);\n\n        // axes\n        // 축은 반드시 존재해야 한다.\n        this._xAxes.load(source.xAxes || source.xAxis || {});\n        this._yAxes.load(source.yAxes || source.yAxis || {});\n\n        // body\n        this._body.load(source.plot);\n\n        // inverted\n        this._inverted = this.inverted;\n    }\n\n    _connectSeries(series: IPlottingItem, isX: boolean): Axis {\n        return isX ? this._xAxes.connect(series) : this._yAxes.connect(series);\n    }\n\n    prepareRender(): void {\n        this._xAxes.disconnect();\n        this._yAxes.disconnect();\n\n        // 축에 연결한다.\n        this._series.prepareRender();\n\n        // 축의 값 범위를 계산한다. \n        // [주의] 반드시 x축을 먼저 준비해야 한다. seriesGroup.$_collectPoints에서 point.xValue를 사용한다.\n        this._xAxes.collectValues();\n        this._yAxes.collectValues();\n        this._xAxes.collectReferentsValues();\n        this._yAxes.collectReferentsValues();\n        this._xAxes.prepareRender();\n        this._yAxes.prepareRender();\n\n        // 축이 설정된 후\n        this._series.prepareAfter();\n\n        // legend 위치를 결정한다.\n        this._legend.prepareRender();\n    }\n\n    // 여러번 호출될 수 있다.\n    layoutAxes(width: number, height: number, inverted: boolean, phase: number): void {\n        this._xAxes.buildTicks(inverted ? height : width);\n        this._yAxes.buildTicks(inverted ? width : height);\n        this.$_calcAxesPoints(width, height, inverted, 0);\n    }\n\n    calcAxesPoints(width: number, height: number, inverted: boolean): void {\n        this.$_calcAxesPoints(width, height, inverted, 1);\n    }\n\n    private $_calcAxesPoints(width: number, height: number, inverted: boolean, phase: number): void {\n        let len = inverted ? height : width;\n        this._xAxes.forEach(axis => {\n            axis.calcPoints(len, phase);\n        });\n        len = inverted ? width : height;\n        this._yAxes.forEach(axis => {\n            axis.calcPoints(len, phase);\n        });\n    }\n\n    /**\n     * 데이터 및 속성 변경 후 다시 그리게 한다.\n     */\n    update(): void {\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    _getGroupType(type: string): any {\n        return group_types[type];\n    }\n\n    _getSeriesType(type: string): any {\n        return series_types[String(type).toLowerCase()];\n    }\n\n    _getAxisType(type: string): any {\n        return axis_types[String(type).toLowerCase()];\n    }\n\n    getAxesGap(): number {\n        return this._options.axisGap || 0;\n    }\n\n    _visibleChanged(item: ChartItem): void {\n        this._fireEvent('onVisibleChanged', item);\n    }\n\n    _modelChanged(item: ChartItem): void {\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// PointerHandler.ts\n// 2023. 08. 12. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { IPointerHandler } from \"../common/RcControl\";\nimport { ChartControl } from \"../main\";\n\nconst DRAG_THRESHOLD = 3;\n\nexport class ChartPointerHandler implements IPointerHandler {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _chart: ChartControl;\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(chart: ChartControl) {\n        this._chart = chart;\n    }\n\n    //-------------------------------------------------------------------------\n    // IPointerHandler\n    //-------------------------------------------------------------------------\n    handleMove(ev: PointerEvent): void {\n        const x = (ev as any).pointX;\n        const y = (ev as any).pointY;\n        const body = this._chart.chartView().bodyView();\n\n        body.pointerMoved(body.controlToElement(x, y), ev.target);\n    }\n\n    handleClick(ev: PointerEvent): void {\n        const chart = this._chart.chartView();\n        const elt = ev.target as Element;\n        const legend = chart.legendByDom(elt);\n\n        if (legend) {\n            legend.source.visible = !legend.source.visible;\n        } else {\n            const series = chart.seriesByDom(elt);\n\n            if (series) {\n                series.clicked(elt)\n            }\n        }\n    }\n\n    handleDblClick(ev: PointerEvent): void {\n    }\n\n    handleWheel(ev: WheelEvent): void {\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}","////////////////////////////////////////////////////////////////////////////////\n// Point.ts\n// 2023. 01. 04. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface IPoint {\n    x: number;\n    y: number;\n}\n\n/** @internal */\nexport class Point implements IPoint {\n\t\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static empty(): Point {\n        return new Point();\n    }\n\n    static create(x: number = 0, y: number = 0): Point {\n        return new Point(x, y);\n    }\n\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(public x = 0, public y = 0) {\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /** isEmpty */\n\tget isEmpty(): boolean {\n\t\treturn this.x === 0 || this.y === 0;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n\tclone(): Point {\n\t\treturn new Point(this.x, this.y);\n    }\n    \n\tequals(sz: Point): boolean {\n\t\treturn sz === this\n\t\t\t|| sz && this.x === sz.x && this.y === sz.y;\n    }\n    \n\tsetEmpty(): Point {\n\t\tthis.x = this.y = 0;\n\t\treturn this;\n    }\n    \n\tset(x: number, y: number): Point {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n    }\n    \n\tround(): Point {\n\t\tconst pt = this.clone();\n\t\tpt.x >>>= 0;\n\t\tpt.y >>>= 0;\n\t\treturn pt;\n\t}\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n\ttoString(): string {\n\t\treturn \"{x: \" + this.x + \", y: \" + this.y + \"}\";\n\t}\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n","////////////////////////////////////////////////////////////////////////////////\n// Size.ts\n// 2023. 01. 04. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface ISize {\n    width: number;\n    height: number;\n}\n\n/** @internal */\nexport class Size {\n\t\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly EMPTY = new Size();\n\n    static empty(): Size {\n        return new Size();\n    }\n\n    static create(w: number = 0, h: number = 0): Size {\n        return new Size(w, h);\n    }\n\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(public width = 0, public height = 0) {\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /** isEmpty */\n\tget isEmpty(): boolean {\n\t\treturn this.width === 0 || this.height === 0;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n\tclone(): Size {\n\t\treturn new Size(this.width, this.height);\n    }\n    \n\tequals(sz: Size): boolean {\n\t\treturn sz === this\n\t\t\t|| sz && this.width === sz.width && this.height === sz.height;\n    }\n    \n\tsetEmpty(): Size {\n\t\tthis.width = this.height = 0;\n\t\treturn this;\n    }\n    \n\tset(width: number, height: number): Size {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n    }\n    \n\tround(): Size {\n\t\tconst sz = this.clone();\n\t\tsz.width >>>= 0;\n\t\tsz.height >>>= 0;\n\t\treturn sz;\n\t}\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n\ttoString(): string {\n\t\treturn \"{width: \" + this.width + \", height: \" + this.height + \"}\";\n\t}\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n","////////////////////////////////////////////////////////////////////////////////\n// GroupElement.ts\n// 2023. 06. 03. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { RcElement } from '../RcControl';\nimport { _undefined } from '../Types';\n\nexport abstract class GroupElement extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    private static IGNORE_ATTRS = {\n        width: '',\n        height: ''\n    }\n\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string = _undefined) {\n        super(doc, styleName, 'g');\n\n        this._doInitChildren(doc);\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _movable(): boolean {\n        return false;\n    }\n\n    setAttr(attr: string, value: any): RcElement {\n        if (!GroupElement.IGNORE_ATTRS.hasOwnProperty(attr)) {\n            super.setAttr(attr, value);\n        }\n        return this;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _doInitChildren(doc: Document): void {\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// PathElement.ts\n// 2023. 06. 03. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { PathElement } from '../RcControl';\nimport { _undefined } from '../Types';\nimport { Utils } from '../Utils';\nimport { SvgShapes } from './SvgShape';\n\nexport interface ILine {\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n}\n\nconst equalsLine = function (line1: ILine, line2: ILine): boolean {\n    if (line1 == line2) return true;\n    if (line1 && line2) {\n        return line1.x1 === line2.x1 && line1.x2 === line2.x2 && line1.y1 === line2.y1 && line1.y2 === line2.y2;\n    }\n    return false;\n}\n\nexport class LineElement extends PathElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string = _undefined, line: ILine = _undefined) {\n        super(doc, styleName);\n\n        this.setAttr('shapeRendering', 'cripsEdges');\n        line && this.setLine(line);\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    setLine(x1: ILine | number, y1?: number, x2?: number, y2?: number): void {\n        if (Utils.isNumber(x1)) {\n            this.setPath(SvgShapes.line(x1, y1, x2, y2));\n        } else if (x1) {\n            this.setPath(SvgShapes.line(x1.x1, x1.y1, x1.x2, x1.y2));\n        }\n    }\n\n    setVLine(x: number, y1: number, y2: number): void {\n        this.setPath(SvgShapes.line(x, y1, x, y2));\n    }\n\n    setVLineC(x: number, y1: number, y2: number): void {\n        // const w = parseFloat(this.getStyle('stroke-width'));\n\n        // if (!isNaN(w)) {\n        //     x = Math.round(x) - (w % 2 / 2);\n        // }\n        this.setPath(SvgShapes.line(x, y1, x, y2));\n    }\n\n    setHLine(y: number, x1: number, x2: number): void {\n        this.setPath(SvgShapes.line(x1, y, x2, y));\n    }\n\n    setHLineC(y: number, x1: number, x2: number): void {\n        // const w = parseFloat(this.getStyle('stroke-width'));\n        \n        // if (!isNaN(w)) {\n        //     y = Math.round(y) - (w % 2 / 2);\n        // }\n        this.setPath(SvgShapes.line(x1, y, x2, y));\n    }\n}\n\nexport class LineElementEx extends PathElement {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    private _line: ILine;\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName = _undefined, line: ILine = _undefined) {\n        super(doc, null, styleName);\n\n        this.setLine(line);\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /** line */\n    get line(): ILine {\n        return this._line;\n    }\n    set line(value: ILine) {\n        if (!equalsLine(value, this._line)) {\n            this._line = value;\n            this.$_render();\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    updateLine(newLine: ILine): void {\n        if (!equalsLine(newLine, this._line)) {\n                this.line = newLine;\n        }\n    }\n\n    updateVLine(x: number, y1: number, y2: number): void {\n        this.updateLine({x1: x, y1: y1, x2: x, y2: y2});\n    }\n\n    updateHLine(y: number, x1: number, x2: number): void {\n        this.updateLine({x1: x1, y1: y, x2: x2, y2: y});\n    }\n\n    updateVLineC(x: number, y1: number, y2: number): void {\n        // const w = parseFloat(this.getStyle('stroke-width'));\n\n        // if (!isNaN(w)) {\n        //     x = Math.round(x) - (w % 2 / 2);\n        // }\n        this.updateLine({x1: x, y1: y1, x2: x, y2: y2});\n    }\n\n    updateHLineC(y: number, x1: number, x2: number, animate = false): void {\n        // const w = parseFloat(this.getStyle('stroke-width'));\n\n        // if (!isNaN(w)) {\n        //     y = Math.round(y) - (w % 2 / 2);\n        // }\n        this.updateLine({x1: x1, y1: y, x2: x2, y2: y});\n    }\n\n    setLine(x1: ILine | number, y1?: number, x2?: number, y2?: number): void {\n        if (Utils.isNumber(x1)) {\n            this.$_update(x1, y1, x2, y2);\n        } else if (x1) {\n            this.updateLine(x1);\n        }\n    }\n\n    setVLine(x: number, y1: number, y2: number): void {\n        this.$_update(x, y1, x, y2);\n    }\n\n    setVLineC(x: number, y1: number, y2: number): void {\n        // const w = parseFloat(this.getStyle('stroke-width'));\n\n        // if (!isNaN(w)) {\n        //     x = Math.round(x) - (w % 2 / 2);\n        // }\n        this.$_update(x, y1, x, y2);\n    }\n\n    setHLine(y: number, x1: number, x2: number): void {\n        this.$_update(x1, y, x2, y);\n    }\n\n    setHLineC(y: number, x1: number, x2: number): void {\n        // const w = parseFloat(this.getStyle('stroke-width'));\n\n        // if (!isNaN(w)) {\n        //     y = Math.round(y) - (w % 2 / 2);\n        // }\n        this.$_update(x1, y, x2, y);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_update(x1: number, y1: number, x2: number, y2: number): void {\n        this.line = { x1: x1, y1: y1, x2: x2, y2: y2 };\n    }\n\n    private $_render(): void {\n        const line = this._line;\n        if (line) {\n            this.setPath(SvgShapes.line(line.x1, line.y1, line.x2, line.y2));\n        }\n    }\n}\n\n\nexport class ArcElement extends PathElement {\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string, cx: number, cy: number, r: number, start: number, end: number) {\n        super(doc, styleName, SvgShapes.arc(cx, cy, r, r, start, end));\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// Color.ts\n// 2023. 06. 03. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { Utils } from \"./Utils\";\n\n/** @internal */\nexport class Color {\n\t\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    static isBright(color: string): boolean {\n        return new Color(color).isBright();\n    }\n\n    static getContrast(color: string, darkColor?: string, brightColor?: string): string {\n        return new Color(color).getContrast(darkColor, brightColor);\n    }\n\n    static interpolate(c1: number, c2: number, delta: number): number {\n        const r1 = (c1 & 0xff0000) >> 16;\n        const g1 = (c1 & 0xff00) >> 8;\n        const b1 = c1 & 0xff;\n        const r2 = (c2 & 0xff0000) >> 16;\n        const g2 = (c2 & 0xff00) >> 8;\n        const b2 = c2 & 0xff;\n\n        const r = r1 + (r2 - r1) * delta;\n        const g = g1 + (g2 - g1) * delta;\n        const b = b1 + (b2 - b1) * delta;\n        return (r << 16) + (g << 8) + b;\n    }\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private r = 0;\n    private g = 0;\n    private b = 0;\n    private a = 1;\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(color?: string) {\n        if (color = color && color.trim()) {\n            if (Utils.startsWith(color, 'rgb(') && Utils.endsWith(color, ')')) {\n                this.$_parseRgb(color.substring(4, color.length - 1));\n            } else if (Utils.startsWith(color, 'rgba(') && Utils.endsWith(color, ')')) {\n                this.$_parseRgb(color.substring(5, color.length - 1));\n            } else if (Utils.startsWith(color, '#')) {\n                this.$_parseNumber(color.substr(1));\n            }\n        }\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get rgba(): string {\n        return \"rgba(\" + [this.r, this.g, this.b, this.a].join(',') + \")\";\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    isBright(): boolean {\n        const r = this.r * 0.299;\n        const g = this.g * 0.587;\n        const b = this.b * 0.114;\n        // return r + g + b > 186;\n        return r + g + b > 140;\n        //return r + g + b > 150;\n    }\n\n    getContrast(darkColor: string, brightColor: string): string {\n        return this.isBright() ? (darkColor || '#000000') : (brightColor || '#FFFFFF');\n    }\n\n    brighten(rate: number, color: Color = null): Color {\n        color = color || new Color(null);\n        color.r = Math.ceil(this.r + (255 - this.r) * rate);;\n        color.g = Math.ceil(this.g + (255 - this.g) * rate);\n        color.b = Math.ceil(this.b + (255 - this.b) * rate);\n        color.a = this.a;\n        return color\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n\ttoString(): string {\n\t\treturn this.rgba;\n\t}\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_parseRgb(s: string): void {\n        const arr = s.split(/\\,\\s*/);\n\n        if (arr.length >= 3) {\n            this.r = +arr[0];\n            this.g = +arr[1];\n            this.b = +arr[2];\n\n            if (arr.length >= 4) {\n                this.a = +arr[3];\n            } else {\n                this.a = 1;\n            }\n        }\n    }\n\n    private $_parseNumber(s: string): void {\n        const len = s.length;\n        let color: number;\n\n        if (len > 6) {\n            color = parseInt(s.substr(0, 6), 16);\n            this.a = parseInt(s.substring(6), 16) / 0xff;\n        } else if (len > 0) {\n            if (len === 3) {\n                s = s.charAt(0) + s.charAt(0) + s.charAt(1) + s.charAt(1) + s.charAt(2) + s.charAt(2);\n            }\n            color = parseInt(s, 16);\n        }\n        this.r = (color & 0xff0000) >> 16;\n        this.g = (color & 0xff00) >> 8;\n        this.b = color & 0xff;\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// TextElement.ts\n// 2023. 06. 03. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ELLIPSIS, SVGStyleOrClass, _undefined } from '../Types';\nimport { RcElement } from '../RcControl';\nimport { IRect } from '../Rectangle';\nimport { Color } from '../Color';\n\nexport enum TextAnchor {\n    START = 'start',\n    MIDDLE = 'middle',\n    END = 'end'\n}\n\nexport enum TextLayout {\n    TOP = 'top',\n    MIDDLE = 'middle',\n    BOTTOM = 'bottom'\n}\n\nexport enum TextOverflow {\n    TRUNCATE = 'truncate',\n    WRAP = 'wrap',\n    ELLIPSIS = 'ellipsis'\n}\n\n/**\n * Background, padding 등을 이용하려면 HtmlTextElement를 사용한다.\n */\nexport class TextElement extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    private _layout = TextLayout.TOP;\n    private _overflow = TextOverflow.WRAP;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _dirty = true;\n    private _text = '';\n    private _bounds: IRect;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string = _undefined) {\n        super(doc, styleName, 'text');\n\n        this.setAttr('text-anchor', 'middle');\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /** text */\n    get text(): string {\n        return this._text;\n    }\n    set text(value: string) {\n        value = value || '';\n        if (value !== this._text) {\n            this._dirty = true;\n            this.dom.textContent = this._text = value;\n            this.layoutText();\n        }\n    }    \n\n    /** anchor */\n    get anchor(): TextAnchor {\n        return this.getAttr('text-anchor');\n    }\n    set anchor(value: TextAnchor) {\n        if (value !== this.anchor) {\n            this.setAttr('text-anchor', value);\n        }\n    }\n\n    /** layout */\n    get layout(): TextLayout {\n        return this._layout;\n    }\n    set layout(value: TextLayout) {\n        if (value !== this._layout) {\n            this._layout = value;\n            this.layoutText();\n        }\n    }\n\n    /** overflow */\n    get overflow(): TextOverflow {\n        return this._overflow;\n    }\n    set overflow(value: TextOverflow) {\n        if (value !== this._overflow) {\n            this._overflow = value;\n            this.layoutText();\n        }\n    }\n\n    /** svg */\n    get svg(): string {\n        return this.dom.innerHTML;\n    }\n    set svg(value: string) {\n        value = value || '';\n        this.dom.innerHTML = value;\n    }\n    \n    get opacity(): number {\n        return this.getAttr('fill-opacity');\n    }\n    set opacity(value: number) {\n        this.setAttr('fill-opacity', value);\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getAscent(height: number): number {\n        //return (height >= 20 ? 0.72 : 0.75) * height;\n        return 0.75 * height;\n    }\n\n    layoutText(lineHeight?: number): void {\n        const r = this.getBBounds();\n        const ascent = this.getAscent(isNaN(lineHeight) ? r.height : lineHeight);\n        let y: number;\n\n        switch (this._layout) {\n            case TextLayout.MIDDLE:\n                y = Math.floor(ascent / 2);\n                break;\n            \n            case TextLayout.BOTTOM:\n                y = ascent - r.height;\n                break;\n\n            default:\n                y = Math.ceil(ascent);\n                break;\n        }\n        this.setAttr('y', y);\n    }\n\n    isFitIn(bounds: number): boolean {\n        return this.calcWidth() >= bounds;\n    }\n\n    calcWidth(): number {\n        const len = this._text.length;\n        return len && (this.dom as SVGTextElement).getSubStringLength(0, len);\n    }\n\n    calcRangeWidth(start = 0, end = Number.MAX_SAFE_INTEGER): number {\n        start = Math.max(0, start);\n        end = Math.min(this._text.length, end);\n        return end > start ? (this.dom as SVGTextElement).getSubStringLength(start, end - start) : 0;\n    }\n\n    truncate(bounds: number, ellipsis: boolean): void {\n        let s = this._text;\n        if (!s) return;\n\n        const span = this.dom as SVGTextElement;\n        let x1 = 0;\n        let x2 = s.length;\n        let x: number;\n\n        do {\n            x = Math.ceil((x1 + x2) / 2);\n            const w = span.getSubStringLength(0, x);\n\n            if (w > bounds) {\n                x2 = x - 1;\n            } else {\n                x1 = x;\n            }\n        } while (x1 < x2);\n\n        this.text = s.substring(0, x1) + ELLIPSIS;\n        while (x1 > 0 && this.calcWidth() > bounds) {\n            this.text = s.substring(0, --x1) + ELLIPSIS;\n        }\n    }\n\n    // setContrast(target: Element, darkColor = 'black', brightColor = 'white'): TextElement {\n    //     this.setStyle('fill', Color.getContrast(getComputedStyle(target).fill, darkColor, brightColor));\n    //     return this;\n    // }\n\n    setContrast(target: Element, darkStyle: SVGStyleOrClass, brightStyle: SVGStyleOrClass): TextElement {\n        this.setStyleOrClass(Color.isBright(getComputedStyle(target).fill) ? darkStyle : brightStyle);\n        return this;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    clearDom(): void {\n        super.clearDom();\n        this._dirty = true;\n    }\n            \n    setStyles(styles: any): boolean {\n        //if (this._text === '미국') debugger;\n        let changed = super.setStyles(styles);\n        if (changed) {\n            this.layoutText();\n        }\n        return changed;\n    }\n\n    setStyle(prop: string, value: string): boolean {\n        let changed = super.setStyle(prop, value);\n        if (changed) {\n            this.layoutText();\n        }\n        return changed;\n    }\n\n    getBBounds(): IRect {\n        if (this._dirty || this._styleDirty) {\n            this._bounds = (this.dom as SVGGraphicsElement).getBBox();\n            this._dirty = this._styleDirty = false;\n        }\n        return this._bounds;\n    }\n\n    getBBoundsTest(): IRect {\n        if (this._dirty || this._styleDirty) {\n            this._bounds = {\n                x: this.x,\n                y: this.y,\n                width: 100,\n                height: 30\n            };\n            this._dirty = this._styleDirty = false;\n        }\n        return this._bounds;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n","////////////////////////////////////////////////////////////////////////////////\n// Sides.ts\n// 2023. 07. 11. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum } from \"./Common\";\nimport { IRect } from \"./Rectangle\";\n\nexport interface ISides {\n\tleft: number;\n\tright: number;\n\ttop: number;\n\tbottom: number;\n}\n\nexport const equalsSides = function (r1: ISides, r2: ISides): boolean {\n    if (r1 === r2) return true;\n    if (r1 && r2) {\n        return r1.left === r2.left && r1.right === r2.right && r1.top === r2.top && r1.bottom === r2.bottom;\n    }\n    return false;\n}\n\n/** @internal */\nexport class Sides {\n\t\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n\tstatic readonly Empty = Object.freeze(new Sides());\n\tstatic Temp = new Sides();\n    static create(top: number, bottom?: number, left?: number, right?: number): Sides {\n        if (!isNaN(left)) {\n            return new Sides(top, bottom, left, right);\n        } else if (!isNaN(bottom)) {\n            return new Sides(top, top, bottom, bottom);\n        } else {\n            return new Sides(top, top, top, top);\n        }\n    }\n    static createFrom(value: string): Sides {\n        const vals = value.split(/\\s*[\\s,]+\\s*/g);\n        return this.create.call(null, ...vals.map(v => +v));\n    }\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(public top = 0, public bottom = 0, public left = 0, public right = 0) {\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n\t//-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    clone(): Sides {\n        return new Sides(this.top, this.bottom, this.left, this.right);\n    }\n\n    applyPadding(cs: CSSStyleDeclaration): Sides {\n        this.left = pickNum(cs.paddingLeft, 0);\n        this.right = pickNum(cs.paddingRight, 0);\n        this.top = pickNum(cs.paddingTop, 0);\n        this.bottom = pickNum(cs.paddingBottom, 0);\n        return this;\n    }\n\n    applyMargin(cs: CSSStyleDeclaration): Sides {\n        this.left = pickNum(cs.marginLeft, 0);\n        this.right = pickNum(cs.marginRight, 0);\n        this.top = pickNum(cs.marginTop, 0);\n        this.bottom = pickNum(cs.marginBottom, 0);\n        return this;\n    }\n\n    shrink(r: IRect): IRect {\n        return {\n            x: r.x + this.left,\n            y: r.y + this.top,\n            width: r.width - this.left - this.right,\n            height: r.height - this.top - this.bottom\n        };\n    }\n\n\t//-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n\ttoString(): string {\n\t\treturn \"{top: \" + this.top + \", bottom: \" + this.bottom + \", left: \" + this.left + \", right: \" + this.right + \"}\";\n    }\n\n\t//-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n","////////////////////////////////////////////////////////////////////////////////\n// RectElement.ts\n// 2023. 06. 03. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { PathElement, RcElement } from '../RcControl';\nimport { IRect } from '../Rectangle';\nimport { _undefined } from '../Types';\nimport { SvgShapes } from './SvgShape';\n\nexport interface IRectShape extends IRect {\n    r?: number;\n    rx?: number;\n    ry?: number;\n    rLeft?: number;\n    rTop?: number;\n    rRight?: number;\n    rBottom?: number;\n}\n\nexport class RectElement extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    static create(doc: Document, styleName: string, x: number, y: number, width: number, height: number, r = 0): RectElement {\n        return new RectElement(doc, styleName, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            r: r\n        });\n    }\n\n    //-------------------------------------------------------------------------\n    // fields   \n    //-------------------------------------------------------------------------\n    private _rect: IRectShape;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string = _undefined, rect: IRectShape = _undefined) {\n        super(doc, styleName, 'rect');\n\n        this.rect = rect;\n        this.setAttr('shapeRendering', 'cripsEdges');\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /** rect */\n    get rect(): IRectShape {\n        return this._rect && {...this._rect};\n    }\n    set rect(value: IRectShape) {\n        if (value !== this._rect) {\n            this._rect = value && {...value}\n            if (value) {\n                this.setRect(value);\n                \n                let rx = value.rx || value.r;\n                let ry = value.ry || value.r;\n                rx > 0 && this.dom.setAttribute('rx', String(rx));\n                ry > 0 && this.dom.setAttribute('rx', String(ry));\n            }\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    setBounds(x: number, y: number, width: number, height: number, r = 0): RectElement {\n        this.rect = {x, y, width, height, r};\n        return this;\n    }\n\n    setBox(x: number, y: number, width: number, height: number): void {\n        if (height < 0) {\n            this.rect = {x, y: y + height, width, height: -height};\n        } else {\n            this.rect = {x, y, width, height};\n        }\n    }\n\n    setRadius(value: number): void {\n        if (value > 0) {\n            if (this._rect) {\n                this._rect.rx = this._rect.ry = value;\n            }\n            this.dom.setAttribute('rx', String(value));\n            this.dom.setAttribute('ry', String(value));\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n\nexport class BoxElement extends PathElement {\n\n    //-------------------------------------------------------------------------\n    // fields   \n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string = _undefined) {\n        super(doc, styleName);\n    }\n\n\t//-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    setBox(x1: number, y1: number, x2: number, y2: number): BoxElement {\n        this.setPath(SvgShapes.box(x1, y1, x2, y2));\n        return this;\n    }\n}\n\nexport class BackElement extends RectElement {\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, rect: IRectShape = _undefined) {\n        super(doc, 'dlchart-point-back', rect);\n\n        // this.setStyle('opacity', '0');\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ChartElement.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ClipElement, ClipPathElement, RcElement } from \"../common/RcControl\";\nimport { IRect } from \"../common/Rectangle\";\nimport { Sides } from \"../common/Sides\";\nimport { ISize } from \"../common/Size\";\nimport { _undefined } from \"../common/Types\";\nimport { RectElement } from \"../common/impl/RectElement\";\nimport { IChart } from \"../model/Chart\";\nimport { ChartItem } from \"../model/ChartItem\";\n\nexport abstract class ChartElement<T extends ChartItem> extends RcElement {\n \n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    model: T;\n    mw: number;\n    mh: number;\n    _debugRect: RectElement;\n    \n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName = _undefined) {\n        super(doc, styleName, 'g');\n\n        if (RcElement.DEBUGGING) {\n            this.add(this._debugRect = new RectElement(doc, 'rct-debug'));\n            this._debugRect.setAttr('pointerEvents', 'none');\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    chart(): IChart {\n        return this.model.chart;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    measure(doc: Document, model: T, hintWidth: number, hintHeight: number, phase: number): ISize {\n        this.setStyleOrClass(model.style);\n        if (model !== this.model) {\n            this.model = model;\n            this._doModelChanged();\n        }\n\n        const sz = this._doMeasure(doc, this.model, hintWidth, hintHeight, phase);\n\n        this.mw = sz.width;\n        this.mh = sz.height;\n        return sz;\n    }\n\n    layout(param?: any): ChartElement<ChartItem> {\n        this._doLayout(param);\n\n        if (RcElement.DEBUGGING) {\n            if (!this._debugRect) {\n                this.insertFirst(this._debugRect = new RectElement(this.doc, 'rct-debug'));\n                //this._debugRect.setAttr('pointerEvents', 'none');\n            }\n            if (this.width > 1 && this.height > 1) {\n                this._debugRect.setRect(this._getDebugRect());\n            }\n        } else if (this._debugRect) {\n            this._debugRect.remove();\n            this._debugRect = null;\n        }\n        return this;\n    }\n\n    resizeByMeasured(): ChartElement<ChartItem> {\n        this.resize(this.mw, this.mh);\n        return this;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal methods\n    //-------------------------------------------------------------------------\n    protected _getDebugRect(): IRect {\n        return {\n            x: 0,\n            y: 0,\n            width: this.width,\n            height: this.height\n        }\n    }\n\n    protected abstract _doMeasure(doc: Document, model: T, intWidth: number, hintHeight: number, phase: number): ISize;\n    protected abstract _doLayout(param: any): void;\n\n    protected _invalidate(): void {\n        this.control?.invalidateLayout();\n    }\n\n    protected _doModelChanged(): void {\n    }\n}\n\nexport abstract class BoundableElement<T extends ChartItem> extends ChartElement<T> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _background: RectElement;\n    protected _margins = new Sides();\n    protected _paddings = new Sides();\n    private _borderRadius: number;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string, backStyle: string) {\n        super(doc, styleName);\n\n        this.add(this._background = new RectElement(doc, backStyle));\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getDebugRect(): IRect {\n        return this._margins.shrink(super._getDebugRect());\n    }\n\n    measure(doc: Document, model: T, hintWidth: number, hintHeight: number, phase: number): ISize {\n        this.setStyleOrClass(model.style);\n        if (model !== this.model) {\n            this.model = model;\n            this._doModelChanged();\n        }\n        this._setBackgroundStyle(this._background);\n\n        // TODO: 캐쉬!\n        const cs = getComputedStyle(this.dom);\n        const csBack = getComputedStyle(this._background.dom);\n        const padding = this._paddings;\n        const margin = this._margins;\n\n        padding.applyPadding(csBack);\n        this._borderRadius = parseFloat(csBack.borderRadius) || 0;\n        margin.applyMargin(cs);\n\n        const sz = this._doMeasure(doc, model, hintWidth, hintHeight, phase);\n\n        sz.height += margin.top + margin.bottom + padding.top + padding.bottom;\n        sz.width += margin.left + margin.right + padding.left + padding.right;\n\n        this.mw = sz.width;\n        this.mh = sz.height;\n        return sz;\n    }\n\n    layout(param?: any): ChartElement<ChartItem> {\n        super.layout(param);\n\n        // background\n        const margin = this._margins;\n\n        this._background.setBounds(\n            margin.left + this._getBackOffset(), \n            margin.top, \n            this.width - margin.left - margin.right,\n            this.height - margin.top - margin.bottom,\n            this._borderRadius\n        );\n\n        return this;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected abstract _setBackgroundStyle(back: RectElement): void;\n    \n    protected _getBackOffset(): number {\n        return 0;\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// AxisView.ts\n// 2023. 06. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { RcElement } from \"../common/RcControl\";\nimport { toSize } from \"../common/Rectangle\";\nimport { ISize, Size } from \"../common/Size\";\nimport { DEG_RAD } from \"../common/Types\";\nimport { LineElement } from \"../common/impl/PathElement\";\nimport { RectElement } from \"../common/impl/RectElement\";\nimport { TextAnchor, TextElement } from \"../common/impl/TextElement\";\nimport { Axis, AxisGuide, AxisLabelArrange, AxisPosition, AxisTickMark, AxisTitle, IAxisTick } from \"../model/Axis\";\nimport { ChartItem } from \"../model/ChartItem\";\nimport { AxisGuideContainer, AxisGuideView } from \"./BodyView\";\nimport { BoundableElement, ChartElement } from \"./ChartElement\";\n\nexport class AxisTitleView extends BoundableElement<AxisTitle> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    static readonly TITLE_CLASS = 'rct-axis-title';\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _textView: TextElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, AxisTitleView.TITLE_CLASS, 'rct-axis-title-background');\n\n        this.add(this._textView = new TextElement(doc));\n        // this._textView.anchor = TextAnchor.START;\n    }\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    protected _setBackgroundStyle(back: RectElement): void {\n        back.setStyleOrClass(this.model.backgroundStyle);\n    }\n\n    protected _getBackOffset(): number {\n        return -this.width / 2; // text anchor가 MIDDLE이라서...\n    }\n\n    protected _doMeasure(doc: Document, model: AxisTitle, hintWidth: number, hintHeight: number, phase: number): ISize {\n        this.rotation = 0;\n        this._textView.text = model.text;\n\n        return toSize(this._textView.getBBounds());\n    }\n\n    protected _doLayout(isHorz: boolean): void {\n        const padding = this._paddings;\n        const margin = this._margins;\n\n        // rotation\n        if (!isHorz) {\n            this.setRotaion(0, this.height / 2, this.model.axis.position === AxisPosition.OPPOSITE ? 90 : 270);\n        }\n\n        // text\n        this._textView.translateY(margin.top + padding.top);\n    }\n\n    layout(param?: any): ChartElement<ChartItem> {\n        super.layout(param);\n\n        if (this._debugRect) {\n            this._debugRect.setBounds(-this.width / 2, 0, this.width, this.height)\n        }\n        return this;\n    }\n}\n\nclass AxisTickMarkView extends ChartElement<AxisTickMark> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _lineView: LineElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, AxisView.TICK_CLASS);\n\n        this.add(this._lineView = new LineElement(doc));\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doMeasure(doc: Document, model: AxisTickMark, hintWidth: number, hintHeight: number, phase: number): ISize {\n        return Size.create(hintWidth, hintHeight);\n    }\n\n    protected _doLayout(param: any): void {\n        if (this.model.axis._isHorz) {\n            // this._lineView.setVLine(0, 0, this.height);\n            this._lineView.setVLineC(0, 0, this.height);\n        } else {\n            // this._lineView.setHLine(0, 0, this.width);\n            this._lineView.setHLineC(0, 0, this.width);\n        }\n    }\n}\n\nclass AxisLabelElement extends TextElement {\n\n    index = -1;\n    value: number;\n    col = 0;\n    row = 0;\n    tickWidth = 0;\n    // bbox: IRect;\n\n    get rotatedWidth(): number {\n        const d = this.rotation * DEG_RAD;\n        const r = this.getBBounds();\n\n        return Math.abs(Math.sin(d) * r.height) + Math.abs(Math.cos(d) * r.width);\n    }\n\n    get rotatedHeight(): number {\n        const d = this.rotation * DEG_RAD;\n        const r = this.getBBounds();\n\n        return Math.abs(Math.cos(d) * r.height) + Math.abs(Math.sin(d) * r.width);\n    }\n}\n\nexport class AxisView extends ChartElement<Axis> {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly AXIS_CLASS = 'rct-axis';\n    static readonly LINE_CLASS = 'rct-axis-line';\n    static readonly TICK_CLASS = 'rct-axis-tick-mark';\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _lineView: LineElement;\n    private _titleView: AxisTitleView;\n    private _markContainer: RcElement;\n    private _markViews: AxisTickMarkView[] = [];\n    private _labelContainer: RcElement;\n    private _labelViews: AxisLabelElement[] = []; \n    private _markLen: number;\n    private _labelSize: number;\n    private _labelRowPts: number[];\n\n    _guideViews: AxisGuideView<AxisGuide>[];\n    _frontGuideViews: AxisGuideView<AxisGuide>[];\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, AxisView.AXIS_CLASS);\n\n        this.add(this._lineView = new LineElement(doc, AxisView.LINE_CLASS));\n        this.add(this._titleView = new AxisTitleView(doc));\n        this.add(this._markContainer = new RcElement(doc, 'rct-axis-tick-marks'));\n        this.add(this._labelContainer = new RcElement(doc, 'rct-axis-tick-labels'));\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    checkHeight(doc: Document, width: number, height: number): number {\n        const m = this.model;\n        let h = 0;\n\n        // labels\n        // const t = this.$_prepareChecker(doc, m);\n        // let h = m.tick.visible ? m.tick.length : 0; \n\n        // h += t ? (t.rotation != 0 ? t.rotatedHeight : t.getBBounds().height) : 0;\n\n        if (this.$_prepareLabels(doc, m)) {\n            h += this.$_measureLabelsHorz(m, this._labelViews, width);\n        }\n\n        // title\n        if (this._titleView.visible = m.title.isVisible()) {\n            h += this._titleView.measure(doc, m.title, width, height, 1).height;\n        }\n        return h;\n    }\n\n    checkWidth(doc: Document, width: number, height: number): number {\n        const m = this.model;\n        let w = 0;\n        \n        // labels\n        // const t = this.$_prepareChecker(doc, m);\n        // let w = m.tick.visible ? m.tick.length : 0; \n\n        // w += t ? t.getBBounds().width : 0;\n\n        if (this.$_prepareLabels(doc, m)) {\n            w += this.$_measureLabelsVert(this._labelViews);\n        }\n\n        // title\n        if (this._titleView.visible = m.title.isVisible()) {\n            w += this._titleView.measure(doc, m.title, width, height, 1).height; // [NOTE] width가 아니다.\n        }\n        return w;\n    }\n\n    prepareGuides(doc: Document, container: AxisGuideContainer, frontContainer: AxisGuideContainer): void {\n        let guides = this.model.guides.filter(g => !g.front);\n        container.addAll(doc, guides);\n\n        guides = this.model.guides.filter(g => g.front);\n        frontContainer.addAll(doc, guides);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doMeasure(doc: Document, model: Axis, hintWidth: number, hintHeight: number, phase: number): ISize {\n        const horz = model._isHorz;\n        const titleView = this._titleView;\n        const labelViews = this._labelViews;\n        let sz = 0;\n\n        // line\n        this._lineView.visible = model.line.visible;\n\n        // tick marks \n        this._markLen = model.tick.length || 0; // tick.mark.visible이 false이어도 자리는 차지한다.\n        if (this._markLen > 0) {\n            sz += model.tick.margin || 0;\n        }\n        sz += this._markLen;\n        if (this.$_prepareTickMarks(doc, model)) {\n            this._markViews.forEach(v => v.measure(doc, model.tick, hintWidth, hintHeight, phase));\n        }\n\n        // labels\n        if (this.$_prepareLabels(doc, model)) {\n            if (horz) {\n                sz += this._labelSize = this.$_measureLabelsHorz(model, labelViews, hintWidth);\n            } else {\n                sz += this._labelSize = this.$_measureLabelsVert(labelViews);\n            }\n        } else {\n            this._labelSize = 0;\n        }\n\n        // title\n        if (titleView.visible) { // checkHeight/checkWidth 에서 visible 설정.\n            sz += titleView.mh;\n            sz += model.title.gap || 0;\n        }\n\n        return Size.create(horz ? hintWidth : sz, horz ? sz : hintHeight);\n    }\n    \n    protected _doLayout(): void {\n        const model = this.model;\n        const horz = model._isHorz;\n        const opp = model._isOpposite;\n        const ticks = model._ticks;\n        const markPts = model._markPoints;\n        const titleView = this._titleView;\n        const labelViews = this._labelViews;\n        const markLen = this._markLen;\n        const w = this.width;\n        const h = this.height;\n\n        // line\n        if (this._lineView.visible) {\n            if (horz) {\n                this._lineView.setHLine(opp ? h : 0, 0, w);\n                // this._lineView.setHLineC(opp ? h : 0, 0, w);\n            } else {\n                this._lineView.setVLine(opp ? 0 : w, 0, h);\n                // this._lineView.setVLineC(opp ? 0 : w, 0, h);\n            }\n        }\n\n        // tick marks\n        if (this._markContainer.visible) {\n            if (horz) {\n                this._markViews.forEach((v, i) => {\n                    v.resize(1, markLen);\n                    v.layout().translate(markPts[i], opp ? h - markLen : 0);\n                })\n            } else {\n                this._markViews.forEach((v, i) => {\n                    v.resize(markLen, 1);\n                    v.layout().translate(opp ? 0 : w - markLen, h - markPts[i]);\n                })\n            }\n        }\n\n        // labels\n        const len = markLen + (model.tick.margin || 0);\n\n        if (this._labelContainer.visible) {\n            if (horz) {\n                this.$_layoutLabelsHorz(labelViews, ticks, opp, w, h, len);\n            } else {\n                this.$_layoutLabelsVert(labelViews, ticks, opp, w, h, len);\n            }\n        }\n\n        // title\n        if (titleView.visible) {\n            const labelSize = this._labelSize;\n            const gap = model.title.gap || 0;\n\n            titleView.resizeByMeasured().layout(horz);\n\n            if (horz) {\n                const y = opp ? 0 : len + labelSize + gap;\n\n                // titleView.translate((w - titleView.width) / 2, this._markLen + labelSize);\n                titleView.translate(w / 2, y);\n            } else {\n                const x = opp ? len + labelSize + gap + titleView.height / 2 : w - len - labelSize - gap - titleView.height / 2;\n\n                titleView.translate(x, (h - titleView.height) / 2);\n            }\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    // private $_prepareChecker(doc: Document, m: Axis): AxisLabelElement {\n    //     if (this._labelContainer.visible = m.label.visible) {\n    //         const ticks = m._ticks;\n    //         let tick = ticks[0];\n    //         let t: AxisLabelElement;\n\n    //         if (tick) {\n    //             if (m.label.getRotation() !== 0) {\n    //                 let len = tick.label.length;\n    //                 let j = 0;\n\n    //                 for (let i = 1; i < ticks.length; i++) {\n    //                     if (ticks[i].label.length > len) {\n    //                         len = ticks[i].label.length;\n    //                         tick = ticks[i];\n    //                         j = i;\n    //                     }\n    //                 }\n    //                 t = this._labelViews[j];\n\n    //             } else {\n    //                 t = this._labelViews[0];\n    //             }\n    \n    //             if (!t) {\n    //                 t = new AxisLabelElement(doc, 'rct-axis-label');\n    //                 t.anchor = TextAnchor.START;\n    //                 this._labelContainer.add(t);\n    //                 this._labelViews.push(t);\n    //             }\n        \n    //             t.text = tick.label\n    //             return t;\n    //         }\n    //     }\n    // }\n\n    private $_prepareTickMarks(doc: Document, m: Axis): boolean {\n        const container = this._markContainer;\n\n        if (container.visible = m.tick.visible) {\n            const pts = m._markPoints;\n            const nMark = pts.length;\n            const views = this._markViews;\n    \n            while (views.length < nMark) {\n                const v = new AxisTickMarkView(doc);\n    \n                container.add(v);\n                views.push(v);\n            }\n            while (views.length > nMark) {\n                views.pop().remove();\n            }\n            return true;\n        }\n    }\n\n    private $_prepareLabels(doc: Document, m: Axis): number {\n        const container = this._labelContainer;\n\n        if (container.visible = m.label.visible) {\n            const ticks = m._ticks;\n            const nTick = ticks.length;\n            const views = this._labelViews;\n\n            while (views.length < nTick) {\n                const t = new AxisLabelElement(doc, 'rct-axis-label');\n    \n                t.anchor = TextAnchor.START;\n                container.add(t);\n                views.push(t);\n            }\n            while (views.length > nTick) {\n                views.pop().remove();\n            }\n\n            views.forEach((v, i) => {\n                v.value = ticks[i].value;\n                v.text = ticks[i].label;\n            });\n            return views.length;\n        }\n        return 0;\n    }\n\n    private $_getRows(views: AxisLabelElement[]): number {\n        return 2;\n    }\n\n    private $_getStep(view: AxisLabelElement[]): number {\n        return 2;\n    }\n\n    private $_measureLabelsHorz(axis: Axis, views: AxisLabelElement[], width: number): number {\n        const m = axis.label;\n        let step = m.step >> 0;\n        let rows = m.rows >> 0;\n        let rotation = m.rotation % 360;\n        let overlapped = false;\n        let sz: number;\n\n        if (step > 0 || rows > 0 || rotation > 0 || rotation < 0 ) {\n        } else {\n            // check overalpped\n            for (let i = 0; i < views.length - 1; i++) {\n                const w = axis.getLabelLength(width, views[i].value);\n\n                if (views[i].getBBounds().width >= w) {\n                    overlapped = true;\n                    break;\n                }\n            }\n            if (overlapped) {\n                switch (m.autoArrange) {\n                    case AxisLabelArrange.ROTATE:\n                        rotation = -45;\n                        break;\n                    case AxisLabelArrange.ROWS:\n                        rows = this.$_getRows(views);\n                        break;\n                    case AxisLabelArrange.STEP:\n                        step = this.$_getStep(views);\n                        break;\n                }\n                overlapped = false;\n            }\n        }\n\n        if (step > 1) {\n            const start = Math.max(0, m.startStep || 0);\n            \n            views.forEach(v => v.index = -1);\n            for (let i = start; i < views.length; i += step) {\n                views[i].index = i;\n            }\n            views.forEach(v => v.setVisible(v.index >= 0));\n            views = views.filter(v => v.visible);\n        } else {\n            views.forEach((v, i) => {\n                v.index = i;\n                v.setVisible(true);\n            });\n        }\n\n        if (rows > 1) {\n            views.forEach((v, i) => v.row = i % rows);\n            // this._labelRowPts = new Array<number>(rows).fill(0);\n            this._labelRowPts = [];\n        } else {\n            views.forEach(v => v.row = 0);\n            this._labelRowPts = [0];\n        }\n\n        if (overlapped) {\n            rotation = -45;\n        } else {\n            rotation = rotation || 0;\n        }\n        views.forEach(v => {\n            v.rotation = rotation;\n        });\n\n        if (rows > 1) {\n            const pts = this._labelRowPts;\n\n            for (let i = 0; i < rows; i++) {\n                pts.push(0);\n            }\n\n            if (!isNaN(rotation) && rotation != 0) {\n                views.forEach(v => {\n                    pts[v.row] = Math.max(pts[v.row], v.rotatedHeight);\n                })\n            } else {\n                views.forEach(v => {\n                    pts[v.row] = Math.max(pts[v.row], v.getBBounds().height);\n                })\n            }\n\n            pts.unshift(0);\n            for (let i = 2; i < pts.length; i++) {\n                pts[i] += pts[i - 1];\n            }\n            return pts[pts.length - 1];\n\n        } else {\n            if (!isNaN(rotation) && rotation != 0) {\n                sz = views[0].rotatedHeight;\n                for (let i = 1; i < views.length; i++) {\n                    sz = Math.max(sz, views[i].rotatedHeight);\n                }\n            } else {\n                sz = views[0].getBBounds().height;\n                for (let i = 1; i < views.length; i++) {\n                    sz = Math.max(sz, views[i].getBBounds().height);\n                }\n            }\n        }\n        return sz;\n    }\n\n    private $_measureLabelsVert(views: AxisLabelElement[]): number {\n        let sz = views[0].getBBounds().width;\n\n        for (let i = 1; i < views.length; i++) {\n            sz = Math.max(sz, views[i].getBBounds().width);\n        }\n        return sz;\n    }\n\n    private $_layoutLabelsHorz(views: AxisLabelElement[], ticks: IAxisTick[], opp: boolean, w: number, h: number, len: number): void {\n        const pts = this._labelRowPts;\n\n        views.forEach(v => {\n            if (v.visible) {\n                const rot = v.rotation;\n                const a = rot * DEG_RAD;\n                const r = v.getBBounds();\n                const ascent = Math.floor(v.getAscent(r.height));\n                let x = ticks[v.index].pos;\n                let y = opp ? (h - len - r.height - pts[v.row]) : (len + pts[v.row]);\n    \n                if (rot < -15 && rot >= -90) {\n                    v.anchor = TextAnchor.END;\n                    x += -Math.sin(a) * ascent / 2 - 1;\n                    y += Math.cos(a) * ascent - ascent;\n                } else if (rot > 15 && rot <= 90) {\n                    v.anchor = TextAnchor.START;\n                    x -= Math.sin(a) * ascent / 2 - 1;\n                    y += Math.cos(a) * ascent - ascent;\n                } else {\n                    v.anchor = TextAnchor.MIDDLE;\n                }\n                v.translate(x, y);\n            }\n        });\n    }\n\n    private $_layoutLabelsVert(views: AxisLabelElement[], ticks: IAxisTick[], opp: boolean, w: number, h: number, len: number): void {\n        const x = opp ? len : w - len;\n    \n        views.forEach((v, i) => {\n            if (v.visible) {\n                const r = v.getBBounds();\n                const x2 = opp ? x : x - r.width;\n    \n                v.translate(x2, h - ticks[i].pos - r.height / 2);\n            }\n        });\n}\n}","////////////////////////////////////////////////////////////////////////////////\n// ElementPool.ts\n// 2020. 10. 23. created by dataludi\n// -----------------------------------------------------------------------------\n// Copyright (c) 2020 Dataludi Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { GroupElement } from \"./impl/GroupElement\";\nimport { RcElement } from \"./RcControl\";\nimport { RcObject } from \"./RcObject\";\n\nexport type Visitor<T extends RcElement> = (element: T, index?: number, count?: number) => void;\n\n/** @internal */\nexport class ElementPool<T extends RcElement> extends RcObject {\n\t\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    removeDelay = 0;\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _owner: RcElement;\n    private _creator: { new (doc: Document, styleName?: string): T };\n    private _pool: T[] = [];\n    private _views: T[] = [];\n    private _removes: T[] = [];\n    private _styleName: string;\n\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(owner: RcElement, creator: { new (doc: Document, styleName?: string): T }, styleName?: string, removeDelay = 0) {\n        super();\n\n        this._owner = owner;\n        this._creator = creator;\n        this._styleName = styleName;\n        this.removeDelay = removeDelay;\n    }\n\n    protected _doDestory(): void {\n        this._owner = null;\n        this._creator = null;\n\n        super._doDestory();\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    get isEmpty(): boolean {\n        return this._views.length === 0;\n    }\n\n    get count(): number {\n        return this._views.length;\n    }\n\n    get first(): T {\n        return this._views[0];\n    }\n\n    get last(): T {\n        return this._views[this._views.length - 1];\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    get(index: number): T {\n        return this._views[index];\n    }\n\n    getAll(): T[] {\n        return this._views.slice();\n    }\n\n    elementOf(dom: Element): T {\n        for (let v of this._views) {\n            if (v.dom.contains(dom)) return v;\n        }\n    }\n\n    private $_create(doc: Document, index = -1, count = 0): T {\n        let v = this._pool.pop();\n        \n        if (!v) {\n            v = new this._creator(doc, this._styleName);\n        }\n        this._owner.add(v);\n        return v;\n}\n\n    prepare(count: number, visitor?: Visitor<T>, initor?: Visitor<T>): ElementPool<T> {\n        const doc = this._owner.doc;\n        const pool = this._pool;\n        const views = this._views;\n\n        // // TODO: 왜 이런 일이 발생하지?\n        // for (let v of views) {\n        //     if (!v.parent) {\n        //         this._owner.add(v);\n        //     }\n        // }\n\n        while (views.length > count) {\n            pool.push(views.pop().remove() as T);\n        }\n        while (views.length < count) {\n            const v = this.$_create(doc);\n            views.push(v);\n            initor?.(v, views.length - 1, count);\n        }\n\n        visitor && this.forEach(visitor);\n        return this;\n    }\n\n    /**\n     * 기존 view를 재활용하도록 한다.\n     * objProp가 설정되지 않으면 objs의 개별 obj 자체외 비교한다.\n     */\n    reprepare(viewProp: string, objs: RcObject[], objProp: string, cleaner?: Visitor<T>, initor?: Visitor<T>, visitor?: Visitor<T>): ElementPool<T> {\n        const doc = this._owner.doc;\n        const pool = this._pool;\n        const oldViews = this._views;\n        const views: T[] = [];\n\n        for (let i = this._removes.length - 1; i >= 0; i--) {\n            if (!this._removes[i].parent) {\n                const v = this._removes.splice(i, 1)[0];\n                pool.push(v);\n            }\n        }\n\n        for (let i = 0, cnt = objs.length; i < cnt; i++) {\n            const obj = objs[i];\n            let found = -1;\n\n            if (viewProp) {\n                for (let i = 0, cnt = oldViews.length; i < cnt; i++) {\n                    const oldKey = oldViews[i][viewProp];\n    \n                    if (objProp && oldKey === obj[objProp] || !objProp && oldKey === obj) {\n                        views.push(oldViews[i]);\n                        found = i;\n                        break;\n                    }\n                }\n            }\n\n            if (found >= 0) {\n                const v = oldViews.splice(found, 1)[0];\n                if (!v.parent) this._owner.add(v);\n            } else {\n                const v = this.$_create(doc, i, cnt);\n                views.push(v);\n                initor?.(v, i, cnt);\n            }\n        }\n    \n        for (let i = 0, cnt = oldViews.length; i < cnt; i++) {\n            const v = oldViews[i];\n\n            if (v.removing) {\n                //views.push(v);\n            } else {\n                if (this.removeDelay > 0) {\n                    //pool.push(v.removeLater(true, this.removeDelay) as T);\n                    this._removes.push(v.removeLater(false, this.removeDelay) as T);\n                } else {\n                    pool.push(v.remove() as T);\n                }\n                cleaner?.(v, i, cnt);\n            }\n        }\n\n        this._views = views;\n        // console.log('pool views', this._views.length);\n        visitor && this.forEach(visitor);\n        return this;\n    }\n\n    borrow(): T {\n        const elt = this._pool.pop() || new this._creator(this._owner.doc, this._styleName);\n\n        this._owner.add(elt);\n        return elt;\n    }\n\n    free(element: T, removeDelay = 0): void {\n        if (element) {\n            if (removeDelay > 0) {\n                element.removeLater(false, removeDelay);\n            } else {\n                element.remove();\n            }\n            this._pool.push(element);\n\n            const i = this._views.indexOf(element);\n            if (i >= 0) {\n                this._views.splice(i, 1);\n            }\n        }\n    }\n\n    freeAll(elements: T[], removeDelay = 0): void {\n        for (let elt of elements) {\n            this.free(elt, removeDelay);\n        }\n    }\n\n    fadeout(element: T, removeDelay: number, startOpacity?: number): void {\n        if (element) {\n            element.fadeout(removeDelay, startOpacity);\n            this._pool.push(element);\n\n            const i = this._views.indexOf(element);\n            if (i >= 0) {\n                this._views.splice(i, 1);\n            }\n        }\n    }\n\n    forEach(visitor: (v: T, i?: number, count?: number) => void): void {\n        const views = this._views;\n\n        for (let i = 0, cnt = views.length; i < cnt; i++) {\n            visitor(views[i], i, cnt);\n        }\n    }\n\n    visit(visitor: (v: T, i: number, count: number) => boolean): boolean {\n        const cnt = this._views.length;\n        let i = 0;\n\n        for (; i < cnt; i++) {\n            if (visitor(this._views[i], i, cnt) === false) {\n                break;\n            }\n        }\n        return i === cnt;\n    }\n\n    find(visitor: (v: T) => boolean): T {\n        const views = this._views;\n        for (let i = 0, cnt = views.length; i < cnt; i++) {\n            if (visitor(views[i])) return views[i];\n        }\n    }\n\n    sort(compare: (v1: T, v2: T) => number): ElementPool<T> {\n        this._views = this._views.sort(compare);\n        return this;\n    }\n\n    map(callback: (v: T) => any): any[] {\n        return this._views.map(callback);\n    }\n\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n","////////////////////////////////////////////////////////////////////////////////\n// PathBuilder.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isNumber } from \"./Common\";\nimport { IPoint } from \"./Point\";\n\nconst _num = function (v: number): number {\n    return isNaN(v) ? 0 : v;\n}\n\nexport interface IPoint2 {\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n}\n\nexport class PathBuilder {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _path: (string | number)[] = [];\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    length(): number {\n        return this._path.length;\n    }\n\n    isEmpty(): boolean {\n        return this._path.length === 0;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    clear(): PathBuilder {\n        this._path = [];\n        return this;\n    }\n\n    end(close = false): string {\n        close && this._path.push('Z');\n        return this._path.join(' ');\n    }\n\n    close(clear: boolean): string {\n        const s = this.end(true);\n        clear && this.clear();\n        return s;\n    }\n\n    move(x: number | IPoint, y?: number): PathBuilder {\n        if (isNumber(x)) {\n            this._path.push('M', _num(x), _num(y));\n        } else {\n            this._path.push('M', _num(x.x), _num(x.y));\n        }\n        return this;\n    }\n\n    moveBy(x: number | IPoint, y?: number): PathBuilder {\n        if (isNumber(x)) {\n            this._path.push('m', _num(x), _num(y));\n        } else {\n            this._path.push('m', _num(x.x), _num(x.y));\n        }\n        return this;\n    }\n\n    line(x: number | IPoint, y?: number): PathBuilder {\n        if (isNumber(x)) {\n            this._path.push('L', _num(x), _num(y));\n        } else {\n            this._path.push('L', _num(x.x), _num(x.y));\n        }\n        return this;\n    }\n\n    curve(cx1: number, cy1: number, cx2: number, cy2: number, x: number, y: number): PathBuilder {\n        this._path.push('C', cx1, cy1, cx2, cy2, x, y);\n        return this;\n    }\n\n    quad(x1: number | IPoint2, y1?: number, x2?: number, y2?: number): PathBuilder {\n        if (isNumber(x1)) {\n            this._path.push('Q', x1, y1, x2, y2);\n        } else {\n            this._path.push('Q', x1.x1, x1.y1, x1.x2, x1.y2);\n        }\n        return this;\n    }\n\n    rect(x: number, y: number, width: number, height: number): PathBuilder {\n        this._path.push('M', x, y, 'l', width, 0, 'l', 0, height, 'l', -width, 0);\n        return this;\n    }\n\n    lines(...pts: (number | IPoint)[]): PathBuilder {\n        if (isNumber(pts[0])) {\n            for (let i = 0; i < pts.length; i += 2) {\n                this._path.push('L', _num(pts[i] as any), _num(pts[i + 1] as any));\n            }\n        } else {\n            for (let i = 0; i < pts.length; i++) {\n                this._path.push('L', _num((pts[i] as any).x), _num((pts[i] as any).y));\n            }\n        }\n        return this;\n    }\n\n    polygon(...pts: (number | IPoint)[]): PathBuilder {\n        this.lines(...pts);\n        this._path.push('Z');\n        return this;\n    }\n\n    getMove(p = 0, remove = true): IPoint {\n        if (p < this._path.length && this._path[p] === 'M') {\n            const pt = {x: this._path[p + 1] as number, y: this._path[p + 2] as number};\n            remove && this._path.splice(p, 3);\n            return pt;\n        }\n    }\n\n    getLine(p = 0, remove = true): IPoint {\n        if (p < this._path.length && this._path[p] === 'L') {\n            const pt = {x: this._path[p + 1] as number, y: this._path[p + 2] as number};\n            remove && this._path.splice(p, 3);\n            return pt;\n        }\n    }\n\n    getQuad(p = 0, remove = true): IPoint2 {\n        if (p < this._path.length && this._path[p] === 'Q') {\n            const pt = {\n                x1: this._path[p + 1] as number, \n                y1: this._path[p + 2] as number,\n                x2: this._path[p + 3] as number, \n                y2: this._path[p + 4] as number,\n            };\n            remove && this._path.splice(p, 5);\n            return pt;\n        }\n    }\n\n    getPoints(p: number, count: number, remove = true): IPoint[] {\n        const pts: IPoint[] = [];\n\n        while (p < this._path.length && pts.length < count) {\n            if (p < this._path.length && (this._path[p] === 'M' || this._path[p] === 'L')) {\n                pts.push({x: this._path[p + 1] as number, y: this._path[p + 2] as number});\n                remove && this._path.splice(p, 3);\n            } else {\n                break;\n            }\n        }\n        return pts;\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ImageElement.ts\n// 2023. 06. 03. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { RcElement } from '../RcControl';\nimport { IRect } from '../Rectangle';\nimport { _undefined } from '../Types';\n\nexport class ImageElement extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _dirty = true;\n    private _bounds: IRect;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string) {\n        super(doc, styleName, 'image');\n\n        this.setAttr('preserveAspectRatio', 'none');\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /** image url */\n    get url(): string {\n        return this.getAttr('href');\n    }\n    set url(value: string) {\n        if (value !== this.url) {\n            this._dirty = true;\n            value ? this.setAttr('href', value) : this.unsetAttr('href');\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    setImage(url: string, width: number, height: number): boolean {\n        if (url) {\n            this.setAttr('href', url);\n            this.resize(width, height);\n            return true;\n        }\n        return false;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    getBBounds(): IRect {\n        if (this._dirty) {\n            this._bounds = (this.dom as SVGGraphicsElement).getBBox();\n            this._dirty = false;\n        }\n        return this._bounds;\n    }\n\n    protected _doSizeChanged(): void {\n        this._dirty = true;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n","////////////////////////////////////////////////////////////////////////////////\n// LabelElement.ts\n// 2023. 07. 12. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ChartText, ChartTextEffect } from \"../../model/ChartItem\";\nimport { Color } from \"../Color\";\nimport { _undefined } from \"../Types\";\nimport { GroupElement } from \"./GroupElement\";\nimport { RectElement } from \"./RectElement\";\nimport { TextAnchor, TextElement } from \"./TextElement\";\n\n/**\n * ChartText를 표시하는 텍스트 view.\n */\nexport class LabelElement extends GroupElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _back: RectElement;\n    _outline: TextElement;\n    _text: TextElement;\n    private _model: ChartText;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string = _undefined) {\n        super(doc);\n\n        // this.add(this._back = new RectElement(doc));\n\n        // this.add(this._outline = new TextElement(doc));\n        // this._outline.anchor = TextAnchor.START;\n\n        this.add(this._text = new TextElement(doc, styleName));\n        this._text.anchor = TextAnchor.START;\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /** text */\n    get text(): string {\n        return this._text.text;\n    }\n\n    /** anchor */\n    get anchor(): TextAnchor {\n        return this._text.anchor;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    setText(s: string): LabelElement {\n        this._outline && (this._outline.text = s);\n        this._text.text = s;\n        return this;\n    }\n\n    setSvg(s: string): LabelElement {\n        this._text.svg = s;\n        return this;\n    }\n\n    setModel(doc: Document, model: ChartText, contrastTarget: Element): LabelElement {\n        const e = model.effect;\n\n        this._model = model;\n        this._text.setStyleOrClass(model.style);\n\n        if (e === ChartTextEffect.BACKGROUND) {\n            this._outline?.remove();\n            if (!this._back) {\n                this._back = new RectElement(doc, 'rct-label-background');\n            }\n            this.insertFirst(this._back);\n            this._back.setStyleOrClass(model.backgroundStyle);\n\n        } else if (e === ChartTextEffect.OUTLINE) {\n            this._back?.remove();\n            if (!this._outline) {\n                this._outline = new TextElement(doc);\n                this._outline.anchor = TextAnchor.START;\n            }\n            this.insertFirst(this._outline);\n\n            this._outline.setStyleOrClass(model.style);\n\n        } else {\n            this._back?.remove();\n            this._outline?.remove();\n        }\n\n        return this;\n    }\n\n    setContrast(target: Element): LabelElement {\n        // contrast\n        if (target && this._model.autoContrast) {\n            this._text.setContrast(target, this._model.darkStyle || 'rct-label-dark', this._model.brightStyle || 'rct-label-bright');\n        }\n        // outline\n        if (this._outline && this._outline.parent) {\n            const color = Color.getContrast(getComputedStyle(this._text.dom).fill)\n            this._outline.setStyles({\n                fill: color,\n                stroke: color,\n                strokeWidth: '2px'\n            });\n        }\n        return this;\n    }\n\n    layout(): LabelElement {\n        // background\n        if (this._back && this._back.parent) {\n            const cs = getComputedStyle(this._back.dom);\n            const r = this._text.getBBounds();\n            const left = parseFloat(cs.paddingLeft) || 0;\n            const top = parseFloat(cs.paddingTop) || 0;\n\n            this._back.setBounds(\n                -left,//-r.width / 2, \n                -top,//-r.height / 2,\n                r.width + left + (parseFloat(cs.paddingRight) || 0),\n                r.height + top + (parseFloat(cs.paddingBottom) || 0),\n                3\n            )\n            // this._text.translate(left, top);\n        }\n        return this;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}","////////////////////////////////////////////////////////////////////////////////\n// RcAnimation.ts\n// 2023. 08. 07. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum } from \"./Common\";\nimport { fixnum, newObject } from \"./Types\";\n\nconst pow = Math.pow;\nconst sqrt = Math.sqrt;\nconst sin = Math.sin;\nconst cos = Math.cos;\nconst PI = Math.PI;\nconst c1 = 1.70158;\nconst c2 = c1 * 1.525;\nconst c3 = c1 + 1;\nconst c4 = (2 * PI) / 3;\nconst c5 = (2 * PI) / 4.5;\nconst bounceOut = function (x: number): number {\n\tconst n1 = 7.5625;\n\tconst d1 = 2.75;\n\n\tif (x < 1 / d1) {\n\t\treturn n1 * x * x;\n\t} else if (x < 2 / d1) {\n\t\treturn n1 * (x -= 1.5 / d1) * x + 0.75;\n\t} else if (x < 2.5 / d1) {\n\t\treturn n1 * (x -= 2.25 / d1) * x + 0.9375;\n\t} else {\n\t\treturn n1 * (x -= 2.625 / d1) * x + 0.984375;\n\t}\n}\n\nconst Easings: any = {\n    inQuad(x: number) {\n\t\treturn x * x;\n\t},\n\toutQuad(x: number) {\n\t\treturn 1 - (1 - x) * (1 - x);\n\t},\n\tinOutQuad(x: number) {\n\t\treturn x < 0.5 ? 2 * x * x : 1 - pow(-2 * x + 2, 2) / 2;\n\t},\n\tinCubic(x: number) {\n\t\treturn x * x * x;\n\t},\n\toutCubic(x: number) {\n\t\treturn 1 - pow(1 - x, 3);\n\t},\n\toutCubic2(x: number) {\n\t\treturn 1 - pow(1 - x, 4);\n\t},\n\tinOutCubic(x: number) {\n\t\treturn x < 0.5 ? 4 * x * x * x : 1 - pow(-2 * x + 2, 3) / 2;\n\t},\n\tinQuart(x: number) {\n\t\treturn x * x * x * x;\n\t},\n\toutQuart(x: number) {\n\t\treturn 1 - pow(1 - x, 4);\n\t},\n\tinOutQuart(x: number) {\n\t\treturn x < 0.5 ? 8 * x * x * x * x : 1 - pow(-2 * x + 2, 4) / 2;\n\t},\n\tinQuint(x: number) {\n\t\treturn x * x * x * x * x;\n\t},\n\toutQuint(x: number) {\n\t\treturn 1 - pow(1 - x, 5);\n\t},\n\tinOutQuint(x: number) {\n\t\treturn x < 0.5 ? 16 * x * x * x * x * x : 1 - pow(-2 * x + 2, 5) / 2;\n\t},\n\tinSine(x: number) {\n\t\treturn 1 - cos((x * PI) / 2);\n\t},\n\toutSine(x: number) {\n\t\treturn sin((x * PI) / 2);\n\t},\n\tinOutSine(x: number) {\n\t\treturn -(cos(PI * x) - 1) / 2;\n\t},\n\tinExpo(x: number) {\n\t\treturn x === 0 ? 0 : pow(2, 10 * x - 10);\n\t},\n\toutExpo(x: number) {\n\t\treturn x === 1 ? 1 : 1 - pow(2, -10 * x);\n\t},\n\tinOutExpo(x: number) {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t? 1\n\t\t\t: x < 0.5\n\t\t\t? pow(2, 20 * x - 10) / 2\n\t\t\t: (2 - pow(2, -20 * x + 10)) / 2;\n\t},\n\tinCirc(x: number) {\n\t\treturn 1 - sqrt(1 - pow(x, 2));\n\t},\n\toutCirc(x: number) {\n\t\treturn sqrt(1 - pow(x - 1, 2));\n\t},\n\tinOutCirc(x: number) {\n\t\treturn x < 0.5\n\t\t\t? (1 - sqrt(1 - pow(2 * x, 2))) / 2\n\t\t\t: (sqrt(1 - pow(-2 * x + 2, 2)) + 1) / 2;\n\t},\n\tinBack(x: number) {\n\t\treturn c3 * x * x * x - c1 * x * x;\n\t},\n\toutBack(x: number) {\n\t\treturn 1 + c3 * pow(x - 1, 3) + c1 * pow(x - 1, 2);\n\t},\n\tinOutBack(x: number) {\n\t\treturn x < 0.5\n\t\t\t? (pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n\t\t\t: (pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n\t},\n\tinElastic(x: number) {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t? 1\n\t\t\t: -pow(2, 10 * x - 10) * sin((x * 10 - 10.75) * c4);\n\t},\n\toutElastic(x: number) {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t? 1\n\t\t\t: pow(2, -10 * x) * sin((x * 10 - 0.75) * c4) + 1;\n\t},\n\tinOutElastic(x: number) {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t? 1\n\t\t\t: x < 0.5\n\t\t\t? -(pow(2, 20 * x - 10) * sin((20 * x - 11.125) * c5)) / 2\n\t\t\t: (pow(2, -20 * x + 10) * sin((20 * x - 11.125) * c5)) / 2 + 1;\n\t},\n\tinBounce(x: number) {\n\t\treturn 1 - bounceOut(1 - x);\n\t},\n\toutBounce: bounceOut,\n\tinOutBounce(x: number) {\n\t\treturn x < 0.5  \n\t\t\t? (1 - bounceOut(1 - 2 * x)) / 2\n\t\t\t: (1 + bounceOut(2 * x - 1)) / 2;\n    },\n    // cubicBezier(x: number) {\n    //     function cb(t, p0, p1, p2, p3){\n    //         var c = 3 * (p1 - p0),\n    //             b = 3 * (p2 - p1) - c,\n    //             a = p3 - p0 - c - b;\n          \n    //         return a * Math.pow(t, 3) + b * Math.pow(t, 2) + (c * t) + p0;\n    //     }\n    //     return cb(x, 0.000, 0.775, 0.005, 1.005);\n    // }\n}\n\nexport const createAnimation = function (dom: Element, styleProp: string, toValue: any, duration: number, finishHandler: () => void): Animation {\n    const frame = newObject(styleProp, toValue);\n    const ani = dom.animate([{}, frame], {\n        duration: duration,\n        fill: 'none'\n    });\n    ani && finishHandler && ani.addEventListener('finish', finishHandler);\n    return ani;\n}\n\nexport abstract class RcAnimation {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly DURATION = 700;\n    static readonly SHORT_DURATION = 300;\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    delay = 0;\n    duration = RcAnimation.DURATION;\n    easing = 'inOutSine';\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _easing: (x: number) => number;\n    private _started: number;\n    private _timer: any;\n    private _handler = () => {\n        const dt = +new Date() - this._started - this.delay;\n        let rate = Math.min(1, Math.max(0, fixnum(dt / this.duration)));\n\n        if (this._easing) {\n            rate = this._easing(rate);\n        }\n\n        try {\n            if (!this._doUpdate(rate)) {\n                this._stop();\n            }\n        } finally {\n            if (dt >= this.duration) {\n                this._stop();\n            } else if (this._started) {\n                window.requestAnimationFrame(this._handler)\n            }\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    start(): void {\n        this._start(this.duration, this.delay, this.easing);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _start(duration: number, delay = 0, easing: string = null): void {\n        this._stop();\n\n        this.duration = pickNum(duration, RcAnimation.DURATION);\n        this.delay = delay || 0;\n        this._easing = Easings[easing];\n        this._doStart();\n        this._started = +new Date();\n        this._timer = setTimeout(() => this._stop(), this.duration * 1.2); // 안전 장치\n        this._handler();\n    }\n\n    protected _stop(): void {\n        if (this._started) {\n            clearTimeout(this._timer);\n            this._timer = null;\n            this._started = null;\n            this._doStop();\n        }\n    }\n\n    protected _doStart(): void {\n    }\n\n    protected _doStop(): void {\n    }\n\n    protected abstract _doUpdate(rate: number): boolean;\n}","////////////////////////////////////////////////////////////////////////////////\n// SeriesAnimation.ts\n// 2023. 08. 04. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { RcAnimation } from \"../../common/RcAnimation\";\nimport { RcElement } from \"../../common/RcControl\";\nimport { pixel } from \"../../common/Types\";\nimport { Series } from \"../../model/Series\";\nimport { SeriesView } from \"../SeriesView\";\n\nexport abstract class SeriesAnimation {\n\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    static slide(series: SeriesView<Series>, options?: ISlideAnimation): void {\n        new SlideAnimation(series, options);\n    }\n\n    static fadeIn(series: SeriesView<Series>): void {\n        new StyleAnimation(series, {prop: 'opacity', start: '0', end: '1'});\n    }\n\n    static grow(series: SeriesView<Series>): void {\n        new GrowAnimation(series);\n    }\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(series: SeriesView<Series>, options?: any) {\n        const ani = this._createAnimation(series, options);\n\n        if (ani instanceof Animation) {\n            ani.addEventListener('finish', () => {\n                series._animationFinished(ani);\n            });\n            series._animationStarted(ani);\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected abstract _createAnimation(series: SeriesView<Series>, options?: any): Animation | RcAnimation;\n}\n\nexport class StyleAnimation extends SeriesAnimation {\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(series: SeriesView<Series>, options: {prop: string, start: string, end: string}) {\n        super(series, options);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _createAnimation(v: SeriesView<Series>, options: {prop: string, start: string, end: string}): Animation {\n        const start = {};\n        const end = {};\n\n        start[options.prop] = options.start;\n        end[options.prop] = options.end;\n\n        return v.dom.animate([\n            start, end\n        ], {\n            duration: RcAnimation.DURATION,\n            fill: 'none'\n        });\n    }   \n}\n\nexport interface ISlideAnimation {\n    from: 'left' | 'right' | 'top' | 'bottom';\n}\n\nexport class SlideAnimation extends SeriesAnimation {\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(series: SeriesView<Series>, options?: ISlideAnimation) {\n        super(series, options);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _createAnimation(v: SeriesView<Series>, options: ISlideAnimation): Animation {\n        const cr = this.$_clipRect(v);\n        let ani: Animation;\n\n        switch (options &&options.from) {\n            case 'top':\n                ani = this.$_top(v, cr, options);\n                break;\n            case 'bottom':\n                ani = this.$_bottom(v, cr, options);\n                break;\n            case 'right':\n                ani = this.$_right(v, cr, options);\n                break;\n            default:\n                ani = this.$_left(v, cr, options);\n                break;\n        }\n\n        ani.addEventListener('finish', () => {\n            cr.dom.remove();\n        });\n        return ani;\n    }   \n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_aniOptions(options: ISlideAnimation): KeyframeAnimationOptions {\n        return {\n            duration: RcAnimation.DURATION,\n            fill: 'none'\n        };\n    }\n\n    private $_clipRect(v: SeriesView<Series>): RcElement {\n        // plot area 경계에 걸친 point들이 표시되도록 infliate한다.\n        return v.clipRect(-v.width * .1, -v.height * .1, v.width * 1.2, v.height * 1.2)\n                .setTemporary();\n        // return v.clipRect(0, 0, v.width, v.height)\n        // .setTemporary();\n    }\n\n    private $_left(v: SeriesView<Series>, cr: RcElement, options: ISlideAnimation): Animation {\n        return cr.dom.firstElementChild.animate([\n            { width: '0'},\n            { width: pixel(v.width)}\n        ], this.$_aniOptions(options));\n    }\n\n    private $_right(v: SeriesView<Series>, cr: RcElement, options: ISlideAnimation): Animation {\n        return cr.dom.firstElementChild.animate([\n            { transform: `translateX(${v.width}px)` },\n            { transform: '' }\n        ], this.$_aniOptions(options));\n    }\n\n    private $_top(v: SeriesView<Series>, cr: RcElement, options: ISlideAnimation): Animation {\n        return cr.dom.firstElementChild.animate([\n            { height: '0'},\n            { height: pixel(v.height)}\n        ], this.$_aniOptions(options));\n    }\n\n    private $_bottom(v: SeriesView<Series>, cr: RcElement, options: ISlideAnimation): Animation {\n        return cr.dom.firstElementChild.animate([\n            { transform: `translateY(${v.height}px)` },\n            { transform: '' }\n        ], this.$_aniOptions(options));\n    }\n}\n\nexport class GrowAnimation extends RcAnimation {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _series: SeriesView<Series>;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(series: SeriesView<Series>) {\n        super();\n\n        this._series = series;\n        this.start();\n    }\n\n    protected _doUpdate(rate: number): boolean {\n        if (this._series.parent) {\n            this._series.setViewRate(rate);\n            return true;\n        }\n    }\n\n    protected _doStop(): void {\n        // animation 기간 중 제거됐을 수 있다.\n        if (this._series.parent) {\n            this._series.setViewRate(NaN);\n        }\n        this._series = null;\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// SeriesView.ts\n// 2023. 06. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum } from \"../common/Common\";\nimport { ElementPool } from \"../common/ElementPool\";\nimport { PathBuilder } from \"../common/PathBuilder\";\nimport { RcAnimation } from \"../common/RcAnimation\";\nimport { LayerElement, PathElement, RcElement } from \"../common/RcControl\";\nimport { ISize, Size } from \"../common/Size\";\nimport { GroupElement } from \"../common/impl/GroupElement\";\nimport { LabelElement } from \"../common/impl/LabelElement\";\nimport { SvgShapes } from \"../common/impl/SvgShape\";\nimport { DataPoint } from \"../model/DataPoint\";\nimport { ClusterableSeries, DataPointLabel, PointItemPosition, Series } from \"../model/Series\";\nimport { CategoryAxis } from \"../model/axis/CategoryAxis\";\nimport { ChartElement } from \"./ChartElement\";\nimport { SeriesAnimation } from \"./animation/SeriesAnimation\";\n\nexport interface IPointView {\n    point: DataPoint;\n}\n\nexport class PointLabelView extends LabelElement {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: DataPoint;\n    moving = false;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-point-label');\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n\t//-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n\nexport class PointLabelContainer extends GroupElement {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _labels = [new ElementPool(this, PointLabelView), new ElementPool(this, PointLabelView)];\n    private _maps: {[key: string]: PointLabelView}[] = [];\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-series-labels');\n\n        this.setStyle('pointerEvents', 'none');\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n\t//-------------------------------------------------------------------------\n    // metehods\n    //-------------------------------------------------------------------------\n    clear(): void {\n        this._labels[0].prepare(0);\n        this._labels[1].prepare(0);\n    }\n\n    prepareLabel(doc: Document, view: PointLabelView, index: number, p: DataPoint, model: DataPointLabel): void {\n        if (view.setVisible(p.visible && !p.isNull)) {\n        // if (label.visible = !p.isNull && p.visible) {\n            const richFormat = model.text;\n            const styles = model.style;\n\n            view.point = p;\n            view.setModel(doc, model, null);\n\n            if (richFormat) {\n                model.buildSvg(view._text, model, p.getValueOf);\n                view.setStyles(styles);\n\n                if (view ._outline) {\n                    model.buildSvg(view._outline, model, p.getValueOf);\n                }\n\n                // label.setStyles(styles);\n                // label.setSvg(pointLabel.getSvg(p.getValueOf))\n                //      .setStyles(styles);\n            } else {\n                //label.setValueEx(p.value, true, 1)\n                view.setText(model.getText(p.getLabel(index)))\n                    .setStyles(styles);\n            }\n        }\n    }\n\n    prepare(doc: Document, model: Series): void {\n        const labels = this._labels;\n        const points = model.getLabeledPoints();\n        const pointLabel = model.pointLabel;\n        // const svgFormat = pointLabel.svgFormat;\n\n        if (pointLabel.visible) {\n            const maps = this._maps;\n            // const styles = pointLabel.styles;\n\n            // TODO: scroll 시에는 reprepare 필요?\n            labels[0].prepare(points.length);\n            labels[1].prepare(points.length); // TODO: 필요할 때만!\n            maps[0] = {};\n            maps[1] = {};\n\n            points.forEach((p, i) => {\n                for (let j = 0; j < p.labelCount(); j++) {\n                    const label = labels[j].get(i);\n\n                    if (label.setVisible(!p.isNull)) {\n                        this.prepareLabel(doc, label, j, p, pointLabel);\n                        maps[j][p.pid] = label;\n                    }\n                }\n            })\n\n            this.setStyleOrClass(pointLabel.style);\n\n        } else {\n            this.clear();\n        }\n    }\n\n    get(point: DataPoint, index: number): PointLabelView {\n        const map = this._maps[index]\n        return map && map[point.pid];\n    }\n\n    borrow(index: number): PointLabelView { \n        return this._labels[index].borrow();\n    }\n\n    free(index: number, view: PointLabelView, removeDelay = 0): void {\n        if (view) {\n            this._labels[index].free(view, removeDelay);\n        }\n    }\n}\n\nexport class PointLabelLine extends GroupElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: DataPoint;\n    private _line: PathElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc);\n\n        this.add(this._line = new PathElement(doc));\n    }\n\n\t//-------------------------------------------------------------------------\n    // metehods\n    //-------------------------------------------------------------------------\n    setLine(line: string | any[]): void {\n        this._line.setPath(line);\n    }\n}\n\nexport class PointLabelLineContainer extends GroupElement {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _lines = new ElementPool(this, PointLabelLine);\n    private _map: {[key: string]: PointLabelLine};\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-point-label-lines');\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n\t//-------------------------------------------------------------------------\n    // metehods\n    //-------------------------------------------------------------------------\n    prepare(model: Series): void {\n        const lines = this._lines;\n        const points = model.getPoints();\n        const pointLabel = model.pointLabel;\n\n        if (pointLabel.visible) {\n            const map = this._map = {};\n\n            lines.prepare(points.count).forEach((line, i) => {\n                const p = points.get(i);\n\n                if (line.visible = p.visible) {\n                }\n                map[p.pid] = line;\n            })\n        } else {\n            lines.prepare(0);\n        }\n    }\n\n    get(point: DataPoint): PointLabelLine {\n        return this._map[point.pid];\n    }\n}\n\nexport class PointContainer extends LayerElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    inverted = false;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    invert(v: boolean, height: number): boolean {\n        if (v !== this.inverted) {\n            if (this.inverted = v) {\n                this.setAttr('transform', `translate(0,${height}) rotate(90) scale(-1,1)`);\n            } else {\n                this.setAttr('transform', '');\n            }\n        }\n        return this.inverted;\n    }\n}\n\nexport type LabelLayoutInfo = {\n    inverted: boolean\n    // point 위치, 크기\n    pointView: RcElement,\n    x: number,  \n    y: number,\n    hPoint: number,\n    wPoint: number,\n    // label 설정\n    labelView: PointLabelView,\n    labelPos: PointItemPosition,\n    labelOff: number\n};\n\nexport abstract class SeriesView<T extends Series> extends ChartElement<T> {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly POINT_CLASS = 'rct-data-point';\n    static readonly DATA_FOUCS = 'focus'\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    protected _pointContainer: PointContainer;\n    private _labelContainer: PointLabelContainer;\n    private _trendLineView: PathElement;\n\n    protected _inverted = false;\n    protected _animatable = true;\n    private _viewRate = NaN;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string) {\n        super(doc, 'rct-series ' + styleName);\n\n        this.add(this._pointContainer = new PointContainer(doc, 'rct-series-points'));\n        this.add(this._labelContainer = new PointLabelContainer(doc));\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    getClipContainer(): RcElement {\n        return this._pointContainer;\n    }\n\n    setViewRate(rate: number): void {\n        if ((!isNaN(rate) || !isNaN(this._viewRate)) && rate !== this._viewRate) {\n            this._viewRate = rate;\n            if (isNaN(rate)) {\n                this.control.invalidateLayout();\n            } else {\n                this._doViewRateChanged(rate);\n            }\n        }\n    }\n\n    protected _doViewRateChanged(rate: number): void {\n    }\n\n    _setChartOptions(inverted: boolean, animatable: boolean): void {\n        this._inverted = inverted;\n        this._animatable = animatable;\n    }\n\n    _animationStarted(ani: Animation): void {\n        if (this._labelContainer && this._labelContainer.visible) {\n            this._labelContainer.setVisible(false);\n        }\n    }\n\n    _animationFinished(ani: Animation): void {\n        this._invalidate();\n    }\n\n    protected abstract _getPointPool(): ElementPool<RcElement>;\n\n    pointByDom(elt: Element): IPointView {\n        return this._getPointPool().elementOf(elt) as any;\n    }\n\n    clicked(elt: Element): void {\n        const view = this.pointByDom(elt);\n\n        view && this._doPointClicked(view);\n    }\n\n    protected _doPointClicked(view: IPointView): void {\n        // console.log('CLICKED: ' + view.point.yValue);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doMeasure(doc: Document, model: T, hintWidth: number, hintHeight: number, phase: number): ISize {\n        this.setClip(void 0);\n        // this._viewRate = NaN; // animating 중 다른 시리즈 등의 요청에 의해 여기로 진입할 수 있다.\n        this._prepareSeries(doc, model);\n        !this._lazyPrepareLabels() && this._labelContainer.prepare(doc, model);\n\n        if (model.trendline.visible) {\n            if (!this._trendLineView) {\n                this.add(this._trendLineView = new PathElement(doc, 'rct-series-trendline'));\n            }\n            this._trendLineView.setVisible(true);\n        } else if (this._trendLineView) {\n            this._trendLineView.setVisible(false);\n        }\n        \n        return Size.create(hintWidth, hintHeight);\n    }\n\n    protected _doLayout(): void {\n        this._labelViews();\n        this._renderSeries(this.width, this.height);\n        if (this._trendLineView && this._trendLineView.visible) {\n            this.$_renderTrendline();       \n        }\n        this._afterRender();\n        this._animatable && this._runShowEffect(!this.control.loaded);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected abstract _prepareSeries(doc: Document, model: T): void;\n    protected abstract _renderSeries(width: number, height: number): void;\n\n    protected _labelViews(): PointLabelContainer {\n        this._labelContainer.setVisible(this.model.pointLabel.visible && !this._animating());\n        return this._labelContainer.visible && this._labelContainer;\n    }\n\n    protected _getViewRate(): number {\n        return pickNum(this._viewRate, 1);\n    }\n\n    protected _animating(): boolean {\n        return !isNaN(this._viewRate);\n    }\n\n    protected _lazyPrepareLabels(): boolean { return false; }\n    protected _afterRender(): void {}\n    protected _getShowAnimation(): RcAnimation { return }\n    protected _runShowEffect(firstTime: boolean): void {\n        //this._getShowAnimation()?.run(this);\n    }\n\n    private $_renderTrendline(): void {\n        const m = this.model;\n        const xAxis = m._xAxisObj;\n        const yAxis = m._yAxisObj;\n        const pts = m.trendline._points.map(pt => ({x: xAxis.getPosition(xAxis._length, pt.x), y: yAxis._length - yAxis.getPosition(yAxis._length, pt.y)}));\n        const sb = new PathBuilder();\n\n        sb.move(pts[0].x, pts[0].y);\n        sb.lines(...pts);\n        this._trendLineView.setPath(sb.end(false));\n    }\n\n    protected _layoutLabel(info: LabelLayoutInfo): void {\n        // below이면 hPoint가 음수이다.\n        let {inverted, x, y, hPoint, labelView, labelOff} = info;\n        const below = hPoint < 0;\n        const r = labelView.getBBounds();\n        let inner = true;\n\n        if (inverted) {\n            y -= r.height / 2;\n        } else {\n            x -= r.width / 2;\n        }\n\n        switch (info.labelPos) {\n            case PointItemPosition.INSIDE:\n                if (inverted) {\n                    x -= hPoint / 2 + labelOff;\n                } else {\n                    y += (hPoint - r.height) / 2 + labelOff;\n                }\n                break;\n\n            case PointItemPosition.HEAD:\n                if (inverted) {\n                    if (below) {\n                        x += r.width - labelOff;\n                    } else {\n                        x -= r.width + labelOff;\n                    }\n                } else {\n                    if (below) {\n                        y -= r.height + labelOff;\n                    } else {\n                        y += labelOff;\n                    }\n                }\n                break;\n\n            case PointItemPosition.FOOT:\n                if (inverted) {\n                    if (below) {\n                        x -= hPoint + r.width + labelOff;\n                    } else {\n                        x -= hPoint - labelOff;\n                    }\n                } else {\n                    if (below) {\n                        y += hPoint + labelOff;\n                    } else {\n                        y += hPoint - r.height - labelOff;\n                    }\n                }\n                break;\n\n            case PointItemPosition.OUTSIDE:\n            default:\n                if (inverted) {\n                    if (below) {\n                        x -= r.width + labelOff;\n                    } else {\n                        x += labelOff;\n                    }\n                } else {\n                    if (below) {\n                        y += labelOff;\n                    } else {\n                        y -= r.height + labelOff;\n                    }\n                }\n                inner = false;\n                break;\n        }\n\n        labelView.setContrast(inner && info.pointView.dom);\n        labelView.layout().translate(x, y);\n    }\n}\n\nexport abstract class BoxPointElement extends PathElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: DataPoint;\n    labelViews: PointLabelView[] = [];\n    wPoint: number;\n    hPoint: number;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-box-point');\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    public abstract layout(x: number, y: number): void;\n}\n\nexport class BarElement extends BoxPointElement {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    layout(x: number, y: number): void {\n        this.setPath(SvgShapes.rect({\n            x: x - this.wPoint / 2,\n            y,\n            width: this.wPoint,\n            height: -this.hPoint\n        }));\n    }\n}\n\nexport abstract class ClusterableSeriesView<T extends Series> extends SeriesView<T> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    protected _labelInfo: LabelLayoutInfo = {} as any;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _prepareSeries(doc: Document, model: T): void {\n        this._preparePointViews(doc, model, model._visPoints);\n    }\n\n    protected _renderSeries(width: number, height: number): void {\n        this._pointContainer.invert(this._inverted, height);\n        this._layoutPointViews(width, height);\n    }\n\n    protected _runShowEffect(firstTime: boolean): void {\n        firstTime && SeriesAnimation.grow(this);\n    }\n\n    protected _doViewRateChanged(rate: number): void {\n        this._layoutPointViews(this.width, this.height);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected abstract _preparePointViews(doc: Document, model: T, points: DataPoint[]): void;\n    protected abstract _layoutPointViews(width: number, height: number): void;\n    protected abstract _layoutPointView(view: RcElement, index: number, x: number, y: number, wPoint: number, hPoint: number): void;\n}\n\nexport abstract class BoxedSeriesView<T extends ClusterableSeries> extends ClusterableSeriesView<T> {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _layoutPointViews(width: number, height: number): void {\n        const series = this.model;\n        const inverted = this._inverted;\n        const vr = this._getViewRate();\n        const labels = series.pointLabel;\n        const labelViews = this._labelViews();\n        const xAxis = series._xAxisObj;\n        const yAxis = series._yAxisObj;\n        const wPad = xAxis instanceof CategoryAxis ? xAxis.categoryPad() * 2 : 0;\n        const yLen = (inverted ? width : height);\n        const xLen = inverted ? height : width;\n        const org = inverted ? 0 : height;;\n        const yMin = yAxis.getPosition(yLen, yAxis.axisMin());\n        const base = series.getBaseValue(yAxis);\n        const yBase = pickNum(yAxis.getPosition(yLen, base), yMin);\n        const based = !isNaN(base);\n        const info: LabelLayoutInfo = labelViews && Object.assign(this._labelInfo, {\n            inverted,\n            labelPos: series.getLabelPosition(labels.position),\n            labelOff: series.getLabelOff(labels.offset)\n        });\n\n        this._getPointPool().forEach((pv: RcElement, i) => {\n            const p = (pv as any as IPointView).point;\n\n            if (pv.setVisible(!p.isNull)) {\n                const wUnit = xAxis.getUnitLength(xLen, p.xValue) * (1 - wPad);\n                const wPoint = series.getPointWidth(wUnit);\n                const yVal = yAxis.getPosition(yLen, p.yValue);\n                const hPoint = (yVal - yBase) * vr;\n                let x: number;\n                let y: number;\n\n                x = xAxis.getPosition(xLen, p.xValue) - wUnit / 2;\n                y = org;\n\n                p.xPos = x += series.getPointPos(wUnit) + wPoint / 2;\n                if (based) { // TODO: 합칠 수 있나?\n                    p.yPos = y -= yAxis.getPosition(yLen, p.yGroup * vr); // stack/fill일 때 org와 다르다.\n                } else {\n                    p.yPos = y -= yAxis.getPosition(yLen, p.yGroup) * vr; \n                }\n\n                // 아래에서 위로 올라가는 animation을 위해 바닥 지점을 전달한다.\n                this._layoutPointView(pv, i, x, y + hPoint, wPoint, hPoint);\n\n                // label\n                if (info && (info.labelView = labelViews.get(p, 0))) {\n                    if (inverted) {\n                        // y = xLen - xAxis.getPosition(xLen, p.xValue) - wUnit / 2; // 위에서 아래로 내려갈 때\n                        y = xLen - xAxis.getPosition(xLen, p.xValue) + wUnit / 2;\n                        x = org;\n                        p.yPos = y -= series.getPointPos(wUnit) + wPoint / 2;\n                        // p.yPos = y += series.getPointPos(wUnit) + wPoint / 2;\n                        if (based) {\n                            p.xPos = x += yAxis.getPosition(yLen, p.yGroup) * vr; // stack/fill일 때 org와 다르다.\n                        } else {\n                            p.xPos = x += yAxis.getPosition(yLen, p.yGroup * vr);\n                        }\n                    }\n\n                    info.pointView = pv;\n                    info.x = x;\n                    info.y = y;\n                    info.wPoint = wPoint;\n                    info.hPoint = hPoint;\n                    this._layoutLabel(info);\n                }\n            }\n        })\n    }\n}\n\nexport abstract class RangedSeriesView<T extends ClusterableSeries> extends ClusterableSeriesView<T> {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected abstract _getLowValue(p: DataPoint): number;\n\n    protected _layoutPointViews(width: number, height: number): void {\n        const series = this.model;\n        const inverted = series.chart.isInverted();\n        const vr = this._getViewRate();\n        const labels = series.pointLabel;\n        const labelViews = this._labelViews();\n        const xAxis = series._xAxisObj;\n        const yAxis = series._yAxisObj;\n        const wPad = xAxis instanceof CategoryAxis ? xAxis.categoryPad() * 2 : 0;\n        const yLen = inverted ? width : height;\n        const xLen = inverted ? height : width;\n        const org = inverted ? 0 : height;;\n        const info: LabelLayoutInfo = labelViews && Object.assign(this._labelInfo, {\n            inverted,\n            labelPos: series.getLabelPosition(labels.position),\n            labelOff: series.getLabelOff(labels.offset)\n        });\n\n        this._getPointPool().forEach((pv, i) => {\n            const p = (pv as any as IPointView).point;\n\n            if (pv.setVisible(!p.isNull)) {\n                const wUnit = xAxis.getUnitLength(xLen, p.xValue) * (1 - wPad);\n                const wPoint = series.getPointWidth(wUnit);\n                const yVal = yAxis.getPosition(yLen, p.yValue);\n                const hPoint = (yVal - yAxis.getPosition(yLen, this._getLowValue(p))) * vr;\n                let x = xAxis.getPosition(xLen, p.xValue) - wUnit / 2;\n                let y = org;\n\n                p.xPos = x += series.getPointPos(wUnit) + wPoint / 2;\n                p.yPos = y -= yAxis.getPosition(yLen, p.yGroup) * vr;\n\n                this._layoutPointView(pv, i, x, y, wPoint, hPoint);\n\n                // labels\n                if (labelViews) {\n                    if (inverted) {\n                        // y = xLen - xAxis.getPosition(xLen, p.xVAlue) - wUnit / 2; // 위에서 아래로 내려갈 때\n                        y = xLen - xAxis.getPosition(xLen, p.xValue) + wUnit / 2;\n                        x = org;\n                        // p.yPos = y += series.getPointPos(wUnit) + wPoint / 2;\n                        p.yPos = y -= series.getPointPos(wUnit) + wPoint / 2;\n                        p.xPos = x += yAxis.getPosition(yLen, p.yGroup) * vr;\n                    }\n                    info.pointView = pv;\n                    info.hPoint = hPoint;\n                    info.x = x;\n                    info.y = y;\n\n                    // top\n                    if (info.labelView = labelViews.get(p, 0)) {\n                        info.hPoint = hPoint;\n                        this._layoutLabel(info);\n                    }\n                    // bottom\n                    if (info.labelView = labelViews.get(p, 1)) {\n                        if (inverted) info.x -= hPoint;\n                        else info.y += hPoint;\n                        info.hPoint = -hPoint;\n                        this._layoutLabel(info);\n                    }\n                }\n            }\n        })\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n","////////////////////////////////////////////////////////////////////////////////\n// LineSeriesView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { Dom } from \"../../common/Dom\";\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { PathBuilder } from \"../../common/PathBuilder\";\nimport { ClipElement, PathElement, RcElement } from \"../../common/RcControl\";\nimport { SvgShapes } from \"../../common/impl/SvgShape\";\nimport { Chart } from \"../../main\";\nimport { LineType } from \"../../model/ChartTypes\";\nimport { DataPoint, IPointPos } from \"../../model/DataPoint\";\nimport { ContinuousAxis } from \"../../model/axis/LinearAxis\";\nimport { LineSeries, LineSeriesBase, LineSeriesPoint, LineStepDirection } from \"../../model/series/LineSeries\";\nimport { IPointView, PointLabelView, SeriesView } from \"../SeriesView\";\nimport { SeriesAnimation } from \"../animation/SeriesAnimation\";\n\nexport class LineMarkerView extends PathElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: LineSeriesPoint;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-line-point-marker');\n    }\n}\n\nexport class LineContainer extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    inverted = false;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    invert(v: boolean, height: number): boolean {\n        if (v !== this.inverted) {\n            if (this.inverted = v) {\n                this.dom.style.transform = `translate(${height}px, ${height}px) rotate(-90deg) scale(1, -1)`;\n                // this.dom.style.transform = `translate(0px, ${height}px) rotate(90deg) scale(-1, 1)`;\n                // this.dom.style.transform = `rotate(-90deg) scale(-1, 1)`;\n            } else {\n                this.dom.style.transform = ``;\n            }\n        }\n        return this.inverted;\n    }\n}\n\nexport abstract class LineSeriesBaseView<T extends LineSeriesBase> extends SeriesView<T> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    protected _lineContainer: LineContainer;\n    private _line: PathElement;\n    protected _needBelow = false;\n    private _lowLine: PathElement;\n    protected _upperClip: ClipElement;\n    protected _lowerClip: ClipElement;\n    protected _markers: ElementPool<LineMarkerView>;\n    protected _polar: any;\n    protected _linePts: IPointPos[];\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string) {\n        super(doc, styleName);\n\n        this.insertFirst(this._lineContainer = new LineContainer(doc, 'rct-line-series-lines'));\n        this._lineContainer.add(this._line = new PathElement(doc, 'rct-line-series-line'));\n        this._markers = new ElementPool(this._pointContainer, LineMarkerView);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    getClipContainer(): RcElement {\n        return null;\n    }\n\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._markers;\n    }\n\n    protected _prepareSeries(doc: Document, model: T): void {\n        this.$_prepareMarkers(model._visPoints as LineSeriesPoint[]);\n    }\n\n    protected _renderSeries(width: number, height: number): void {\n        const series = this.model;\n\n        this._lineContainer.invert(this._inverted, height);\n        series instanceof LineSeries && this._prepareBelow(series, width, height);\n        this._layoutMarkers(series._visPoints as LineSeriesPoint[], width, height);\n        this._layoutLines(series._visPoints as LineSeriesPoint[]);\n    }\n\n    protected _runShowEffect(firstTime: boolean): void {\n\n        function getFrom(self: LineSeriesBaseView<any>): 'left' | 'right' | 'top' | 'bottom' {\n            const reversed = self.model._xAxisObj.reversed;\n\n            if (self._inverted) {\n                return reversed ? 'top' : 'bottom';\n            } else {\n                return reversed ? 'right' : 'left';\n            }\n        }\n\n        if (this._polar) {\n            firstTime && SeriesAnimation.grow(this);\n        } else {\n            firstTime && SeriesAnimation.slide(this, { from: getFrom(this) });\n        }\n    }\n\n    protected _doViewRateChanged(rate: number): void {\n        this._layoutMarkers(this.model._visPoints as LineSeriesPoint[], this.width, this.height);\n        this._layoutLines(this.model._visPoints.slice() as LineSeriesPoint[]);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _markersPerPoint(): number {\n        return 1;\n    }\n\n    protected _prepareBelow(series: LineSeries, w: number, h: number): boolean {\n        const control = this.control;\n        const yAxis = series._yAxisObj;\n        let lowLine = this._lowLine;\n\n        this._needBelow = series.belowStyle && series._minValue < series.baseValue; // series.getBaseValue(yAxis)\n\n        if (this._needBelow) {\n            if (!lowLine) {\n                this._lineContainer.insertChild(lowLine = this._lowLine = new PathElement(this.doc), this._line);\n                this._upperClip = control.clipBounds();\n                this._lowerClip = control.clipBounds();\n            }\n            this._line.setClip(this._upperClip);\n            lowLine.setClip(this._lowerClip);\n            return true;\n        } else {\n            lowLine?.setClip();\n            this._line.setClip();\n        }\n    }\n\n    private $_resetClips(w: number, h: number, base: number, inverted: boolean): void {\n        const reversed = this.model._yAxisObj.reversed;\n        const x = 0;\n        const y = 0;\n        let clip: ClipElement;\n\n        if (clip = this._upperClip) {\n            if (inverted) {\n                if (reversed) {\n                    clip.setBounds(x, h - base, h, w);                \n                } else {\n                    clip.setBounds(x, h - w, h, w - base);                \n                }\n            } else {\n                if (reversed) {\n                    clip.setBounds(x, y + base, w, h - base);                \n                } else {\n                    clip.setBounds(x, y, w, base);                \n                }\n            }\n        }\n        if (clip = this._lowerClip) {\n            if (this._inverted) {\n                if (reversed) {\n                    clip.setBounds(x, h - w, h, w - base);                \n                } else {\n                    clip.setBounds(x, h - base, h, w);                \n                }\n            } else {\n                if (reversed) {\n                    clip.setBounds(x, y, w, base);                \n                } else {\n                    clip.setBounds(x, y + base, w, h - base);                \n                }\n            }\n        }\n    }\n\n    private $_prepareMarkers(points: LineSeriesPoint[]): void {\n        const series = this.model;\n        const marker = series.marker;\n\n        if (this._pointContainer.visible = marker.visible) {\n            const mpp = this._markersPerPoint();\n            const count = points.length;\n    \n            this._markers.prepare(count * mpp, (mv, i) => {\n                const n = i % count;\n                const p = points[n];\n\n                if (!p.isNull) {\n                    if (n === count - 1) {\n                    } else if (n === 0) {\n                    } else {\n                    }\n        \n                    p.radius = marker.radius;\n                    p.shape = marker.shape;\n                    mv.point = p;\n        \n                    // mv.className = vis ? '' : 'dlchart-line-marker-hidden';\n                    // mv.clearStyles();\n                    // if (color) {\n                    //     m.setStyles({\n                    //         fill: color,\n                    //         stroke: color\n                    //     })\n                    // }\n                    // m.setStyles(styles);\n                    // this._needNegative && m.point.value < base && m.setStyles(negativeStyles);\n                }\n            });\n        }\n    }\n\n    protected _layoutMarker(mv: LineMarkerView, x: number, y: number): void {\n        const color = this.model.color;\n        const p = mv.point as LineSeriesPoint;\n        const s = p.shape;\n        const sz = p.radius;\n        let path: (string | number)[];\n\n        switch (s) {\n            case 'square':\n            case 'diamond':\n            case 'triangle':\n            case 'itriangle':\n                x -= sz;\n                y -= sz;\n                path = SvgShapes[s](0, 0, sz * 2, sz * 2);\n                break;\n\n            default:\n                path = SvgShapes.circle(0, 0, sz);\n                break;\n        }\n        // if (m.visible = this._containsMarker(x, y)) {\n            mv.translate(x, y);\n            mv.setPath(path);\n            mv.setStyle('stroke', 'gray');\n            mv.setStyle('fill', color);\n        // }\n    }\n\n    protected _layoutMarkers(pts: LineSeriesPoint[], width: number, height: number): void {\n        const series = this.model;\n        const inverted = this._inverted;\n        const polar = this._polar = (series.chart as Chart).body.getPolar(series);\n        const vr = this._getViewRate();\n        const vis = series.marker.visible;\n        const labels = series.pointLabel;\n        const labelOff = labels.offset;\n        const labelViews = this._labelViews();\n        const xAxis = series._xAxisObj;\n        const yAxis = series._yAxisObj;\n        const yLen = inverted ? width : height;\n        const xLen = inverted ? height : width;\n        const yOrg = height;\n\n        for (let i = 0, cnt = pts.length; i < cnt; i++) {\n            const p = pts[i];\n            let px: number;\n            let py: number;\n\n            if (polar) {\n                const a = polar.start + i * polar.deg;\n                const y = yAxis.getPosition(polar.rd, p.yGroup) * vr;\n\n                px = p.xPos = polar.cx + y * Math.cos(a);\n                py = p.yPos = polar.cy + y * Math.sin(a);\n            } else {\n                px = p.xPos = xAxis.getPosition(xLen, p.xValue);\n                py = p.yPos = yOrg - yAxis.getPosition(yLen, p.yGroup);\n\n                if (inverted) {\n                    px = yAxis.getPosition(yLen, p.yGroup);\n                    py = yOrg - xAxis.getPosition(xLen, p.xValue);\n                }\n            }\n\n            const mv = this._markers.get(i);\n            const lv = labelViews && labelViews.get(p, 0);\n\n            if (mv && mv.setVisible(!p.isNull)) {\n                this._layoutMarker(mv, px, py);\n\n                if (lv) {\n                    const r = lv.getBBounds();\n\n                    lv.visible = true;\n                    lv.translate(px - r.width / 2, py - r.height - labelOff - (vis ? p.radius : 0));\n                }\n            } else if (lv) {\n                lv.visible = false;\n            }\n        }\n    }\n\n    protected _layoutLines(pts: DataPoint[]): void {\n        const series = this.model;\n        const sb = new PathBuilder();\n        let i = 0;\n        let s: string;\n\n        while (i < pts.length) {\n            const p = pts[i++];\n\n            if (!p.isNull) {\n                sb.move(p.xPos, p.yPos);\n                break;\n            }\n        }\n\n        this._linePts = pts;\n\n        if (i < pts.length - 1) {\n            this._buildLines(pts, i, sb);\n            this._line.setPath(s = sb.end(this._polar));\n    \n            this._line.clearStyleAndClass();\n            this._line.setStyle('stroke', series.color);\n            this._line.addStyleOrClass(series.style);\n            Dom.setImportantStyle(this._line.dom.style, 'fill', 'none');\n    \n            if (series instanceof LineSeries && this._needBelow) {\n                const axis = series._yAxisObj as ContinuousAxis;\n                const base = series.baseValue;// series.getBaseValue(axis);\n                \n                if (this._inverted) {\n                    this.$_resetClips(this.width, this.height, axis.getPosition(this.width, base), true);\n                } else {\n                    this.$_resetClips(this.width, this.height, this.height - axis.getPosition(this.height, base), false);\n                }\n    \n                this._lowLine.setPath(s);//this._line.path());\n    \n                this._lowLine.clearStyleAndClass();\n                this._lowLine.setStyle('stroke', series.color);\n                this._lowLine.addStyleOrClass(series.style);\n                this._lowLine.addStyleOrClass(series.belowStyle);\n                Dom.setImportantStyle(this._lowLine.dom.style, 'fill', 'none');\n            }\n        }\n    }\n\n    protected _buildLines(pts: IPointPos[], from: number, sb: PathBuilder): void {\n        const m = this.model;\n        const t = m.getLineType();\n\n        if (t === LineType.SPLINE) {\n            this._drawCurve(pts, from - 1, sb);\n        } else if (m instanceof LineSeries && t === LineType.STEP) {\n            this._drawStep(pts, from, sb, m.stepDir);\n        } else {\n            this._drawLine(pts, from, sb);\n        }\n    }\n\n    protected _drawLine(pts: IPointPos[], from: number, sb: PathBuilder): void {\n        const len = pts.length;\n        let i = from;\n\n        while (i < len) {\n            if (pts[i].isNull) {\n                do {\n                    i++;\n                } while (i < len && pts[i].isNull);\n\n                if (i < len) {\n                    sb.move(pts[i].xPos, pts[i].yPos);\n                    i++;\n                }\n            } else {\n                sb.line(pts[i].xPos, pts[i].yPos);\n                i++;\n            }\n        }\n    }\n    \n    protected _drawCurve(pts: IPointPos[], from: number, sb: PathBuilder): void {\n        const len = pts.length;\n        let i: number;\n\n        if (pts && pts.length > 1) {\n            let start = from;\n\n            i = from;\n            while (i < len) {\n                if (pts[i].isNull) {\n                    if (i - 1 > start) {\n                        this.$_drawCurve(pts, start, i - 1, sb);\n                    }\n                    do {\n                        i++;\n                    } while (i < len && pts[i].isNull);\n\n                    start = i;\n\n                    if (i < len) {\n                        sb.move(pts[i].xPos, pts[i].yPos);\n                        i++;\n                    }\n                } else {\n                    i++;\n                }\n            }\n            if (i - 1 > start) {\n                this.$_drawCurve(pts, start, i - 1, sb);\n            }\n        }\n    }\n\n    private $_drawCurve(pts: IPointPos[], start: number, end: number, sb: PathBuilder): void {\n        let p = start;\n\n        if (Math.abs(end - start) === 1) {\n            sb.line(pts[p + 1].xPos, pts[p + 1].yPos);\n            return;\n        }\n\n        const tension = 0.23;\n        const tLeft = { x: 0, y: 0 };\n        const tRight = { x: 0, y: 0 };\n        const v1 = { x: 0, y: 0 };\n        const v2 = { x: pts[p + 1].xPos - pts[p].xPos, y: pts[p + 1].yPos - pts[p].yPos };\n        const p1 = { x: 0, y: 0 };\n        const p2 = { x: 0, y: 0 };\n        const mp = { x: 0, y: 0 };\n        let tan = { x: 0, y: 0 };\n        let len = Math.sqrt(v2.x * v2.x + v2.y * v2.y);\n\n        v2.x /= len;\n        v2.y /= len;\n\n        let tFactor = (pts[p + 1].xPos - pts[p].xPos)\n        let prevX = pts[p].xPos;\n        let prevY = pts[p].yPos;\n\n        for (++p; p != end; p++) {\n            v1.x = -v2.x;\n            v1.y = -v2.y;\n\n            v2.x = pts[p + 1].xPos - pts[p].xPos;\n            v2.y = pts[p + 1].yPos - pts[p].yPos;\n\n            len = Math.sqrt(v2.x * v2.x + v2.y * v2.y);\n            v2.x /= len;\n            v2.y /= len;\n\n            if (v2.x < v1.x) {\n                tan.x = v1.x - v2.x;\n                tan.y = v1.y - v2.y;\n            } else {\n                tan.x = v2.x - v1.x;\n                tan.y = v2.y - v1.y;\n            }\n\n            const tlen = Math.sqrt(tan.x * tan.x + tan.y * tan.y);\n            tan.x /= tlen;\n            tan.y /= tlen;\n\n            if (v1.y * v2.y >= 0) {\n                tan = { x: 1, y: 0 };\n            }\n\n            tLeft.x = -tan.x * tFactor * tension;\n            tLeft.y = -tan.y * tFactor * tension;\n\n            if (p === start + 1) {\n                sb.quad(pts[p].xPos + tLeft.x, pts[p].yPos + tLeft.y, pts[p].xPos, pts[p].yPos);\n            } else {\n                p1.x = prevX + tRight.x;\n                p1.y = prevY + tRight.y;\n                p2.x = pts[p].xPos + tLeft.x;\n                p2.y = pts[p].yPos + tLeft.y;\n                mp.x = (p1.x + p2.x) / 2;\n                mp.y = (p1.y + p2.y) / 2;\n\n                sb.quad(p1.x, p1.y, mp.x, mp.y);\n                sb.quad(p2.x, p2.y, pts[p].xPos, pts[p].yPos);\n            }\n\n            tFactor = (pts[p + 1].xPos - pts[p].xPos);\n            tRight.x = tan.x * tFactor * tension;\n            tRight.y = tan.y * tFactor * tension;\n            prevX = pts[p].xPos;\n            prevY = pts[p].yPos;\n        }\n\n        sb.quad(prevX + tRight.x, prevY + tRight.y, pts[p].xPos, pts[p].yPos);\n    }\n\n    protected _drawStep(pts: IPointPos[], from: number, sb: PathBuilder, dir: LineStepDirection): void {\n        const len = pts.length;\n        let i = from;\n\n        while (i < len) {\n            if (pts[i].isNull) {\n                do {\n                    i++;\n                } while (i < len && pts[i].isNull);\n\n                if (i < len) {\n                    sb.move(pts[i].xPos, pts[i].yPos);\n                    i++;\n                }\n            } else {\n                if (dir === LineStepDirection.BACKWARD) {\n                    sb.line(pts[i - 1].xPos, pts[i].yPos);\n                    sb.line(pts[i].xPos, pts[i].yPos);\n                } else {\n                    sb.line(pts[i].xPos, pts[i - 1].yPos);\n                    sb.line(pts[i].xPos, pts[i].yPos);\n                }\n                i++\n            }\n        }\n    }\n}\n\nexport class LineSeriesView extends LineSeriesBaseView<LineSeries> {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly CLASS = 'rct-line-series';\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, LineSeriesView.CLASS);\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// AreaRangeSeriesView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum } from \"../../common/Common\";\nimport { Dom } from \"../../common/Dom\";\nimport { IPoint2, PathBuilder } from \"../../common/PathBuilder\";\nimport { IPoint } from \"../../common/Point\";\nimport { PathElement } from \"../../common/RcControl\";\nimport { IPointPos } from \"../../model/DataPoint\";\nimport { AreaRangeSeries, AreaRangeSeriesPoint } from \"../../model/series/LineSeries\";\nimport { LineContainer, LineSeriesBaseView } from \"./LineSeriesView\";\n\nexport class AreaRangeSeriesView extends LineSeriesBaseView<AreaRangeSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _lowerLine: PathElement;\n    private _areaContainer: LineContainer;\n    private _area: PathElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-area-range');\n\n        this.insertFirst(this._areaContainer = new LineContainer(doc, 'rct-area-series-areas'));\n        // TODO: negative 처리 등에 문제가 없으면 lineContainer에 추가한다.\n        this._areaContainer.add(this._area = new PathElement(doc, 'rct-area-series-area'));\n        // this._lineContainer.add(this._area = new PathElement(doc, 'rct-line-series-line'));\n        this._lineContainer.add(this._lowerLine = new PathElement(doc, 'rct-line-series-line'));\n        Dom.setImportantStyle(this._lowerLine.dom.style, 'fill', 'none');\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _markersPerPoint(): number {\n        return 2;\n    }\n\n    protected _renderSeries(width: number, height: number): void {\n        this._areaContainer.invert(this.model.chart.isInverted(), height);\n\n        super._renderSeries(width, height);\n    }\n\n    protected _layoutMarkers(pts: AreaRangeSeriesPoint[], width: number, height: number): void {\n        super._layoutMarkers(pts, width, height);\n\n        const series = this.model;\n        const inverted = this._inverted;\n        const yAxis = series._yAxisObj;\n        const yLen = inverted ? width : height;\n        const yOrg = height;\n\n        for (let i = 0, cnt = pts.length; i < cnt; i++) {\n            const p = pts[i];\n\n            p.yLow = yOrg - yAxis.getPosition(yLen, p.lowValue);\n        }\n\n        if (series.marker.visible) {\n            const markers = this._markers;\n    \n            for (let i = 0, cnt = pts.length; i < cnt; i++) {\n                const p = pts[i];\n                const mv = markers.get(i + cnt);\n                let x: number;\n                let y: number;\n\n                if (p.isNull) {\n                    mv.visible = false;\n                } else {\n                    mv.visible = true;\n\n                    if (inverted) {\n                        x = yAxis.getPosition(yLen, p.lowValue);\n                        y = markers.get(i).ty;\n                    } else {\n                        x = p.xPos;\n                        y = p.yLow;\n                    }\n    \n                    this._layoutMarker(mv, x, y);\n                }\n            }\n        }\n    }\n\n    protected _layoutLines(points: AreaRangeSeriesPoint[]): void {\n        super._layoutLines(points);\n\n        // low lines\n        const lowPts = points.map(p => {\n            return {xPos: p.xPos, yPos: p.yLow, isNull: p.isNull};\n        });\n        const pts = lowPts.slice().reverse();\n        const sb = new PathBuilder();\n        let i = 0;\n\n        while (i < pts.length && pts[i].isNull) {\n            i++;\n        }\n\n        sb.move(pts[i].xPos, pts[i].yPos);\n        this._buildLines(pts, i + 1, sb);\n\n        this._lowerLine.setPath(sb.end(false));\n        this._lowerLine.setStyle('stroke', this.model.color);\n\n        this.$_layoutArea(this._area, this._linePts, pts);\n    }\n\n    private $_layoutArea(area: PathElement, pts: IPointPos[], lowPts: IPointPos[]): void {\n        const sb = new PathBuilder();\n        let i = 0;\n\n        // sb.move(pts[0].xPos, upPts[0].yPos)\n        // this._buildLines(pts, 1, sb);\n        // sb.line(lowPts[0].xPos, lowPts[0].yPos);\n        // this._buildLines(lowPts, 1, sb);\n\n        while (i < pts.length && pts[i].isNull) {\n            i++;\n        }\n\n        const len = pts.length;\n        let start = i++;\n        let end: number;\n        let pts2: IPointPos[];\n        let lowPts2: IPointPos[];\n\n        while (i < len) {\n            if (pts[i].isNull) {\n                end = i;\n\n                if (end > start) {\n                    pts2 = pts.slice(start, end);\n                    lowPts2 = lowPts.slice(len - end, len - start);\n    \n                    sb.move(pts2[0].xPos, pts2[0].yPos);\n                    this._buildLines(pts2, 1, sb);\n                    sb.line(lowPts2[0].xPos, lowPts2[0].yPos);\n                    this._buildLines(lowPts2, 1, sb);\n                }\n\n                while (i < len && pts[i].isNull) {\n                    i++;\n                }\n                start = i;\n            } else {\n                i++;\n            }\n        }\n\n        if (i > start) {\n            end = i;\n            pts2 = pts.slice(start, end);\n            lowPts2 = lowPts.slice(len - end, len - start);\n    \n            sb.move(pts2[0].xPos, pts2[0].yPos);\n            this._buildLines(pts2, 1, sb);\n            sb.line(lowPts2[0].xPos, lowPts2[0].yPos);\n            this._buildLines(lowPts2, 1, sb);\n        }\n        area.setPath(sb.end());\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}","////////////////////////////////////////////////////////////////////////////////\n// AreaSeriesView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum } from \"../../common/Common\";\nimport { PathBuilder } from \"../../common/PathBuilder\";\nimport { PathElement } from \"../../common/RcControl\";\nimport { Utils } from \"../../common/Utils\";\nimport { SeriesGroupLayout } from \"../../model/Series\";\nimport { LinearAxis } from \"../../model/axis/LinearAxis\";\nimport { AreaSeries, AreaSeriesPoint } from \"../../model/series/LineSeries\";\nimport { LineSeriesBaseView } from \"./LineSeriesView\";\n\nexport class AreaSeriesView extends LineSeriesBaseView<AreaSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    // private _areaContainer: RcElement;\n    private _area: PathElement;\n    private _lowArea: PathElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-area-series');\n\n        this._lineContainer.insertFirst(this._area = new PathElement(doc, 'rct-area-series-area'));\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _layoutLines(pts: AreaSeriesPoint[]): void {\n        super._layoutLines(pts);\n\n        if (this._polar) {\n            this._layoutPolar(this._area, pts);\n        } else {\n            this._layoutArea(this._area, pts);\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _prepareBelow(series: AreaSeries, w: number, h: number): boolean {\n        let lowArea = this._lowArea;\n\n        this._area.setStyle('fill', this.model.color);\n        this._lowArea?.setStyle('fill', this.model.color);\n\n        if (super._prepareBelow(series, w, h)) {\n            if (!lowArea) {\n                this._lineContainer.insertChild(lowArea = this._lowArea = new PathElement(this.doc, 'rct-area-series-area'), this._area);\n            }\n            this._area.setClip(this._upperClip);\n            lowArea.setClip(this._lowerClip);\n            return true;\n        } else {\n            lowArea?.setClip();\n            this._area.setClip();\n        }\n    }\n\n    protected _layoutMarkers(pts: AreaSeriesPoint[], width: number, height: number): void {\n        super._layoutMarkers(pts, width, height);\n\n        const yAxis = this.model._yAxisObj;\n        const yOrg = height;\n\n        for (let i = 0, cnt = pts.length; i < cnt; i++) {\n            const p = pts[i];\n            p.yLow = yOrg - yAxis.getPosition(height, p.yGroup - p.yValue);\n        }\n    }\n\n    protected _layoutArea(area: PathElement, pts: AreaSeriesPoint[]): void {\n        const series = this.model;\n        const lowArea = this._needBelow ? this._lowArea : void 0;\n        const g = series.group;\n        const inverted = series.chart.isInverted();\n        const yAxis = series._yAxisObj;\n        const len = inverted ? this.width : this.height;\n        const base = series.getBaseValue(yAxis);\n        const yMin = this.height - yAxis.getPosition(len, pickNum(base, yAxis.axisMin()));\n        const sb = new PathBuilder();\n        let i = 0;\n        let s: string;\n\n        while (i < pts.length && pts[i].isNull) {\n            i++;\n        }\n\n        if (g && (g.layout === SeriesGroupLayout.STACK || g.layout === SeriesGroupLayout.FILL)) {\n            const iSave = i;\n\n            sb.move(pts[i].xPos, pts[i].yLow);\n            sb.line(pts[i].xPos, pts[i].yPos);\n            \n            i++;\n            while (i < pts.length) {\n                sb.line(pts[i].xPos, pts[i].yPos);\n                i++;\n            }\n\n            i = pts.length - 1;\n            sb.line(pts[i].xPos, pts[i].yLow);\n\n            while (i >= iSave) {\n                sb.line(pts[i].xPos, pts[i].yLow);\n                i--;\n            }\n        } else {\n            sb.move(pts[i].xPos, yMin);\n            sb.line(pts[i].xPos, pts[i].yPos);\n\n            this._buildLines(pts, i + 1, sb);\n\n            const path = sb._path;\n\n            i = 6;\n            while (i < path.length) {\n                if (path[i] === 'M') {\n                    path.splice(i, 0, 'L', path[i - 2], yMin);\n                    i += 3;\n                    path.splice(i, 0, 'M', path[i + 1], yMin);\n                    path[i + 3] = 'L';\n                    i += 6;\n                } else if (path[i] === 'Q') {\n                    i += 4;\n                } else { // 'L'\n                    i += 3;\n                }\n            }\n\n            sb.line(path[path.length - 2] as number, yMin);\n        }\n\n        area.setPath(s = sb.end());\n\n        area.clearStyleAndClass();\n        area.setStyle('fill', series.color);\n        area.addStyleOrClass(series.style);\n\n        if (lowArea) {\n            lowArea.setPath(s);\n\n            lowArea.clearStyleAndClass();\n            lowArea.setStyle('fill', series.color);\n            lowArea.setStyleOrClass(series.style);\n            lowArea.setStyleOrClass(series.belowStyle);\n        }\n    }\n\n    protected _layoutPolar(area: PathElement, pts: AreaSeriesPoint[]): void {\n        const series = this.model;\n        const g = series.group;\n        const yAxis = series._yAxisObj;\n        const base = yAxis instanceof LinearAxis ? series.getBaseValue(yAxis) : NaN;\n        const len = this.height;\n        const y = yAxis.getPosition(len, Utils.isNotEmpty(base) ? base : yAxis.axisMax());\n        const sb = new PathBuilder();\n\n        if (g && (g.layout === SeriesGroupLayout.STACK || g.layout === SeriesGroupLayout.FILL)) {\n            sb.move(pts[0].xPos, pts[0].yLow);\n            sb.line(pts[0].xPos, pts[0].yPos);\n            for (let i = 1; i < pts.length; i++) {\n                sb.line(pts[i].xPos, pts[i].yPos);\n            }\n            // this._buildLines(points, sb, step, curved);\n            sb.line(pts[pts.length - 1].xPos, pts[pts.length - 1].yLow);\n            for (let i = pts.length - 1; i >= 0; i--) {\n                sb.line(pts[i].xPos, pts[i].yLow);\n            }\n            area.setPath(sb.end());\n        } else {\n            sb.move(pts[0].xPos, pts[0].yPos);\n            for (let i = 1; i < pts.length; i++) {\n                sb.line(pts[i].xPos, pts[i].yPos);\n            }\n            area.setPath(sb.end());\n        }\n\n        area.clearStyleAndClass();\n        area.setStyle('fill', series.color);\n        area.addStyleOrClass(series.style);\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// BarRangeSeriesView.ts\n// 2023. 07. 25. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { RcElement } from \"../../common/RcControl\";\nimport { DataPoint } from \"../../model/DataPoint\";\nimport { BarRangeSeries, BarRangeSeriesPoint } from \"../../model/series/BarRangeSeries\";\nimport { BarElement, RangedSeriesView } from \"../SeriesView\";\n\nexport class BarRangeSeriesView extends RangedSeriesView<BarRangeSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _bars = new ElementPool(this._pointContainer, BarElement);\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-barrange-series')\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._bars;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _preparePointViews(doc: Document, model: BarRangeSeries, points: DataPoint[]): void {\n        this._bars.prepare(points.length, (v, i) => {\n            v.point = points[i];\n            v.setStyle('fill', points[i].color);\n        });\n    }\n\n    protected _getLowValue(p: BarRangeSeriesPoint): number {\n        return p.lowValue;\n    }\n\n    protected _layoutPointView(bar: BarElement, i: number, x: number, y: number, wPoint: number, hPoint: number): void {\n        bar.wPoint = wPoint;\n        bar.hPoint = hPoint;\n        bar.layout(x, y + hPoint);\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// SectorElement.ts\n// 2023. 06. 03. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { PathElement } from '../RcControl';\nimport { _undefined } from '../Types';\nimport { SvgShapes } from './SvgShape';\n\nexport interface ISectorShape {\n    cx: number;\n    cy: number; \n    rx: number;\n    ry: number;\n    innerRadius?: number;\n    start: number;\n    angle: number; \n    borderRadius?: number;\n    clockwise?: boolean;\n}\n\nexport class SectorElement extends PathElement {\n\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    static create(doc: Document, styleName: string, x: number, y: number, rx: number, ry: number, start: number, angle: number, clockwise = true): SectorElement {\n        return new SectorElement(doc, styleName, {\n            cx: x,\n            cy: y,\n            rx: rx,\n            ry: ry,\n            innerRadius: 0,\n            start: start,\n            angle: angle,\n            clockwise: clockwise\n        })\n    }\n\n    static createInner(doc: Document, styleName = '', x: number, y: number, rx: number, ry: number, innerRadius: number, start: number, angle: number, clockwise = true): SectorElement {\n        return new SectorElement(doc, styleName, {\n            cx: x,\n            cy: y,\n            rx: rx,\n            ry: ry,\n            innerRadius: innerRadius,\n            start: start,\n            angle: angle,\n            clockwise: clockwise\n        })\n    }\n    \n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string = _undefined, shape: ISectorShape = _undefined) {\n        super(doc, styleName);\n\n        shape && this._assignShape(shape);\n\n        this.setAttr('role', 'img');\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /** \n     * 중심 x.\n     */\n    cx = 0;\n    /** \n     * 중심 y.\n     */\n    cy = 0;\n    /** \n     * 수평 반지름.\n     */\n    rx = 0;\n    /** \n     * 수직 반지름.\n     */\n    ry = 0;\n    /** \n     * 내부 반지름.\n     * 수평/수직 반지름에 대한 비율. 0 ~ 1 사이 값으로 설정.\n     */\n    innerRadius = 0;\n    /** \n     * 시작 각도. \n     * 0 이상 360 미만.\n     */\n    start = 0;\n    /** \n     * 각도. \n     * 0 이상 360 미만.\n     */\n    angle = 0;\n    /** \n     * 회전 방향.\n     * true면 반시계 방향.\n     */\n    clockwise = true;\n    /**\n     * 반지름의 원래 크기에 대한 표시 비율.\n     */\n    rate = 1;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    equals(shape: ISectorShape): boolean {\n        return shape.cx === this.cx &&\n                shape.cy === this.cy &&\n                shape.rx === this.rx &&\n                shape.ry === this.ry &&\n                shape.innerRadius === this.innerRadius &&\n                shape.start === this.start &&\n                shape.angle === this.angle &&\n                shape.clockwise === this.clockwise;\n    }\n\n    setSector(shape: ISectorShape): void {\n        this._assignShape(shape);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected _getShape(): ISectorShape {\n        return {\n            cx: this.cx,\n            cy: this.cy,\n            rx: this.rx,\n            ry: this.ry,\n            innerRadius: this.innerRadius,\n            start: this.start,\n            angle: this.angle,\n            clockwise: this.clockwise\n        }\n    }\n\n    protected _assignShape(shape: ISectorShape): void {\n        this.cx = shape.cx;\n        this.cy = shape.cy;\n        this.rx = shape.rx;\n        this.ry = shape.ry;\n        this.innerRadius = shape.innerRadius;\n        this.start = shape.start;\n        this.angle = shape.angle;\n        this.clockwise = shape.clockwise;\n        this._updateShape();\n    }\n\n    protected _updateShape(): void {\n        this.setPath(SvgShapes.sector(\n            this.cx, \n            this.cy, \n            this.rx * this.rate, \n            this.ry * this.rate, \n            this.innerRadius || 0, \n            this.start, \n            this.start + this.angle, \n            this.clockwise\n        ));\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// BarSeriesView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { RcElement } from \"../../common/RcControl\";\nimport { SectorElement } from \"../../common/impl/SectorElement\";\nimport { TextAnchor } from \"../../common/impl/TextElement\";\nimport { Chart } from \"../../main\";\nimport { DataPoint } from \"../../model/DataPoint\";\nimport { BarSeries } from \"../../model/series/BarSeries\";\nimport { BarElement, BoxedSeriesView, IPointView, LabelLayoutInfo, SeriesView } from \"../SeriesView\";\n\nclass BarSectorView extends SectorElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-bar-point');\n    }\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: DataPoint;\n}\n\nexport class BarSeriesView extends BoxedSeriesView<BarSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _bars: ElementPool<BarElement>;\n    private _sectors: ElementPool<BarSectorView>;\n    protected _labelInfo: LabelLayoutInfo = {} as any;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-bar-series')\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this.chart()._polar ? this._sectors : this._bars;\n    }\n\n    protected _preparePointViews(doc: Document, model: BarSeries, points: DataPoint[]): void {\n        if (model.chart._polar) {\n            this.$_parepareSectors(doc, model, model._visPoints);\n        } else {\n            this.$_parepareBars(doc, model, model._visPoints);\n        }\n    }\n\n    protected _layoutPointViews(width: number, height: number): void {\n        if (this.model.chart._polar) {\n            this.$_layoutSectors();\n        } else {\n            super._layoutPointViews(width, height);\n        }\n    }\n\n    protected _layoutPointView(view: BarElement, i: number, x: number, y: number, wPoint: number, hPoint: number): void {\n        view.wPoint = wPoint;\n        view.hPoint = hPoint;\n        view.layout(x, y);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_parepareBars(doc: Document, model: BarSeries, points: DataPoint[]): void {\n        const style = model.style;\n\n        if (!this._bars) {\n            this._bars = new ElementPool(this._pointContainer, BarElement);\n        }\n        this._bars.prepare(points.length, (v, i) => {\n            const p = v.point = points[i];\n            \n            v.setStyleOrClass(style);\n            p.color && v.setStyle('fill', p.color);\n        });\n    }\n\n    private $_parepareSectors(doc: Document, model: BarSeries, points: DataPoint[]): void {\n        const style = model.style;\n\n        if (!this._sectors) {\n            this._sectors = new ElementPool(this._pointContainer, BarSectorView);\n        }\n        this._sectors.prepare(points.length, (v, i) => {\n            const p = v.point = points[i];\n            v.setStyleOrClass(style);\n            p.color && v.setStyle('fill', p.color);\n        });\n    }\n\n    private $_layoutSectors(): void {\n        const series = this.model;\n        const vr = this._getViewRate();\n        const labels = series.pointLabel;\n        const labelViews = this._labelViews();\n        const body = (series.chart as Chart).body;\n        const xAxis = series._xAxisObj;\n        const yAxis = series._yAxisObj;\n        const polar = body.getPolar(series);\n        const labelInfo: LabelLayoutInfo = labelViews && Object.assign(this._labelInfo, {\n            labelPos: series.getLabelPosition(labels.position),\n            labelOff: series.getLabelOff(labels.offset)\n        });\n\n        this._sectors.forEach((view, i) => {\n            const p = view.point;\n            const y = yAxis.getPosition(polar.rd, p.yGroup) * vr;\n            const wUnit = xAxis.getUnitLength(Math.PI * 2, p.xValue);\n            const wPoint = series.getPointWidth(wUnit);\n    \n            view.setSector({\n                cx: polar.cx, \n                cy: polar.cy, \n                rx: y, \n                ry: y,\n                start: polar.start + i * polar.deg,\n                angle: wPoint,\n                clockwise: true\n            })\n\n            // label\n            if (labelViews && (labelInfo.labelView = labelViews.get(p, 0))) {\n                const a = view.start + view.angle\n                const x = view.cx + view.rx / 2 * Math.cos(a);\n                const y = view.cy + view.ry / 2 * Math.sin(a);\n                const r = labelInfo.labelView.getBBounds();\n\n                labelInfo.labelView._text.anchor = TextAnchor.MIDDLE;\n                labelInfo.labelView.translate(x - r.width / 2, y - r.height / 2);\n            }\n        })\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// BellCurveSeriesView.ts\n// 2023. 07. 22. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { BellCurveSeries } from \"../../model/series/BellCurveSeries\";\nimport { LineSeriesBaseView } from \"./LineSeriesView\";\n\nexport class BellCurveSeriesView extends LineSeriesBaseView<BellCurveSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-bellcurve-series');\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}","////////////////////////////////////////////////////////////////////////////////\n// BoxPlotSeriesView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { RcElement } from \"../../common/RcControl\";\nimport { GroupElement } from \"../../common/impl/GroupElement\";\nimport { LineElement } from \"../../common/impl/PathElement\";\nimport { RectElement } from \"../../common/impl/RectElement\";\nimport { BoxPlotSeries, BoxPlotSeriesPoint } from \"../../model/series/BoxPlotSeries\";\nimport { IPointView, RangedSeriesView, SeriesView } from \"../SeriesView\";\n\nclass BoxView extends GroupElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: BoxPlotSeriesPoint;\n\n    private _stemUp: LineElement;\n    private _stemDown: LineElement;\n    private _box: RectElement;\n    private _mid: LineElement;\n    private _min: LineElement;\n    private _max: LineElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-boxplot-point');\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    layout(): void {\n        const p = this.point;\n        const w = this.width;\n        const h = this.height;\n        const len = p.yValue - p.minValue;\n        const x = w / 2;\n        let y = 0;\n        const yLow = y + h - h * (p.lowValue - p.minValue) / len;\n        const yHigh = y + h - h * (p.highValue - p.minValue) / len;\n        const hBox = h * (p.highValue - p.lowValue) / len;\n\n        this._box.setStyle('fill', p.color);\n\n        this._stemUp.setVLine(x, y, yHigh);\n        this._stemDown.setVLine(x, yLow, h);\n        this._min.setHLine(y, w / 4, w * 3 / 4);\n        this._max.setHLine(y + h, w / 4, w * 3 / 4);\n        this._box.setBox(0, yHigh, w, hBox);\n        this._mid.setHLine(y + h - h * (p.midValue - p.minValue) / len, 0, w);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doInitChildren(doc: Document): void {\n        this.add(this._stemUp = new LineElement(doc, 'rct-boxplot-point-stem'));\n        this.add(this._stemDown = new LineElement(doc, 'rct-boxplot-point-stem'));\n        this.add(this._box = new RectElement(doc, 'rct-boxplot-point-box'));\n        this.add(this._mid = new LineElement(doc, 'rct-boxplot-point-mid'));\n        this.add(this._min = new LineElement(doc, 'rct-boxplot-point-min'));\n        this.add(this._max = new LineElement(doc, 'rct-boxplot-point-max'));\n    }\n}\n\nexport class BoxPlotSeriesView extends RangedSeriesView<BoxPlotSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _boxes = new ElementPool(this._pointContainer, BoxView);\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-boxplot-series')\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._boxes;\n    }\n\n    protected _getLowValue(p: BoxPlotSeriesPoint): number {\n        return p.minValue\n    }\n\n    protected _layoutPointView(box: BoxView, i: number, x: number, y: number, wPoint: number, hPoint: number): void {\n        box.setBounds(x - wPoint / 2, y, wPoint, hPoint);\n        box.layout();\n    }\n\n    protected _preparePointViews(doc: Document, model: BoxPlotSeries, points: BoxPlotSeriesPoint[]): void {\n        this._boxes.prepare(points.length, (box, i) => {\n            box.point = points[i];\n        })\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// BubbleSeriesView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { PathElement, RcElement } from \"../../common/RcControl\";\nimport { IRect } from \"../../common/Rectangle\";\nimport { SvgShapes } from \"../../common/impl/SvgShape\";\nimport { BubbleSeries, BubbleSeriesPoint } from \"../../model/series/BubbleSeries\";\nimport { IPointView, PointLabelView, SeriesView } from \"../SeriesView\";\nimport { SeriesAnimation } from \"../animation/SeriesAnimation\";\n\nclass MarkerView extends PathElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: BubbleSeriesPoint;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-bubble-point-marker');\n    }\n}\n\n/**\n * @internal \n * \n * View for BubbleSeries.\n */\nexport class BubbleSeriesView extends SeriesView<BubbleSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _markers: ElementPool<MarkerView>;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-bubble-series')\n\n        this._markers = new ElementPool(this._pointContainer, MarkerView);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._markers;\n    }\n\n    protected _prepareSeries(doc: Document, model: BubbleSeries): void {\n        const pts = model.getPoints().getVisibles();\n\n        this.$_prepareMarkser(model._visPoints as BubbleSeriesPoint[]);\n    }\n\n    protected _renderSeries(width: number, height: number): void {\n        this.$_layoutMarkers(width, height);\n    }\n\n    protected _runShowEffect(firstTime: boolean): void {\n        firstTime && SeriesAnimation.grow(this);\n    }\n\n    protected _doViewRateChanged(rate: number): void {\n        this.$_layoutMarkers(this.width, this.height);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_prepareMarkser(points: BubbleSeriesPoint[]): void {\n        const series = this.model;\n        const zAxis = series._xAxisObj._length < series._yAxisObj._length ? series._xAxisObj : series._yAxisObj;\n        const len = zAxis._length;\n        const marker = series.marker;\n        const count = points.length;\n        const {min, max} = series.getPxMinMax(len);\n\n        this._markers.prepare(count, (m, i) => {\n            const p = m.point = points[i];\n\n            p.radius = series.getRadius(p.zValue, min, max);\n            p.shape = marker.shape;\n            p.color && m.setStyle('fill', p.color);\n        });\n    }\n\n    private $_layoutMarkers(width: number, height: number): void {\n        const series = this.model;\n        const inverted = this._inverted;\n        const vr = this._getViewRate();\n        const labels = series.pointLabel;\n        const labelOff = labels.offset;\n        const labelViews = this._labelViews();\n        const xAxis = series._xAxisObj;\n        const yAxis = series._yAxisObj;\n        const yLen = inverted ? width : height;\n        const xLen = inverted ? height : width;\n        const yOrg = height;\n        let labelView: PointLabelView;\n        let r: IRect;\n\n        this._markers.forEach((mv, i) => {\n            const p = mv.point;\n\n            if (mv.setVisible(!p.isNull && !isNaN(p.zValue))) {\n                const sz = p.radius * vr;\n                let path: (string | number)[];\n                let x: number;\n                let y: number;\n\n                // m.className = model.getPointStyle(i);\n\n                x = p.xPos = xAxis.getPosition(xLen, p.xValue);\n                y = p.yPos = yOrg - yAxis.getPosition(yLen, p.yValue);\n                if (inverted) {\n                    x = yAxis.getPosition(yLen, p.yGroup);\n                    y = yOrg - xAxis.getPosition(xLen, p.xValue);\n                }\n    \n                path = SvgShapes.circle(0, 0, sz);\n                mv.setPath(path);\n                mv.translate(x, y);\n\n                // label\n                if (labelViews && (labelView = labelViews.get(p, 0))) {\n                    labelView.setContrast(mv.dom);\n                    labelView.layout();\n                    r = labelView.getBBounds();\n                    if (labelView.setVisible(r.width <= p.radius)) {\n                        labelView.translate(x - r.width / 2, y - r.height / 2);\n                    }\n                }\n            }\n        });\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// CandlestickSeriesView.ts\n// 2023. 07. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { RcElement } from \"../../common/RcControl\";\nimport { GroupElement } from \"../../common/impl/GroupElement\";\nimport { LineElement } from \"../../common/impl/PathElement\";\nimport { RectElement } from \"../../common/impl/RectElement\";\nimport { CandlestickSeries, CandlestickSeriesPoint } from \"../../model/series/CandlestickSeries\";\nimport { IPointView, RangedSeriesView, SeriesView } from \"../SeriesView\";\n\nclass StickView extends GroupElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: CandlestickSeriesPoint;\n\n    // private _back: RectElement;\n    private _wickUpper: LineElement;\n    private _wickLower: LineElement;\n    private _body: RectElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-candlestick-point');\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    layout(): void {\n        const p = this.point;\n        const w = this.width;\n        const h = this.height;\n        const len = p.highValue - p.lowValue;\n        const x = 0;\n        let y = 0;\n        const yOpen = y + h - h * (Math.min(p.openValue, p.closeValue) - p.lowValue) / len;\n        const yClose = y + h - h * (Math.max(p.openValue, p.closeValue) - p.lowValue) / len;\n        const yBox = Math.min(yClose, yOpen);\n        const hBox = Math.max(1, Math.abs(yOpen - yClose));\n        const fall = p.close < p.open;\n\n        this._body.setStyle('fill', fall ? '' : p.color);\n\n        // this._back.setBox(-w / 2, 0, w, h);\n        this._wickUpper.setVLine(x, y, yClose);\n        this._wickLower.setVLine(x, yOpen, h);\n        this._body.setBox(-w / 2, yBox, w, hBox);\n        this._body.setStyleName(fall ? 'rct-candlestick-point-fall' : '')\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doInitChildren(doc: Document): void {\n        this.add(this._wickUpper = new LineElement(doc, 'rct-candlestick-point-wick'));\n        this.add(this._wickLower = new LineElement(doc, 'rct-candlestick-point-wick'));\n        this.add(this._body = new RectElement(doc));\n\n        // for hit testing\n        // this.add(this._back = new RectElement(doc, SeriesView.POINT_STYLE + ' rct-candlestick-point-back'));\n        // Dom.setImportantStyle(this._back.dom.style, 'fill', 'transparent'); // 'none'으로 지정하면 hit testing이 되지 않는다.\n    }\n}\n\nexport class CandlestickSeriesView extends RangedSeriesView<CandlestickSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _sticks = new ElementPool(this._pointContainer, StickView);\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-candlestick-series')\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._sticks;\n    }\n\n    protected _getLowValue(p: CandlestickSeriesPoint): number {\n        return p.lowValue;\n    }\n\n    protected _preparePointViews(doc: Document, model: CandlestickSeries, points: CandlestickSeriesPoint[]): void {\n        this._sticks.prepare(points.length, (box, i) => {\n            box.point = points[i];\n        })\n    }\n\n    protected _layoutPointView(box: StickView, i: number, x: number, y: number, wPoint: number, hPoint: number): void {\n        box.setBounds(x, y, wPoint, hPoint);\n        box.layout();\n    } \n}","////////////////////////////////////////////////////////////////////////////////\n// DumbbellSeriesView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { PathElement, RcElement } from \"../../common/RcControl\";\nimport { GroupElement } from \"../../common/impl/GroupElement\";\nimport { LineElement } from \"../../common/impl/PathElement\";\nimport { PointItemPosition } from \"../../model/Series\";\nimport { CategoryAxis } from \"../../model/axis/CategoryAxis\";\nimport { DumbbellSeries, DumbbellSeriesPoint } from \"../../model/series/DumbbellSeries\";\nimport { IPointView, PointLabelView, SeriesView } from \"../SeriesView\";\nimport { SeriesAnimation } from \"../animation/SeriesAnimation\";\n\nclass BarElement extends GroupElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: DumbbellSeriesPoint;\n\n    private _line: LineElement;\n    private _hmarker: PathElement;\n    private _lmarker: PathElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-dumbbell-point');\n\n        this.add(this._line = new LineElement(doc));\n        this.add(this._hmarker = new PathElement(doc, 'rct-dumbbell-point-marker'));\n        this.add(this._lmarker = new PathElement(doc, 'rct-dumbbell-point-marker'));\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    layout(inverted: boolean): BarElement {\n        const h = this.point.hPoint;\n\n        if (inverted) {\n            this._line.setHLineC(0, 0, h);\n            this._hmarker.renderShape(this.point.shape, 0, 0, this.point.radius);\n            this._lmarker.renderShape(this.point.shape, h, 0, this.point.radius);\n        } else {\n            this._line.setVLineC(0, 0, h);\n            this._hmarker.renderShape(this.point.shape, 0, 0, this.point.radius);\n            this._lmarker.renderShape(this.point.shape, 0, h, this.point.radius);\n        }\n        return this;\n    }\n}\n\ntype LabelInfo = {\n    inverted: boolean,\n    labelPos: PointItemPosition,\n    labelOff: number,\n    width: number,\n    height: number,\n    labelView: PointLabelView,\n    bar: BarElement,\n    x: number,\n    y: number\n};\n\nexport class DumbbellSeriesView extends SeriesView<DumbbellSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _bars: ElementPool<BarElement>;\n    private _labelInfo: LabelInfo = {} as any;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-dumbbell-series')\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._bars;\n    }\n\n    protected _prepareSeries(doc: Document, model: DumbbellSeries): void {\n        this.$_parepareBars(doc, model, model._visPoints as DumbbellSeriesPoint[]);\n    }\n\n    protected _renderSeries(width: number, height: number): void {\n        this.$_layoutBars(width, height);\n    }\n\n    protected _runShowEffect(firstTime: boolean): void {\n        firstTime && SeriesAnimation.grow(this);\n    }\n\n    protected _doViewRateChanged(rate: number): void {\n        this.$_layoutBars(this.width, this.height);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_parepareBars(doc: Document, model: DumbbellSeries, points: DumbbellSeriesPoint[]): void {\n        const style = model.style;\n\n        if (!this._bars) {\n            this._bars = new ElementPool(this._pointContainer, BarElement);\n        }\n        this._bars.prepare(points.length, (v, i) => {\n            v.point = points[i];\n            v.setStyle('fill', points[i].color);\n            v.setStyleOrClass(style);\n        });\n    }\n\n    protected $_layoutBars(width: number, height: number): void {\n        const series = this.model;\n        const inverted = series.chart.isInverted();\n        const vr = this._getViewRate();\n        const labels = series.pointLabel;\n        const labelOff = labels.offset;\n        const labelViews = this._labelViews();\n        const xAxis = series._xAxisObj;\n        const yAxis = series._yAxisObj;\n        const wPad = xAxis instanceof CategoryAxis ? xAxis.categoryPad() * 2 : 0;\n        const yLen = inverted ? width : height;\n        const xLen = inverted ? height : width;\n        const org = inverted ? 0 : height;;\n\n        this._bars.forEach((bar, i) => {\n            const p = bar.point;\n\n            if (bar.setVisible(!p.isNull)) {\n                const wUnit = xAxis.getUnitLength(xLen, p.xValue) * (1 - wPad);\n                const wPoint = series.getPointWidth(wUnit);\n                const yVal = yAxis.getPosition(yLen, p.yValue);\n                const hPoint = Math.abs(yAxis.getPosition(yLen, p.lowValue) - yVal) * vr;\n                let labelView: PointLabelView;\n                let x: number;\n                let y: number;\n    \n                if (inverted) {\n                    y = xLen - xAxis.getPosition(xLen, p.xValue);\n                    x = org;\n                } else {\n                    x = xAxis.getPosition(xLen, p.xValue);\n                    y = org;\n                }\n    \n                if (inverted) {\n                    p.yPos = y += series.getPointPos(wUnit) - wPoint / 2;\n                    p.xPos = x += yAxis.getPosition(yLen, p.yGroup) * vr;\n                    x -= hPoint;\n                } else {\n                    p.xPos = x += series.getPointPos(wUnit) - wPoint / 2;\n                    p.yPos = y -= yAxis.getPosition(yLen, p.yGroup) * vr;\n                }\n    \n                p.hPoint = hPoint;\n                bar.layout(inverted).translate(x, y);\n    \n                // labels\n                if (labelViews) {\n                    // high\n                    if (labelView = labelViews.get(p, 1)) {\n                        const r = labelView.getBBounds();\n    \n                        if (inverted) {\n                            labelView.translate(x + hPoint + labelOff + p.radius, y - r.height / 2);\n                        } else {\n                            labelView.translate(x - r.width / 2, y - r.height - labelOff - p.radius);\n                        }\n                    }\n                    // low\n                    if (labelView = labelViews.get(p, 0)) {\n                        const r = labelView.getBBounds();\n    \n                        if (inverted) {\n                            labelView.translate(x - r.width - labelOff - p.radius, y - r.height / 2);\n                        } else {\n                            labelView.translate(x - r.width / 2, y + hPoint + labelOff + p.radius);\n                        }\n                    }\n                }\n            }\n        })\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// EqualizerSeriesView.ts\n// 2023. 08. 01. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { PathElement, RcElement } from \"../../common/RcControl\";\nimport { GroupElement } from \"../../common/impl/GroupElement\";\nimport { SvgShapes } from \"../../common/impl/SvgShape\";\nimport { DataPoint } from \"../../model/DataPoint\";\nimport { EqualizerSeries } from \"../../model/series/EqualizerSeries\";\nimport { BoxedSeriesView, IPointView, SeriesView } from \"../SeriesView\";\n\nclass BarElement extends GroupElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: DataPoint;\n\n    private _backs = new ElementPool<PathElement>(this, PathElement);\n    private _segments = new ElementPool<PathElement>(this, PathElement);\n    private _decimal = 0;\n\n    wPoint: number;\n    hPoint: number;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-equalizer-point');\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    prepareSegments(backs: boolean, total: number, count: number, decimal: number, backStyle: string): void {\n        this._decimal = decimal;\n        this._backs\n            .prepare(backs ? total : 0)\n            .forEach((v, i) => {\n                v.setStyleName(backStyle);\n            });\n        this._segments\n            .prepare(Math.round(count))\n            .forEach((v, i) => {\n                //v.className = stepStyle;\n            });\n    }\n\n    layout(pts: number[], x: number, y: number): void {\n        const w = this.wPoint;\n        const h = this.hPoint;\n        const m = h < 0 ? Math.max : Math.min;\n        \n        x -= w / 2;\n        if (h < 0) {\n            pts = pts.map(p => -p);\n        }\n\n        // back steps\n        this._backs.forEach((step, i) => {\n            step.setPath(SvgShapes.rectangle(0, y - pts[i * 2], w, m(-1, (pts[i * 2] - pts[i * 2 + 1]))));\n        })\n\n        // steps\n        this._segments.forEach((step, i, count) => {\n            // Math.min(-1, ): 0에 가까운 값이면 svg가 line을 표시하지 않는다.(TODO: 다르 방법?)\n            if (i === count - 1 && this._decimal > 0) {\n                step.setPath(SvgShapes.rectangle(x, y - pts[i * 2], w, h < 0 ? m(1, this._decimal) : m(-1, -this._decimal)));\n            } else {\n                step.setPath(SvgShapes.rectangle(x, y - pts[i * 2], w, m(-1, (pts[i * 2] - pts[i * 2 + 1]))));\n            }\n        })\n    }\n}\n\nexport class EqualizerSeriesView extends BoxedSeriesView<EqualizerSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _bars: ElementPool<BarElement>;\n    private _pts: number[];\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-equalizer-series')\n\n        this._bars = new ElementPool(this._pointContainer, BarElement);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._bars;\n    }\n\n    protected _preparePointViews(doc: Document, model: EqualizerSeries, points: DataPoint[]): void {\n        this.$_parepareBars(points);\n    }        \n\n    protected _layoutPointViews(width: number, height: number): void {\n        const len = (this._inverted ? width : height) * this._getViewRate();\n\n        this.$_buildSegments(this.model, len);\n\n        super._layoutPointViews(width, height);\n    }\n\n    protected _layoutPointView(view: BarElement, i: number, x: number, y: number, wPoint: number, hPoint: number): void {\n        view.wPoint = wPoint;\n        view.hPoint = hPoint;\n        view.layout(this._pts, x, y);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_parepareBars(points: DataPoint[]): void {\n        this._bars.prepare(points.length, (v, i) => {\n            const p = v.point = points[i];\n            p.color && v.setStyle('fill', p.color);\n        })\n    }\n\n    private $_buildSegments(series: EqualizerSeries, len: number): void {\n        const backs = series.backSegments;\n        const max = series._yAxisObj.axisMax();\n        const segmented = series.segmented;\n        const gap = series.segmentGap || 0;\n        const pts = this._pts = [];\n        let y = 0;\n        let sz: number;\n        let cnt: number;\n\n        if (series.maxCount > 0) {\n            cnt = series.maxCount;\n        } else {\n            cnt = Math.round(len / (series.getSegmentSize(len) + gap / 2));\n        }\n        sz = (len - gap * (cnt - 1)) / cnt;\n\n        while (pts.length < cnt * 2) {\n            pts.push(y, y + sz);\n            y += sz + gap;\n        }\n        pts[pts.length - 1] = len;\n\n        const total = pts.length / 2;\n\n        this._bars.forEach(bar => {\n            const p = bar.point;\n\n            if (bar.setVisible(!p.isNull)) {\n                const v = p.yValue / max;\n                let n = -1;\n                let decimal = 0;\n    \n                for (let i = 0; i < total - 1; i++) {\n                    if (v >= pts[i * 2] / len && v < pts[(i + 1) * 2] / len) {\n                        n = i + 1;\n                        if (!segmented && v < pts[i * 2 + 1] / len) {\n                            decimal = v * len - pts[i * 2];\n                        } else {\n                            decimal = sz;\n                        }\n                        break;\n                    }\n                }\n                if (n < 0) {\n                    n = total;\n                    decimal = sz;\n                }\n                // bar.getStyle = model.getPointStyle(i);\n                bar.prepareSegments(backs, total, n, decimal, series.backStyle as string);\n            }\n        });\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// ErrorBarSeriesView.ts\n// 2023. 07. 31. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { RcElement } from \"../../common/RcControl\";\nimport { GroupElement } from \"../../common/impl/GroupElement\";\nimport { LineElement } from \"../../common/impl/PathElement\";\nimport { ErrorBarSeries, ErrorBarSeriesPoint } from \"../../model/series/ErrorBarSeries\";\nimport { IPointView, RangedSeriesView, SeriesView } from \"../SeriesView\";\n\nclass BarElement extends GroupElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: ErrorBarSeriesPoint;\n\n    private _whiskerUp: LineElement;\n    private _whiskerDown: LineElement;\n    private _stem: LineElement;\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-errorbar-point');\n\n        this.add(this._stem = new LineElement(doc));\n        this.add(this._whiskerUp = new LineElement(doc));\n        this.add(this._whiskerDown = new LineElement(doc));\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    layout(): void {\n        const w = this.width\n        const h = this.height;\n        const x = w / 2;\n\n        this._stem.setVLine(x, 0, h);\n        this._whiskerUp.setHLine(0, 0, w);\n        this._whiskerDown.setHLine(h, 0, w);\n    }\n}\n\nexport class ErrorBarSeriesView extends RangedSeriesView<ErrorBarSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _bars = new ElementPool(this._pointContainer, BarElement);\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-errorbar-series')\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._bars;\n    }\n\n    protected _getLowValue(p: ErrorBarSeriesPoint): number {\n        return p.lowValue;\n    }\n\n    protected _preparePointViews(doc: Document, model: ErrorBarSeries, points: ErrorBarSeriesPoint[]): void {\n        this._bars.prepare(points.length, (v, i) => {\n            v.point = points[i];\n            v.setStyle('stroke', points[i].color);\n        });\n    }\n\n    protected _layoutPointView(box: BarElement, i: number, x: number, y: number, wPoint: number, hPoint: number): void {\n        box.setBounds(x - wPoint / 2, y, wPoint, hPoint);\n        box.layout();\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// FunnelSeriesView.ts\n// 2023. 07. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { PathBuilder } from \"../../common/PathBuilder\";\nimport { PathElement, RcElement } from \"../../common/RcControl\";\nimport { FunnelSeries, FunnelSeriesPoint } from \"../../model/series/FunnelSeries\";\nimport { IPointView, PointLabelView, SeriesView } from \"../SeriesView\";\nimport { SeriesAnimation } from \"../animation/SeriesAnimation\";\n\nclass FunnelSegment extends PathElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: FunnelSeriesPoint\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-funnel-point');\n    }\n}\n\nexport class FunnelSeriesView extends SeriesView<FunnelSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _segments: ElementPool<FunnelSegment>;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-funnel-series')\n\n        this._segments = new ElementPool(this._pointContainer, FunnelSegment);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._segments;\n    }\n\n    protected _prepareSeries(doc: Document, model: FunnelSeries): void {\n        this.$_prepareSegments(model._visPoints as FunnelSeriesPoint[]);\n    }\n\n    protected _renderSeries(width: number, height: number): void {\n        this.$_layoutSegments(width, height);\n    }\n\n    protected _runShowEffect(firstTime: boolean): void {\n        firstTime && SeriesAnimation.slide(this, { from: this.model.reversed ? 'bottom' : 'top'});\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_prepareSegments(points: FunnelSeriesPoint[]): void {\n        const count = points.length;\n\n        this._segments.prepare(count, (m, i) => {\n            const p = points[i];\n\n            m.point = p;\n            m.setStyle('fill', p.color);\n        })\n    }\n\n    private $_layoutSegments(width: number, height: number): void {\n\n        function getPosAt(y: number): number {\n            if (reversed) {\n                return x1 + (xNeck - x1) * (yEnd - y) / (yEnd - yNeck);\n            } else {\n                return x1 + (xNeck - x1) * (y - y1) / (yNeck - y1);\n            }\n        }\n\n        const series = this.model;\n        const labels = series.pointLabel;\n        const labelViews = this._labelViews();\n        const reversed = series.reversed;\n        const sz = series.getSize(width, height);\n        const szNeck = series.getNeckSize(width, height);\n        const builder = new PathBuilder();\n        const x1 = (width - sz.width) / 2;\n        const y1 = (height - sz.height) / 2;\n        const yEnd = y1 + sz.height;\n        const xMid = x1 + sz.width / 2;\n        const pNeck = sz.height - szNeck.height;\n        const yNeck = reversed ? yEnd - pNeck : y1 + pNeck;\n        const xNeck = x1 + (sz.width - szNeck.width) / 2;\n        let labelView: PointLabelView;\n\n        this._segments.forEach((seg) => {\n            const p = seg.point;\n\n            if (seg.setVisible(!p.isNull)) {\n                const start = p.yPos * sz.height;\n                const end = (p.yPos + p.height) * sz.height;\n                const y = reversed ? (yEnd - start) : y1 + start;\n                const y2 = reversed ? (yEnd - end) : y1 + end;\n                let x: number;\n                let x2: number;\n                let x3: number;\n                let x4: number;\n\n                if (start >= pNeck) {\n                    x = xNeck;\n                    x2 = x + szNeck.width;\n                    builder.move(x, y).lines(x2, y, x2, y2, x, y2);   \n                } else if (end < pNeck) {\n                    x = getPosAt(y);\n                    x2 = x + (xMid - x) * 2;\n                    x3 = getPosAt(y2);\n                    x4 = x3 + (xMid - x3) * 2;\n                    builder.move(x, y).lines(x2, y, x4, y2, x3, y2);\n                } else {\n                    x = getPosAt(y);\n                    x2 = x + (xMid - x) * 2;\n                    x3 = xNeck;\n                    x4 = x3 + szNeck.width;\n                    builder.move(x, y).lines(x2, y, x4, yNeck, x4, y2, x3, y2, x3, yNeck);\n                }\n    \n                const path = builder.close(true);\n                seg.setPath(path);\n    \n                p.xPos = xMid;\n                p.yPos = y + (y2 - y) / 2;\n    \n                // label\n                if (labelViews && (labelView = labelViews.get(p, 0))) {\n                    const r = labelView.getBBounds();\n    \n                    labelView.translate(xMid - r.width / 2, y + ((y2 - y) - r.height) / 2);\n                }\n            }\n        });\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// HeatmapSeriesView.ts\n// 2023. 08. 02. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { Color } from \"../../common/Color\";\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { RcElement } from \"../../common/RcControl\";\nimport { RectElement } from \"../../common/impl/RectElement\";\nimport { HeatmapSeries, HeatmapSeriesPoint } from \"../../model/series/HeatmapSeries\";\nimport { IPointView, PointLabelView, SeriesView } from \"../SeriesView\";\nimport { SeriesAnimation } from \"../animation/SeriesAnimation\";\n\nclass CellView extends RectElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: HeatmapSeriesPoint;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-heatmap-point');\n    }\n}\n\nexport class HeatmapSeriesView extends SeriesView<HeatmapSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _cells: ElementPool<CellView>;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-heatmap-series')\n\n        this._cells = new ElementPool(this._pointContainer, CellView);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._cells;\n    }\n\n    protected _prepareSeries(doc: Document, model: HeatmapSeries): void {\n        this.$_parepareCells(model._visPoints as HeatmapSeriesPoint[]);\n    }\n\n    protected _renderSeries(width: number, height: number): void {\n        this._pointContainer.invert(this._inverted, height);\n        this.$_layoutCells(width, height);\n    }\n\n    protected _runShowEffect(firstTime: boolean): void {\n        firstTime && SeriesAnimation.slide(this);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_parepareCells(points: HeatmapSeriesPoint[]): void {\n        this._cells.prepare(points.length, (v, i) => {\n            v.point = points[i];\n        });\n    }\n\n    protected $_layoutCells(width: number, height: number): void {\n        const series = this.model;\n        const inverted = series.chart.isInverted();\n        const labels = series.pointLabel;\n        const labelOff = labels.offset;\n        const labelViews = this._labelViews();\n        const xAxis = series._xAxisObj;\n        const yAxis = series._yAxisObj;\n        const yLen = inverted ? width : height;\n        const xLen = inverted ? height : width;\n        const color = new Color(series.color);\n\n        this._cells.forEach(cell => {\n            const p = cell.point as HeatmapSeriesPoint;\n            const wUnit = xAxis.getUnitLength(xLen, p.xValue);\n            const wPoint = wUnit;\n            const hUnit = yAxis.getUnitLength(yLen, p.yValue);\n            const hPoint = hUnit;\n            const org = inverted ? 0 : height;;\n            let x: number;\n            let y: number;\n            let labelView: PointLabelView;\n\n            x = (p.xPos = xAxis.getPosition(xLen, p.xValue)) - wUnit / 2;\n            y = (p.yPos = org - yAxis.getPosition(yLen, p.yValue)) - hUnit / 2;\n\n            cell.setBounds(x, y, wPoint, hPoint);\n            cell.setStyle('fill', color.brighten(1 - p.colorValue / series._colorMax).toString());\n\n            // label\n            if (labelViews && (labelView = labelViews.get(p, 0))) {\n                const r = labelView.getBBounds();\n\n                if (inverted) {\n                    y = xLen - xAxis.getPosition(xLen, p.xValue);\n                    x = org;\n                    y -= r.height / 2;\n                    x += yAxis.getPosition(yLen, p.yValue) - r.width / 2;\n                } else {\n                    x += (wPoint - r.width) / 2;\n                    y += (hPoint - r.height) / 2;\n                }\n\n                labelView.translate(x, y);\n            }\n        });\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// HistogramSeriesView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { RcElement } from \"../../common/RcControl\";\nimport { SvgShapes } from \"../../common/impl/SvgShape\";\nimport { DataPoint } from \"../../model/DataPoint\";\nimport { LinearAxis } from \"../../model/axis/LinearAxis\";\nimport { HistogramSeries, HistogramSeriesPoint } from \"../../model/series/HistogramSeries\";\nimport { BoxPointElement, BoxedSeriesView, ClusterableSeriesView, LabelLayoutInfo, SeriesView } from \"../SeriesView\";\nimport { SeriesAnimation } from \"../animation/SeriesAnimation\";\n\nclass BarElement extends BoxPointElement {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    layout(x: number, y: number): void {\n        this.setPath(SvgShapes.rect({\n            x: x - this.wPoint / 2,\n            y,\n            width: this.wPoint,\n            height: -this.hPoint\n        }));\n    }\n}\n\nexport class HistogramSeriesView extends ClusterableSeriesView<HistogramSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _bars: ElementPool<BarElement> = new ElementPool(this._pointContainer, BarElement);\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-histogram-series')\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._bars;\n    }\n\n    protected _preparePointViews(doc: Document, model: HistogramSeries, points: HistogramSeriesPoint[]): void {\n        this.$_parepareBars(doc, points);\n    }\n\n    protected _layoutPointView(bar: BarElement, i: number, x: number, y: number, wPoint: number, hPoint: number): void {\n        bar.wPoint = wPoint;\n        bar.hPoint = hPoint;\n        bar.layout(x, y);\n    }\n\n    protected _layoutPointViews(width: number, height: number): void {\n        const series = this.model;\n        const inverted = this._inverted;\n        const vr = this._getViewRate();\n        const labels = series.pointLabel;\n        const labelViews = this._labelViews();\n        const xAxis = series._xAxisObj;\n        const yAxis = series._yAxisObj;\n        const yLen = inverted ? width : height;\n        const xLen = inverted ? height : width;\n        const yBase = yAxis.getPosition(yLen, series.getBaseValue(yAxis));\n        const org = inverted ? 0 : height;;\n        const info: LabelLayoutInfo = labelViews && Object.assign(this._labelInfo, {\n            inverted,\n            labelPos: series.getLabelPosition(labels.position),\n            labelOff: series.getLabelOff(labels.offset)\n        });\n\n        this._getPointPool().forEach((pointView: BarElement, i) => {\n            const p = pointView.point as HistogramSeriesPoint;\n            const x1 = xAxis.getPosition(xLen, p.min);\n            const x2 = xAxis.getPosition(xLen, p.max);\n            const yVal = yAxis.getPosition(yLen, p.yValue);\n            const w = (x2 - x1) + (x2 > x1 ? -1 : 1);\n            const h = yVal - yBase;\n            let x = x1 + (x2 - x1) / 2;\n            let y = org;\n\n            p.xPos = x;\n            p.yPos = y -= yVal;\n\n            // 아래에서 위로 올라가는 animation을 위해 바닥 지점을 전달한다.\n            this._layoutPointView(pointView, i, x, y + h, w, h * vr);\n\n            if (info && (info.labelView = labelViews.get(p, 0))) {\n                if (inverted) {\n                    y = xLen - x;\n                    x = org;\n                    p.yPos = y;\n                    p.xPos = x += yAxis.getPosition(yLen, p.yGroup); // stack/fill일 때 org와 다르다.\n                }\n\n                info.pointView = pointView;\n                info.x = x;\n                info.y = y;\n                info.wPoint = w;\n                info.hPoint = h;\n                this._layoutLabel(info);\n            }\n        })\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_parepareBars(doc: Document, points: HistogramSeriesPoint[]): void {\n        this._bars.prepare(points.length, (v, i) => {\n            v.point = points[i];\n        });\n    }\n\n    private $_layoutBars(width: number, height: number): void {\n        const xAxis = this.model._xAxisObj;\n        const yAxis = this.model._yAxisObj;\n        const y = this.height;\n        const vr = this._getViewRate();\n\n        this._bars.forEach((bar, i) => {\n            const p = bar.point as HistogramSeriesPoint;\n            const x1 = xAxis.getPosition(width, p.min);\n            const x2 = xAxis.getPosition(width, p.max);\n            const x = x1 + (x2 - x1) / 2;\n            const h = yAxis.getPosition(height, bar.point.yValue) * vr;\n            const w = Math.max(1, x2 - x1 - 1);\n\n            p.xPos = x;\n            p.yPos = y - h;\n\n            bar.wPoint = w;\n            bar.hPoint = h;\n            bar.layout(x, y);\n        })\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// LollipopSeriesView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { PathElement, RcElement } from \"../../common/RcControl\";\nimport { GroupElement } from \"../../common/impl/GroupElement\";\nimport { LineElement } from \"../../common/impl/PathElement\";\nimport { LollipopSeries, LollipopSeriesPoint } from \"../../model/series/LollipopSeries\";\nimport { BoxedSeriesView, IPointView, SeriesView } from \"../SeriesView\";\n\nclass BarElement extends GroupElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: LollipopSeriesPoint;\n\n    private _line: LineElement;\n    private _marker: PathElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-lollipop-point');\n\n        this.add(this._line = new LineElement(doc));\n        this.add(this._marker = new PathElement(doc, 'rct-lollipop-point-marker'));\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    layout(): void {\n        this._line.setVLineC(0, 0, this.height);\n        this._marker.renderShape(this.point.shape, 0, 0, this.point.radius);\n    }\n}\n\nexport class LollipopSeriesView extends BoxedSeriesView<LollipopSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _bars: ElementPool<BarElement>;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-lollipop-series')\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._bars;\n    }\n\n    protected _preparePointViews(doc: Document, model: LollipopSeries, points: LollipopSeriesPoint[]): void {\n        this.$_parepareBars(doc, model, points);\n    }\n\n    protected _layoutPointView(view: BarElement, i: number, x: number, y: number, wPoint: number, hPoint: number): void {\n        view.setBounds(x, y - hPoint, 0, hPoint);\n        view.layout();\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_parepareBars(doc: Document, model: LollipopSeries, points: LollipopSeriesPoint[]): void {\n        const style = model.style;\n\n        if (!this._bars) {\n            this._bars = new ElementPool(this._pointContainer, BarElement);\n        }\n        this._bars.prepare(points.length, (v, i) => {\n            v.point = points[i];\n            v.setStyle('fill', points[i].color);\n            v.setStyleOrClass(style);\n        });\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// OhlcSeriesView.ts\n// 2023. 08. 08. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { Dom } from \"../../common/Dom\";\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { RcElement } from \"../../common/RcControl\";\nimport { GroupElement } from \"../../common/impl/GroupElement\";\nimport { LineElement } from \"../../common/impl/PathElement\";\nimport { RectElement } from \"../../common/impl/RectElement\";\nimport { OhlcSeries, OhlcSeriesPoint } from \"../../model/series/OhlcSeries\";\nimport { IPointView, PointLabelView, RangedSeriesView, SeriesView } from \"../SeriesView\";\n\nclass StickView extends GroupElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: OhlcSeriesPoint;\n\n    private _back: RectElement;\n    private _tickOpen: LineElement;\n    private _tickClose: LineElement;\n    private _bar: LineElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-ohlc-point');\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    layout(): void {\n        const p = this.point;\n        const w = this.width;\n        const h = this.height;\n        const len = p.highValue - p.lowValue;\n        const x = 0;//this.width / 2;\n        const x1 = -w / 2;\n        let y = 0;\n        const yOpen = y + h - h * (Math.min(p.openValue, p.closeValue) - p.lowValue) / len;\n        const yClose = y + h - h * (Math.max(p.openValue, p.closeValue) - p.lowValue) / len;\n\n        this._back.setBox(x1, 0, w, h);\n        this._tickOpen.setHLine(yOpen, x1, x);\n        this._tickClose.setHLine(yClose, x, this.width);\n        this._bar.setVLine(x, y, y + h);\n        //this._bar.setBounds(0, Math.min(yClose, yOpen), w, Math.max(1, Math.abs(yOpen - yClose)));\n        this._bar.setStyleName(p.close < p.open ? 'rct-ohlc-point-bar-fall' : 'rct-ohlc-point-bar')\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doInitChildren(doc: Document): void {\n        this.add(this._tickOpen = new LineElement(doc, 'rct-ohlc-point-tick'));\n        this.add(this._tickClose = new LineElement(doc, 'rct-ohlc-point-tick'));\n        this.add(this._bar = new LineElement(doc));\n        this.add(this._back = new RectElement(doc, 'rct-ohlc-point-back'));\n\n        Dom.setImportantStyle(this._back.dom.style, 'fill', 'transparent'); // for hit testing\n    }\n}\n\nexport class OhlcSeriesView extends RangedSeriesView<OhlcSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _sticks = new ElementPool(this._pointContainer, StickView);\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-ohlc-series')\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._sticks;\n    }\n\n    protected _getLowValue(p: OhlcSeriesPoint): number {\n        return p.lowValue;\n    }\n\n    protected _preparePointViews(doc: Document, model: OhlcSeries, points: OhlcSeriesPoint[]): void {\n        this.$_prepareSticks(points);\n    }\n\n    protected _layoutPointView(view: StickView, index: number, x: number, y: number, wPoint: number, hPoint: number): void {\n        view.setBounds(x, y, wPoint, hPoint);\n        view.layout();\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_prepareSticks(points: OhlcSeriesPoint[]): void {\n        this._sticks.prepare(points.length, (box, i) => {\n            box.point = points[i];\n        })\n    }\n\n    private $_layoutSticks(width: number, height: number): void {\n        const series = this.model;\n        const inverted = this._inverted;\n        const vr = this._getViewRate();\n        const labels = series.pointLabel;\n        const labelOff = labels.offset;\n        const labelViews = this._labelViews();\n        const xAxis = series._xAxisObj;\n        const yAxis = series._yAxisObj;\n        const yOrg = this.height;\n\n        this._sticks.forEach((box, i) => {\n            const p = box.point;\n\n            if (box.setVisible(!p.isNull)) {\n                const wUnit = xAxis.getUnitLength(width, p.xValue);\n                const wPoint = series.getPointWidth(wUnit);\n                const x = (p.xPos = xAxis.getPosition(width, p.xValue)) - wPoint / 2;\n                const y = p.yPos = yOrg - yAxis.getPosition(height, p.yValue) * vr;\n                const w = wPoint;\n                const h = Math.abs(yOrg - yAxis.getPosition(height, p.lowValue) - y) * vr;\n                let view: PointLabelView;\n    \n                box.setBounds(x, y, w, h);\n                box.layout();\n    \n                if (labelViews && (view = labelViews.get(p, 0))) {\n                    const r = view.getBBounds();\n                    view.translate(x + (w - r.width) / 2, y - r.height - labelOff);\n                }\n            }\n        })\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// ParetoSeriesView.ts\n// 2023. 07. 22. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ParetoSeries } from \"../../model/series/ParetoSeries\";\nimport { LineSeriesBaseView } from \"./LineSeriesView\";\n\nexport class ParetoSeriesView extends LineSeriesBaseView<ParetoSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-pareto-series');\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}","////////////////////////////////////////////////////////////////////////////////\n// CircleElement.ts\n// 2023. 06. 03. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021-2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { RcElement } from \"../RcControl\";\n\nexport class CircleElement extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // static members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName?: string, cx?: number, cy?: number, radius?: number) {\n        super(doc, styleName, 'circle');\n\n        if (typeof cx === 'number') {\n            this.setCircle(cx, cy, radius);\n        }\n    }\n\n\t//-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    setCircle(cx: number, cy: number, radius: number) {\n        this.setAttrs({\n            cx: cx, \n            cy: cy,\n            r: radius\n        });\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n","////////////////////////////////////////////////////////////////////////////////\n// PieSeriesView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { PathBuilder } from \"../../common/PathBuilder\";\nimport { RcElement } from \"../../common/RcControl\";\nimport { ORG_ANGLE, deg2rad } from \"../../common/Types\";\nimport { Utils } from \"../../common/Utils\";\nimport { CircleElement } from \"../../common/impl/CircleElement\";\nimport { ISectorShape, SectorElement } from \"../../common/impl/SectorElement\";\nimport { PieSeries, PieSeriesGroup, PieSeriesPoint } from \"../../model/series/PieSeries\";\nimport { IPointView, PointLabelContainer, PointLabelLine, PointLabelLineContainer, PointLabelView, SeriesView } from \"../SeriesView\";\nimport { SeriesAnimation } from \"../animation/SeriesAnimation\";\n\nclass SectorView extends SectorElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: PieSeriesPoint;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-pie-point');\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    setSectorEx(labels: PointLabelContainer, lines: PointLabelLineContainer, newSector: ISectorShape, animate = false): boolean {//, duration = Animation.SHORT_DURATION): boolean {\n        let animated = false;\n\n        // if (!this.equals(newSector)) {\n            if (animate) {\n                // this.animate({\n                //     duration: duration,\n                //     onStart: (element, anim) => {\n                //         anim.tag = this._getShape();\n                //     },\n                //     onFinish: (element, anim) => {\n                //         (element as SectorElement).setSector(newSector);\n                //         labels.get((element as PieSector).point, 0).moving = false;\n                //     },\n                //     onUpdate: (element, anim, rate): number => {\n                //         const org = anim.tag as ISectorShape;\n                //         const sector = {...org};\n\n                //         sector.start = org.start + (newSector.start - org.start) * rate;\n                //         sector.angle = org.angle + (newSector.angle - org.angle) * rate;\n\n                //         (element as SectorElement).setSector(sector);\n\n                //         // label & line\n                //         const point = (element as PieSector).point;\n                //         const off = point.series.series.pointLabel.offset;\n                //         const distance = point.series.series.labelDistance;;\n                //         const slicedOff = (point.series as PieSeriesViewModel).getSlicedOffset(sector.rx);\n                //         const label = labels.get(point, 0);\n                //         const r = label.getBBounds();\n                //         const line = lines.get(point);\n                //         const a = sector.start + sector.angle / 2;\n\n                //         const isLeft = Utils.isLeft(a);\n                //         let cx = sector.cx;\n                //         let cy = sector.cy;\n                //         let rx = sector.rx + distance * 0.8;\n                //         let dx = 0;\n                //         let dy = 0;\n\n                //         label.moving = true;                        \n\n                //         if (point.sliced) {\n                //             dx = Math.cos(a) * slicedOff;\n                //             dy = Math.sin(a) * slicedOff;\n                //         }\n                        \n                //         let x1 = cx + Math.cos(a) * sector.rx;\n                //         let y1 = cy + Math.sin(a) * sector.ry;\n                //         let x2 = cx + Math.cos(a) * rx;\n                //         let y2 = cy + Math.sin(a) * rx;\n                //         let x3: number;\n        \n                //         if (isLeft) {\n                //             x3 = x2 - distance * 0.2;\n                //         } else {\n                //             x3 = x2 + distance * 0.2;\n                //         }\n        \n                //         line.move(x1, y1);\n                //         line.translate(x1 + dx, y1 + dy);\n        \n                //         if (isLeft) {\n                //             x3 -= r.width + off;\n                //             y2 -= r.height / 2;\n                //         } else {\n                //             x3 += off;\n                //             y2 -= r.height / 2;\n                //         }\n                //         label.move(x3, y2); // 위치 정보만 저장하는 것.\n                //         label.translate(x3 + dx, y2 + dy);\n                //         return;\n                //     }\n                // })\n                animated = true;\n            } else {\n                this._assignShape(newSector);\n            }\n        // }\n        return animated;\n    }\n\n    // slice(labels: PointLabelContainer, lines: PointLabelLineContainer, sliced: boolean, cx: number, cy: number, offset: number, duration: number): boolean {\n    //     const point = this.point;\n        \n    //     if (sliced !== this.point.sliced) {\n    //         point.sliced = sliced;\n\n    //         const label = labels.get(point, 0);\n    //         const line = lines.get(point);\n    //         const a = point.startAngle + point.angle / 2;\n    //         const tx2 = sliced ? Math.cos(a) * offset : 0;\n    //         const ty2 = sliced ? Math.sin(a) * offset : 0;\n    \n    //         // this.translateEx(tx2, ty2, true, duration);\n    //         // line.translateEx(line.x + tx2, line.y + ty2, true, duration);\n    //         // label.translateEx(label.x + tx2, label.y + ty2, true, duration);\n    //         this.translate(tx2, ty2);\n    //         line.translate(line.x + tx2, line.y + ty2);\n    //         label.translate(label.x + tx2, label.y + ty2);\n    //         return true;\n    //     }\n    // }\n}\n\nexport class PieSeriesView extends SeriesView<PieSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _circle: CircleElement;\n    private _sectors = new ElementPool(this._pointContainer, SectorView, null, 0.5);\n    private _lineContainer: PointLabelLineContainer;\n\n    private _cx = 0;\n    private _cy = 0;\n    private _rd = 0;\n    private _rdInner = 0;\n    private _slicedOff = 0;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-pie-series')\n\n        this.add(this._circle = new CircleElement(doc));\n        this._circle.setStyles({\n            stroke: '#aaa',\n            fill: 'none',\n            strokeDasharray: '2'\n        });\n\n        this.add(this._lineContainer = new PointLabelLineContainer(doc));\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._sectors;\n    }\n\n    protected _prepareSeries(doc: Document, model: PieSeries): void {\n        this.$_prepareSectors(model._visPoints as PieSeriesPoint[]);\n        this._lineContainer.prepare(model);\n    }\n\n    protected _renderSeries(width: number, height: number): void {\n        if (!isNaN(this.model._groupPos)) {\n            this.$_calcGroup(width, height);\n        } else {\n            this.$_calcNormal(width, height);\n        }\n\n        this.$_layoutSectors(this.model._visPoints as PieSeriesPoint[], width, height);\n    }\n\n    private $_calcNormal(width: number, height: number): void {\n        const sz = this.model.getSize(width, height);\n\n        this._rd = Math.floor(sz / 2);\n        this._rdInner = this.model.getInnerRadius(this._rd);\n    }\n\n    private $_calcGroup(width: number, height: number): void {\n        const m = this.model;\n        const g = m.group as PieSeriesGroup;\n        const sz = Math.floor(g ? g.getPolarSize(width, height) / 2 : m.getSize(width, height) / 2);\n        const szInner = g ? g.getInnerRadius(sz) * sz : m.getInnerRadius(sz);\n        const len = sz - szInner;\n\n        this._rd = szInner + (m._groupPos + m._groupSize) * len;\n        this._rdInner = (szInner + m._groupPos * len) / this._rd;\n    }\n\n    protected _runShowEffect(firstTime: boolean): void {\n        firstTime && SeriesAnimation.grow(this);\n    }\n\n    protected _doPointClicked(view: IPointView): void {\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_prepareSectors(points: PieSeriesPoint[]): void {\n        const count = points.length;\n        // const sum = points.map(p => p.yValue).reduce((a, c) => a + c, 0);\n        // let start = this._startAngle = ORG_ANGLE + deg2rad(this.model.startAngle);\n\n        // points.forEach(p => {\n        //     p.yRate = p.yValue / sum\n        //     p.startAngle = start;\n        //     start += p.angle = p.yRate * Math.PI * 2;\n        // });\n\n        this._sectors.prepare(count, (sector, i) => {\n            const p = points[i];\n            // const a = i < count - 1 ? points[i + 1].startAngle : p.endAngle;\n\n            // sector.start = a;\n            // sector.angle = 0;\n            sector.point = p;\n\n            sector.setAttr('aria-label', p.ariaHint());\n            sector.setStyle('fill', p.color);\n            // sector.setStyle('stroke', 'white'); <= css에서\n        })\n    }\n\n    private $_calcAngles(points: PieSeriesPoint[]): void {\n        const vr = this._getViewRate();\n        const sum = points.map(p => p.yValue).reduce((a, c) => a + c, 0);\n        let start = ORG_ANGLE + deg2rad(this.model.startAngle);\n\n        points.forEach(p => {\n            p.yRate = p.yValue / sum\n            p.startAngle = start;\n            start += p.angle = p.yRate * Math.PI * 2 * vr;\n        });\n    }\n\n    private $_layoutSectors(points: PieSeriesPoint[], width: number, height: number): void {\n        const series = this.model;\n        const vr = this._getViewRate();\n        const cx = this._cx = Math.floor(width / 2);\n        const cy = this._cy = Math.floor(height / 2);\n        const rd = this._rd;\n        const rdInner = this._rdInner;\n        const labels = series.pointLabel;\n        const labelInside = series.getLabelPosition();\n        const labelOff = labels.offset;\n        const labelViews = this._labelViews();\n        const lineViews = this._lineContainer;\n        const sliceOff = this._slicedOff = series.getSliceOffset(rd) * vr; // TODO: sector 후에...\n        const pb = new PathBuilder();\n        let labelView: PointLabelView;\n\n        if (this._circle.visible = this._sectors.isEmpty) {\n            this._circle.setCircle(this._cx, this._cy, this._rd);\n        }\n\n        this.$_calcAngles(points);\n\n        this._sectors.forEach((sector) => {\n            const p = sector.point;\n            const start = p.startAngle;\n            let dx = 0;\n            let dy = 0;\n\n            if (p.sliced) {\n                const a = start + p.angle / 2;\n                dx += Math.cos(a) * sliceOff;\n                dy += Math.sin(a) * sliceOff;\n            }\n\n            const a = p.startAngle + p.angle / 2;\n            p.xPos = cx + Math.cos(a) * (sliceOff + rd * 0.7);\n            p.yPos = cy + Math.sin(a) * (sliceOff + rd * 0.7);\n\n            sector.setSectorEx(labelViews, /*lines*/null, {\n                cx: cx + dx,\n                cy: cy + dy,\n                rx: rd,\n                ry: rd,\n                innerRadius: rdInner,\n                start: start,\n                angle: p.angle,\n                clockwise: true\n            }, false);\n\n            // label\n            if (labelViews && (labelView = labelViews.get(p, 0))) {\n                const line = lineViews.get(p);\n\n                if (labelInside) {\n                    line.visible = false;\n                    // this.$_layoutLabelInner(p, label, off, dist, slicedOff);\n                    this.$_layoutLabelInner(p, labelView, 0, 0, p.sliced ? sliceOff : 0);\n                } else {\n                    line.visible = true;\n                    // this.$_layoutLabel(p, labelView, line, off, dist, slicedOff, pb);\n                    this.$_layoutLabel(p, labelView, line, 0, 0, p.sliced ? sliceOff : 0, pb);\n                }\n                labelView.setContrast(labelInside && sector.dom);\n            }\n        })\n    }\n    \n    private $_layoutLabel(p: PieSeriesPoint, view: PointLabelView, line: PointLabelLine, off: number, dist: number, sliceOff: number, pb: PathBuilder): void {\n        const r = view.getBBounds();\n        const a = p.startAngle + p.angle / 2;\n        const isLeft = Utils.isLeft(a);\n        let cx = this._cx;\n        let cy = this._cy;\n        let rd = this._rd + dist * 0.8;\n        let dx = Math.cos(a) * sliceOff;\n        let dy = Math.sin(a) * sliceOff;\n\n        let x1 = cx + Math.cos(a) * this._rd;\n        let y1 = cy + Math.sin(a) * this._rd;\n        let x2 = cx + Math.cos(a) * rd;\n        let y2 = cy + Math.sin(a) * rd;\n        let x3: number;\n\n        if (isLeft) {\n            x3 = x2 - dist * 0.2;\n        } else {\n            x3 = x2 + dist * 0.2;\n        }\n\n        if (line) {\n            line.visible = true;\n            line.move(x1, y1);\n            //line.setPath(pb.move(x1, y1).lines(x2, y2, x3, y2).end())\n            line.setLine(pb.move(0, 0).quad(x2 - x1, y2 - y1, x3 - x1, y2 - y1).end())\n            !view.moving && line.translate(x1 + dx, y1 + dy);\n        }\n\n        if (isLeft) {\n            x3 -= r.width + off;\n            y2 -= r.height / 2;\n        } else {\n            x3 += off;\n            y2 -= r.height / 2;\n        }\n        view.move(x3, y2); // 위치 정보 저장.\n        !view.moving && view.layout().translate(x3 + dx, y2 + dy);\n    }\n\n    private $_layoutLabelInner(p: PieSeriesPoint, view: PointLabelView, off: number, dist: number, sliceOff: number): void {\n        const r = view.getBBounds();\n        const a = p.startAngle + p.angle / 2;\n        let x = this._cx + Math.cos(a) * (sliceOff + this._rd * 0.7);\n        let y = this._cy + Math.sin(a) * (sliceOff + this._rd * 0.7);\n\n        view.layout().translate(x - r.width / 2, y - r.height / 2);\n    }\n\n    protected _doViewRateChanged(rate: number): void {\n        this.$_layoutSectors(this.model._visPoints as PieSeriesPoint[], this.width, this.height)\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// ScatterSeriesView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { PathElement, RcElement } from \"../../common/RcControl\";\nimport { IRect } from \"../../common/Rectangle\";\nimport { SvgShapes } from \"../../common/impl/SvgShape\";\nimport { ScatterSeries, ScatterSeriesPoint } from \"../../model/series/ScatterSeries\";\nimport { IPointView, PointLabelView, SeriesView } from \"../SeriesView\";\nimport { SeriesAnimation } from \"../animation/SeriesAnimation\";\n\nclass MarkerView extends PathElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: ScatterSeriesPoint;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-scatter-point-marker');\n    }\n}\n\nexport class ScatterSeriesView extends SeriesView<ScatterSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _markers: ElementPool<MarkerView>;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-scatter-series')\n\n        this._markers = new ElementPool(this._pointContainer, MarkerView);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._markers;\n    }\n\n    protected _prepareSeries(doc: Document, model: ScatterSeries): void {\n        this.$_prepareMarkers(model._visPoints as ScatterSeriesPoint[]);\n    }\n\n    protected _renderSeries(width: number, height: number): void {\n        // this._pointContainer.invert(this.model.chart.isInverted(), height);\n        this.$_layoutMarkers(width, height);\n    }\n\n    protected _runShowEffect(firstTime: boolean): void {\n        firstTime && SeriesAnimation.slide(this);\n    }\n\n    private $_prepareMarkers(points: ScatterSeriesPoint[]): void {\n        const series = this.model;\n        const color = series.color;\n        const marker = series.marker;\n        const count = points.length;\n\n        this._pointContainer.setStyle('fill', color);\n\n        this._markers.prepare(count, (m, i) => {\n            const p = points[i];\n\n            m.point = p;\n            // m.setStyle('fill', color);\n        })\n    }\n\n    private $_layoutMarkers(width: number, height: number): void {\n        const series = this.model;\n        const inverted = this._inverted;\n        const marker = series.marker;\n        const labels = series.pointLabel;\n        const labelOff = labels.offset;\n        const labelViews = this._labelViews();\n        const xAxis = series._xAxisObj;\n        const yAxis = series._yAxisObj;\n        const yLen = inverted ? width : height;\n        const xLen = inverted ? height : width;\n        const yOrg = height;\n        let labelView: PointLabelView;\n        let r: IRect;\n\n        this._markers.forEach((mv, i) => {\n            const p = mv.point;\n\n            if (mv.setVisible(!p.isNull)) {\n                const s = marker.shape;\n                const sz = marker.radius;\n                let path: (string | number)[];\n                let x: number;\n                let y: number;\n\n                // m.className = model.getPointStyle(i);\n\n                x = p.xPos = xAxis.getPosition(xLen, p.xValue);\n                y = p.yPos = yOrg - yAxis.getPosition(yLen, p.yValue);\n                if (inverted) {\n                    x = yAxis.getPosition(yLen, p.yGroup);\n                    y = yOrg - xAxis.getPosition(xLen, p.xValue);\n                }\n\n                switch (s) {\n                    case 'square':\n                    case 'diamond':\n                    case 'triangle':\n                    case 'itriangle':\n                        path = SvgShapes[s](0 - sz, 0 - sz, sz * 2, sz * 2);\n                        break;\n\n                    default:\n                        path = SvgShapes.circle(0, 0, sz);\n                        break;\n                }\n                mv.setPath(path);\n                mv.translate(x, y);\n\n                // label\n                if (labelViews && (labelView = labelViews.get(p, 0))) {\n                    r = labelView.getBBounds();\n                    labelView.translate(x - r.width / 2, y - r.height / 2);\n                }\n            }\n        });\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// TreemapSeriesView.ts\n// 2023. 08. 02. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { Color } from \"../../common/Color\";\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { PathElement, RcElement } from \"../../common/RcControl\";\nimport { SvgShapes } from \"../../common/impl/SvgShape\";\nimport { DataPoint } from \"../../model/DataPoint\";\nimport { TreeNode, TreemapSeries } from \"../../model/series/TreemapSeries\";\nimport { IPointView, PointLabelView, SeriesView } from \"../SeriesView\";\nimport { SlideAnimation } from \"../animation/SeriesAnimation\";\n\nclass NodeView extends PathElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    node: TreeNode;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-treemap-point');\n    }\n\n    get point(): DataPoint {\n        return this.node.point;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    render(): void {\n        this.setPath(SvgShapes.rect(this.node));\n    }\n}\n\nexport class TreemapSeriesView extends SeriesView<TreemapSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _nodeViews: ElementPool<NodeView>;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-Treemap-series')\n\n        this._nodeViews = new ElementPool(this._pointContainer, NodeView);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _lazyPrepareLabels(): boolean {\n        return true;\n    }\n\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._nodeViews;\n    }\n\n    protected _prepareSeries(doc: Document, model: TreemapSeries): void {\n    }\n\n    protected _renderSeries(width: number, height: number): void {\n        const series = this.model;\n        const labels = series.pointLabel;\n        const labelViews = this._labelViews();\n        const nodes = series.buildMap(width, height);\n        const color = new Color(series.color);\n        let labelView: PointLabelView;\n\n        // buildMap()으로 leafs가 결정돼야 한다.\n        labelViews.prepare(this.doc, series);\n\n        this._nodeViews.prepare(nodes.length, (v, i, count) => {\n            const m = nodes[i];\n            const g = m.parent;\n            let c = color;\n\n            if (g) {\n                if (!g._color && g.point.color) {\n                    c = g._color = new Color(g.point.color);\n                }\n                if (g._color) {\n                    c = g._color;\n                }\n            }\n\n            v.node = m;\n            v.setStyle('fill', c.brighten(m.index / count).toString());\n            v.render();\n            m.point.xPos = m.x + m.width / 2;\n            m.point.yPos = m.y + m.height / 2;\n\n            // label\n            if (labelViews && (labelView = labelViews.get(m.point, 0))) {\n                const r = labelView.getBBounds();\n\n                // 너비나 높이가 모두 한글자는 표시할 수 있을 정도가 돼야 표시.\n                if (labelView.setVisible(m.width >= r.height && m.height >= r.height)) {\n                // if (labelView.setVisible(m.width >= r.width && m.height >= r.height)) {\n                    labelView.translate(m.x + m.width / 2 - r.width / 2, m.y + m.height / 2 - r.height / 2);\n                }\n            }\n        })\n    }\n\n    protected _runShowEffect(firstTime: boolean): void {\n        firstTime && new SlideAnimation(this);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}","////////////////////////////////////////////////////////////////////////////////\n// VectorSeriesView.ts\n// 2023. 08. 02. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { PathElement, RcElement } from \"../../common/RcControl\";\nimport { ArrowHead, VectorSeries, VectorSeriesPoint } from \"../../model/series/VectorSeries\";\nimport { IPointView, SeriesView } from \"../SeriesView\";\nimport { SeriesAnimation } from \"../animation/SeriesAnimation\";\n\nclass ArrowView extends PathElement implements IPointView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    point: VectorSeriesPoint;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, SeriesView.POINT_CLASS + ' rct-vector-point');\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    layout(headType: ArrowHead, rotation: number, inverted: boolean): void {\n        const len = this.point._len;\n        const off = this.point._off;\n        const body = 1 / 2;\n        let pts: any[];\n\n        switch (headType) {\n            case ArrowHead.NONE:\n                pts = [\n                    0, -body * len,\n                    0, body * len\n                ];\n                break;\n            case ArrowHead.OPEN:\n                const w2 = 1.5 / 10;\n                const h2 = 4.5 / 10;\n                const h3 = 2 / 10;\n                pts = [\n                    0, -h2 * len,\n                    -w2 * len, -h3 * len,\n                    0, -body * len,\n                    w2 * len, -h3 * len,\n                    0, -h2 * len,\n                    0, body * len\n                ];\n                break;\n            default:\n                const w = 1 / 10;\n                const h = 3 / 10;\n                pts = [\n                    0, -h * len,\n                    -w * len, -h * len,\n                    0, -body * len,\n                    w * len, -h * len,\n                    0, -h * len,\n                    0, body * len\n                ];\n                break;\n        }\n\n        const path = ['M', pts[0], pts[1] + off];\n        for (let i = 2; i < pts.length; i += 2) {\n            path.push('L', pts[i], pts[i + 1] + off);\n        }\n\n        this.rotation = rotation; // 0시 방향이 0도.\n        this.setPath(path);\n    }\n}\n\nexport class VectorSeriesView extends SeriesView<VectorSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _arrows: ElementPool<ArrowView>;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-vector-series')\n\n        this._arrows = new ElementPool(this._pointContainer, ArrowView);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._arrows;\n    }\n\n    protected _prepareSeries(doc: Document, model: VectorSeries): void {\n        const pts = model.getPoints().getVisibles() as VectorSeriesPoint[];\n\n        this.$_prepareArrows(pts);\n    }\n\n    protected _renderSeries(width: number, height: number): void {\n        const series = this.model;\n        const start = series.startAngle;\n        const head = series.arrowHead;\n        const xAxis = series._xAxisObj;\n        const yAxis = series._yAxisObj;\n\n        this._arrows.forEach(v => {\n            const p = v.point;\n\n            if (v.setVisible(!p.isNull)) {\n                const x = p.xPos = xAxis.getPosition(this.width, p.xValue);\n                const y = p.yPos = this.height - yAxis.getPosition(this.height, p.yValue);\n    \n                v.translate(x, y);\n                v.layout(head, p.angleValue + start, false);\n            }\n        });\n    }\n\n    protected _runShowEffect(firstTime: boolean): void {\n        firstTime && SeriesAnimation.fadeIn(this);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_prepareArrows(pts: VectorSeriesPoint[]): void {\n        this._arrows.prepare(pts.length, (v, i) => {\n            v.point = pts[i];\n            v.setStyle('stroke', v.point.color);\n        });\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// WaterfallSeriesView.ts\n// 2023. 07. 29. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../../common/ElementPool\";\nimport { LayerElement, RcElement } from \"../../common/RcControl\";\nimport { LineElement } from \"../../common/impl/PathElement\";\nimport { SvgShapes } from \"../../common/impl/SvgShape\";\nimport { WaterfallSeries, WaterfallSeriesPoint } from \"../../model/series/WaterfallSeries\";\nimport { BoxPointElement, RangedSeriesView } from \"../SeriesView\";\n\nclass BarElement extends BoxPointElement {\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    layout(x: number, y: number): void {\n        this.setPath(SvgShapes.rect({\n            x: x - this.wPoint / 2,\n            y,\n            width: this.wPoint,\n            height: -this.hPoint\n        }));\n    }\n}\n\nexport class WaterfallSeriesView extends RangedSeriesView<WaterfallSeries> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _lineContainer: LayerElement;\n    private _bars: ElementPool<BarElement> = new ElementPool(this._pointContainer, BarElement);\n    private _lines: ElementPool<LineElement>;\n    private _xPrev: number;\n    private _wPrev: number;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-Waterfall-series')\n\n        this.add(this._lineContainer = new LayerElement(doc, 'rct-waterfall-series-lines'));\n        this._lines = new ElementPool(this._lineContainer, LineElement);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _getPointPool(): ElementPool<RcElement> {\n        return this._bars;\n    }\n\n    protected _getLowValue(p: WaterfallSeriesPoint): number {\n        return p.low;\n    }\n\n    protected _preparePointViews(doc: Document, model: WaterfallSeries, points: WaterfallSeriesPoint[]): void {\n        this.$_parepareBars(doc, points);\n    }\n\n    protected _layoutPointView(view: BarElement, i: number, x: number, y: number, wPoint: number, hPoint: number): void {\n        const p = view.point as WaterfallSeriesPoint;\n\n        view.wPoint = wPoint;\n        view.hPoint = hPoint;\n        y += hPoint;\n        view.layout(x, y);\n        \n        if (i > 0) {\n            const line = this._lines.get(i - 1);\n            const y2 = p._isSum ? y - hPoint : p.y >= 0 ? y : y - hPoint;\n\n            line.setHLine(y2, this._xPrev + this._wPrev / 2, x - wPoint / 2);\n        }\n\n        this._xPrev = x;\n        this._wPrev = wPoint;\n    }\n\n    protected _layoutPointViews(width: number, height: number): void {\n        if (this._inverted) {\n            this._lineContainer.dom.style.transform = `translate(0px, ${height}px) rotate(90deg) scale(-1, 1)`;\n        } else {\n            this._lineContainer.dom.style.transform = '';\n        }\n\n        super._layoutPointViews(width, height);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_parepareBars(doc: Document, points: WaterfallSeriesPoint[]): void {\n        this._bars.prepare(points.length, (v, i) => {\n            const p = points[i];\n\n            v.point = p;\n            v.setStyleOrClass(p._isSum ? 'rct-waterfall-point-sum' : p.y < 0 ? 'rct-waterfall-point-negative' : '');\n        });\n\n        this._lines.prepare(points.length - 1, (v, i) => {\n            v.visible = !points[i].isNull && !points[i + 1].isNull;\n        });\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// BodyView.ts\n// 2023. 06. 27. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../common/ElementPool\";\nimport { PathBuilder } from \"../common/PathBuilder\";\nimport { IPoint } from \"../common/Point\";\nimport { LayerElement, PathElement, RcElement } from \"../common/RcControl\";\nimport { ISize, Size } from \"../common/Size\";\nimport { Align, VerticalAlign, _undefined, assert } from \"../common/Types\";\nimport { ImageElement } from \"../common/impl/ImageElement\";\nimport { LineElement } from \"../common/impl/PathElement\";\nimport { BoxElement, RectElement } from \"../common/impl/RectElement\";\nimport { TextAnchor, TextElement, TextLayout } from \"../common/impl/TextElement\";\nimport { Chart } from \"../main\";\nimport { Axis, AxisGrid, AxisGuide, AxisGuideLine, AxisGuideRange } from \"../model/Axis\";\nimport { Body } from \"../model/Body\";\nimport { IChart } from \"../model/Chart\";\nimport { Crosshair } from \"../model/Crosshair\";\nimport { DataPoint } from \"../model/DataPoint\";\nimport { PlotItem } from \"../model/PlotItem\";\nimport { Series } from \"../model/Series\";\nimport { AxisBreak, LinearAxis } from \"../model/axis/LinearAxis\";\nimport { BarRangeSeries } from \"../model/series/BarRangeSeries\";\nimport { BarSeries } from \"../model/series/BarSeries\";\nimport { BellCurveSeries } from \"../model/series/BellCurveSeries\";\nimport { BoxPlotSeries } from \"../model/series/BoxPlotSeries\";\nimport { BubbleSeries } from \"../model/series/BubbleSeries\";\nimport { CandlestickSeries } from \"../model/series/CandlestickSeries\";\nimport { DumbbellSeries } from \"../model/series/DumbbellSeries\";\nimport { EqualizerSeries } from \"../model/series/EqualizerSeries\";\nimport { ErrorBarSeries } from \"../model/series/ErrorBarSeries\";\nimport { FunnelSeries } from \"../model/series/FunnelSeries\";\nimport { HeatmapSeries } from \"../model/series/HeatmapSeries\";\nimport { HistogramSeries } from \"../model/series/HistogramSeries\";\nimport { AreaRangeSeries, AreaSeries, LineSeries } from \"../model/series/LineSeries\";\nimport { LollipopSeries } from \"../model/series/LollipopSeries\";\nimport { OhlcSeries } from \"../model/series/OhlcSeries\";\nimport { ParetoSeries } from \"../model/series/ParetoSeries\";\nimport { PieSeries } from \"../model/series/PieSeries\";\nimport { ScatterSeries } from \"../model/series/ScatterSeries\";\nimport { TreemapSeries } from \"../model/series/TreemapSeries\";\nimport { VectorSeries } from \"../model/series/VectorSeries\";\nimport { WaterfallSeries } from \"../model/series/WaterfallSeries\";\nimport { ChartElement } from \"./ChartElement\";\nimport { IPointView, SeriesView } from \"./SeriesView\";\nimport { AreaRangeSeriesView } from \"./series/AreaRangeSeriesView\";\nimport { AreaSeriesView } from \"./series/AreaSeriesView\";\nimport { BarRangeSeriesView } from \"./series/BarRangeSeriesView\";\nimport { BarSeriesView } from \"./series/BarSeriesView\";\nimport { BellCurveSeriesView } from \"./series/BellCurveSeriesView\";\nimport { BoxPlotSeriesView } from \"./series/BoxPlotSeriesView\";\nimport { BubbleSeriesView } from \"./series/BubbleSeriesView\";\nimport { CandlestickSeriesView } from \"./series/CandlestickSeriesView\";\nimport { DumbbellSeriesView } from \"./series/DumbbellSeriesView\";\nimport { EqualizerSeriesView } from \"./series/EqualizerSeriesView\";\nimport { ErrorBarSeriesView } from \"./series/ErrorBarSeriesView\";\nimport { FunnelSeriesView } from \"./series/FunnelSeriesView\";\nimport { HeatmapSeriesView } from \"./series/HeatmapSeriesView\";\nimport { HistogramSeriesView } from \"./series/HistogramSeriesView\";\nimport { LineSeriesView } from \"./series/LineSeriesView\";\nimport { LollipopSeriesView } from \"./series/LollipopSeriesView\";\nimport { OhlcSeriesView } from \"./series/OhlcSeriesView\";\nimport { ParetoSeriesView } from \"./series/ParetoSeriesView\";\nimport { PieSeriesView } from \"./series/PieSeriesView\";\nimport { ScatterSeriesView } from \"./series/ScatterSeriesView\";\nimport { TreemapSeriesView } from \"./series/TreemapSeriesView\";\nimport { VectorSeriesView } from \"./series/VectorSeriesView\";\nimport { WaterfallSeriesView } from \"./series/WaterfallSeriesView\";\n\nconst series_types = {\n    'area': AreaSeriesView,\n    'arearange': AreaRangeSeriesView,\n    'bar': BarSeriesView,\n    'barrange': BarRangeSeriesView,\n    'bellcurve': BellCurveSeriesView,\n    'boxplot': BoxPlotSeriesView,\n    'bubble': BubbleSeriesView,\n    'candlestick': CandlestickSeriesView,\n    'dumbbell': DumbbellSeriesView,\n    'equalizer': EqualizerSeriesView,\n    'errorbar': ErrorBarSeriesView,\n    'funnel': FunnelSeriesView,\n    'heatmap': HeatmapSeriesView,\n    'histogram': HistogramSeriesView,\n    'line': LineSeriesView,\n    'lollipop': LollipopSeriesView,\n    'ohlc': OhlcSeriesView,\n    'pareto': ParetoSeriesView,\n    'pie': PieSeriesView,\n    'scatter': ScatterSeriesView,\n    'treemap': TreemapSeriesView,\n    'vector': VectorSeriesView,\n    'waterfall': WaterfallSeriesView,\n}\n\nexport class AxisGridView extends ChartElement<AxisGrid> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _pts: number[];\n    private _lines = new ElementPool(this, LineElement);\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-axis-grid');\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doMeasure(doc: Document, model: AxisGrid, hintWidth: number, hintHeight: number, phase: number): ISize {\n        this._pts = model.getPoints(model.axis._isHorz ? hintWidth : hintHeight);\n        this._lines.prepare(this._pts.length, (line) => {\n        });\n        return Size.create(hintWidth, hintHeight);\n    }\n\n    protected _doLayout(): void {\n        const axis = this.model.axis;\n        const w = this.width;\n        const h = this.height;\n        const pts = this._pts;\n\n        if (axis._isHorz) {\n            this._lines.forEach((line, i) => {\n                // line.setVLine(pts[i], 0, h);\n                line.setVLineC(pts[i], 0, h);\n            });\n        } else {\n            this._lines.forEach((line, i) => {\n                // line.setHLine(h - pts[i], 0, w);\n                line.setHLineC(h - pts[i], 0, w);\n            });\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n\nexport class AxisBreakView extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _model: AxisBreak;\n    private _mask: PathElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-axis-break');\n\n        this.add(this._mask = new PathElement(doc));\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    setModel(model: AxisBreak): void {\n        this._model = model;\n    }\n\n    layout(width: number, height: number): void {\n        const m = this._model;\n        const pb = new PathBuilder();\n\n        pb.rect(0, 0, width, m._sect.len);\n        this._mask.setPath(pb.end());\n    }\n}\n\nexport abstract class AxisGuideView<T extends AxisGuide> extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    model: T;\n    protected _label: TextElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-axis-guide');\n\n        this.add(this._label = new TextElement(doc, 'rct-axis-guide-label'));\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    vertical(): boolean {\n        return this.model.axis._isHorz;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    prepare(model: T): void {\n        this.model = model;\n        this._label.text = model.label.text;\n        this._label.setStyles(model.label.style);\n    }\n\n    abstract layout(width: number, height: number): void;\n}\n\nexport class AxisGuideLineView extends AxisGuideView<AxisGuideLine> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _line: LineElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc);\n\n        this.insertFirst(this._line = new LineElement(doc, 'rct-axis-guide-line'));\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    prepare(model: AxisGuideLine): void {\n        super.prepare(model);\n\n        this._line.setStyles(model.style);\n    }\n\n    layout(width: number, height: number): void {\n        const m = this.model;\n        const label = m.label;\n        const labelView = this._label;\n        let x: number;\n        let y: number;\n        let anchor: TextAnchor;\n        let layout: TextLayout;\n\n        if (this.vertical()) {\n            const p = m.axis.getPosition(width, m.value, true);\n\n            this._line.setVLineC(p, 0, height);\n\n            switch (label.align) {\n                case Align.CENTER:\n                    x = p;\n                    anchor = TextAnchor.MIDDLE;\n                    break;\n\n                case Align.RIGHT:\n                    x = p;\n                    anchor = TextAnchor.START;\n                    break;\n\n                default:\n                    x = p;\n                    anchor = TextAnchor.END;\n                    break;\n            }\n\n            switch (label.valign) {\n                case VerticalAlign.BOTTOM:\n                    y = height;\n                    layout = TextLayout.BOTTOM;\n                    break;\n\n                case VerticalAlign.MIDDLE:\n                    y = height / 2;\n                    layout = TextLayout.MIDDLE;\n                    break;\n\n                default:\n                    y = 0;\n                    layout = TextLayout.TOP;\n                    break;\n            }\n        } else {\n            const p = height - m.axis.getPosition(height, m.value, true);\n\n            this._line.setHLineC(p, 0, width);\n\n            switch (label.align) {\n                case Align.CENTER:\n                    x = width / 2;\n                    anchor = TextAnchor.MIDDLE;\n                    break;\n\n                case Align.RIGHT:\n                    x = width;\n                    anchor = TextAnchor.END;\n                    break;\n\n                default:\n                    x = 0;\n                    anchor = TextAnchor.START;\n                    break;\n            }\n\n            switch (label.valign) {\n                case VerticalAlign.BOTTOM:\n                    y = p + 1;\n                    layout = TextLayout.TOP;\n                    break;\n\n                case VerticalAlign.MIDDLE:\n                    y = p;\n                    layout = TextLayout.MIDDLE;\n                    break;\n\n                default:\n                    // y = -3; \n                    // layout = TextLayout.BOTTOM;\n                    y = p - labelView.getBBounds().height;\n                    layout = TextLayout.TOP;\n                    break;\n            }\n        }\n        labelView.anchor = anchor;\n        labelView.layout = layout;\n        labelView.translate(x, y);\n    }\n}\n\nexport class AxisGuideRangeView extends AxisGuideView<AxisGuideRange> {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _box: BoxElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc);\n\n        this.insertFirst(this._box = new BoxElement(doc, 'rct-axis-guide-range'));\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    prepare(model: AxisGuideRange): void {\n        super.prepare(model);\n    }\n\n    layout(width: number, height: number): void {\n        const m = this.model;\n        const label = this._label;\n\n        if (this.vertical()) {\n            const x1 = m.axis.getPosition(width, m.start, true);\n            const x2 = m.axis.getPosition(width, m.end, true);\n\n            let x: number;\n            let y: number;\n            let anchor: TextAnchor;\n            let layout: TextLayout;\n\n            switch (m.label.align) {\n                case Align.CENTER:\n                    x = x + (x2 - x1) / 2;\n                    anchor = TextAnchor.MIDDLE;\n                    break;\n\n                case Align.RIGHT:\n                    x = x2;\n                    anchor = TextAnchor.END;\n                    break;\n\n                default:\n                    x = x1;\n                    anchor = TextAnchor.START;\n                    break;\n            }\n\n            switch (m.label.valign) {\n                case VerticalAlign.BOTTOM:\n                    y = height;\n                    layout = TextLayout.BOTTOM;\n                    break;\n\n                case VerticalAlign.MIDDLE:\n                    y = height / 2;\n                    layout = TextLayout.MIDDLE;\n                    break;\n\n                default:\n                    y = 0;\n                    layout = TextLayout.TOP;\n                    break;\n            }\n\n            label.anchor = anchor;\n            label.layout = layout;\n            label.translate(x, y);\n\n            this._box.setBox(x1, 0, x2, height);\n\n        } else {\n            const y1 = height - this.model.axis.getPosition(height, Math.min(m.start, m.end), true);\n            const y2 = height - this.model.axis.getPosition(height, Math.max(m.start, m.end), true);\n            let x: number;\n            let y: number;\n            let anchor: TextAnchor;\n            let layout: TextLayout;\n\n            switch (m.label.align) {\n                case Align.CENTER:\n                    x = width / 2;\n                    anchor = TextAnchor.MIDDLE;\n                    break;\n\n                case Align.RIGHT:\n                    x = width;\n                    anchor = TextAnchor.END;\n                    break;\n\n                default:\n                    x = 0;\n                    anchor = TextAnchor.START;\n                    break;\n            }\n\n            switch (m.label.valign) {\n                case VerticalAlign.BOTTOM:\n                    y = y1;\n                    layout = TextLayout.BOTTOM;\n                    break;\n\n                case VerticalAlign.MIDDLE:\n                    y = y2 + (y1 - y2) / 2;\n                    layout = TextLayout.MIDDLE;\n                    break;\n\n                default:\n                    y = y2;\n                    layout = TextLayout.TOP;\n                    break;\n            }\n\n            label.anchor = anchor;\n            label.layout = layout;\n            label.translate(x, y);\n\n            this._box.setBox(0, y2, width, y1);\n        }\n    }\n}\n\nexport class AxisGuideContainer extends LayerElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _linePool: AxisGuideLineView[] = []; \n    _rangePool: AxisGuideRangeView[] = [];\n    _views: AxisGuideView<AxisGuide>[] = [];\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    prepare(): void {\n        const views = this._views as (AxisGuideLineView | AxisGuideRangeView)[];\n\n        // 뒤쪽에서 부터 pool로 return 시킨다.\n        for (let i = views.length - 1; i >= 0; i--) {\n            const v = views.pop();\n\n            v.remove();\n            if (v instanceof AxisGuideRangeView) {\n                this._rangePool.push(v);\n            } else {\n                this._linePool.push(v);\n            }\n        }\n        assert(views.length === 0, 'GuideContainer.prepare');\n    }\n\n    addAll(doc: Document, guides: AxisGuide[]): void {\n        guides.forEach(g => {\n            if (g instanceof AxisGuideRange) {\n                let v = this._rangePool.pop() || new AxisGuideRangeView(doc);\n\n                this.add(v);\n                v.prepare(g)\n                this._views.push(v);\n            } else if (g instanceof AxisGuideLine) {\n                let v = this._linePool.pop() || new AxisGuideLineView(doc);\n\n                this.add(v);\n                v.prepare(g)\n                this._views.push(v);\n            }\n        });\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    add(child: AxisGuideView<AxisGuide>): RcElement {\n        this._views.push(child);\n        return super.add(child);\n    }\n}\n\nclass CrosshairLineView extends LineElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _model: Crosshair;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-crosshair-line');\n\n        this.setStyle('pointerEvents', 'none');\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    setModel(model: Crosshair): void {\n        if (model != this._model) {\n            this._model = model;\n        }\n    }\n\n    layout(x: number, y: number, width: number, height: number): void {\n        if (this._model.axis._isHorz) {\n            this.setVLine(x, 0, height);\n        } else {\n            this.setHLine(y, 0, width);\n        }\n    }\n}\n\nexport interface IPlottingOwner {\n\n    clipSeries(view: RcElement, x: number, y: number, w: number, h: number): void;\n    showTooltip(series: Series, point: DataPoint): void;\n    hideTooltip(): void;\n}\n\nexport class BodyView extends ChartElement<Body> {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly BODY_CLASS = 'rct-plot';\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _owner: IPlottingOwner;\n    private _polar: boolean;\n    private _background: RectElement;\n    private _image: ImageElement;\n    private _gridContainer: LayerElement;\n    protected _gridViews = new Map<Axis, AxisGridView>();\n    private _breakViews: AxisBreakView[] = [];\n    private _seriesContainer: LayerElement;\n    protected _seriesViews: SeriesView<Series>[] = [];\n    private _seriesMap = new Map<Series, SeriesView<Series>>();\n    private _series: Series[];\n    // guides\n    _guideContainer: AxisGuideContainer;\n    _frontGuideContainer: AxisGuideContainer;\n    // axis breaks\n    _axisBreakContainer: LayerElement;\n    // items\n    // private _itemMap = new Map<PlotItem, PlotItemView>();\n    // feedbacks\n    private _feedbackContainer: LayerElement;\n    private _crosshairLines: ElementPool<CrosshairLineView>;\n    private _focused: IPointView = null;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, owner: IPlottingOwner) {\n        super(doc, BodyView.BODY_CLASS);\n\n        this._owner = owner;\n        this.add(this._background = new RectElement(doc, 'rct-plot-background'));\n        this.add(this._image = new ImageElement(doc, 'rct-plot-image'));\n        this.add(this._gridContainer = new LayerElement(doc, 'rct-grids'));\n        this.add(this._guideContainer = new AxisGuideContainer(doc, 'rct-guides'));\n        this.add(this._seriesContainer = new LayerElement(doc, 'rct-series-container'));\n        this.add(this._axisBreakContainer = new LayerElement(doc, 'rct-axis-breaks'));\n        this.add(this._frontGuideContainer = new AxisGuideContainer(doc, 'rct-front-guides'));\n        this.add(this._feedbackContainer = new LayerElement(doc, 'rct-feedbacks'));\n        \n        this._crosshairLines = new ElementPool(this._feedbackContainer, CrosshairLineView);\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    prepareGuideContainers(): void {\n        this._guideContainer.prepare();\n        this._frontGuideContainer.prepare();\n    }\n\n    pointerMoved(p: IPoint, target: EventTarget): void {\n        const w = this.width;\n        const h = this.height;\n\n        this._crosshairLines.forEach(v => {\n            if (v.setVisible(p.x >= 0 && p.x < w && p.y >= 0 && p.y < h)) {\n                v.layout(p.x, p.y, w, h);\n            }\n        });\n\n        if (target instanceof SVGElement && (target.classList.contains(SeriesView.POINT_CLASS) || target.parentElement instanceof SVGElement && target.parentElement.classList.contains(SeriesView.POINT_CLASS))) {\n            for (let i = this._seriesViews.length - 1; i >= 0; i--) {\n                const p = this._seriesViews[i].pointByDom(target) as IPointView;\n\n                if (p) {\n                    this.$_setFocused(this._seriesViews[i].model, p);\n                    break;\n                }\n            }\n        } else {\n            this.$_setFocused(null, null);\n        }\n    }\n\n    private $_setFocused(series: Series, p: IPointView): boolean {\n        if (p != this._focused) {\n            if (this._focused) {\n                (this._focused as any as RcElement).unsetData(SeriesView.DATA_FOUCS);\n            }\n            this._focused = p;\n            if (this._focused) {\n                (this._focused as any as RcElement).setData(SeriesView.DATA_FOUCS);\n                this._owner.showTooltip(series, p.point);\n            } else {\n                this._owner.hideTooltip();\n            }\n            return true;\n        }\n    }\n\n    seriesByDom(elt: Element): SeriesView<Series> {\n        return this._seriesViews.find(v => v.dom.contains(elt));\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doMeasure(doc: Document, model: Body, hintWidth: number, hintHeight: number, phase: number): ISize {\n        const chart = model.chart as Chart;\n\n        // background\n        this._background.setStyleOrClass(model.style);\n\n        // series\n        this.$_prepareSeries(doc, chart._getSeries().visibleSeries());\n\n        this._seriesViews.forEach((v, i) => {\n            v.measure(doc, this._series[i], hintWidth, hintHeight, phase);\n        })\n\n        this._polar = chart._polar;\n\n        if (!this._polar) {\n            // axis grids\n            this.$_prepareGrids(doc, chart);\n\n            for (const axis of this._gridViews.keys()) {\n                this._gridViews.get(axis).measure(doc, axis.grid, hintWidth, hintHeight, phase);\n            }\n\n            this.$_prepareAxisBreaks(doc, chart);\n            this.$_preppareCrosshairs(doc, chart);\n        }\n\n        return Size.create(hintWidth, hintHeight);\n    }\n    \n    protected _doLayout(): void {\n        const w = this.width;\n        const h = this.height;\n        const img = this._image;\n\n        // background\n        this._background.resize(w, h);\n\n        if (img.setVisible(img.setImage(this.model.image.url, w, h))) {\n            img.setStyleOrClass(this.model.image.style);\n        }\n\n        // series\n        this._seriesViews.forEach(v => {\n            this._owner.clipSeries(v.getClipContainer(), 0, 0, w, h);\n            v.resize(w, h);\n            v.layout();\n        })\n        \n        if (!this._polar) {\n            // axis grids\n            for (const v of this._gridViews.values()) {\n                v.resize(w, h);\n                v.layout();\n            }\n\n            // axis breaks\n            this._breakViews.forEach(v => {\n                v.translate(0, h - v._model._sect.pos - v._model._sect.len);\n                v.layout(w, h);\n            });\n\n            // axis guides\n            [this._guideContainer, this._frontGuideContainer].forEach(c => {\n                c._views.forEach(v => v.layout(w, h));\n            });\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_createSeriesView(doc: Document, series: Series): SeriesView<Series> {\n        return new series_types[series._type()](doc);\n\n        // for (const cls of series_types.keys()) {\n        //     if (series instanceof (cls as any)) {\n        //         return new (series_types.get(cls))(doc);\n        //     }\n        // }\n    }\n\n    private $_prepareGrids(doc: Document, chart: Chart): void {\n        const needAxes = chart.needAxes();\n        const container = this._gridContainer;\n        const views = this._gridViews;\n\n        for (const axis of views.keys()) {\n            if (!needAxes || !chart.containsAxis(axis) || !axis.grid.isVisible()) {\n                views.get(axis).remove();\n                views.delete(axis);\n            }\n        }\n\n        [chart._getXAxes(), chart._getYAxes()].forEach(axes => axes.forEach(axis => {\n            if (needAxes && axis.grid.isVisible() && !views.has(axis)) {\n                const v = new AxisGridView(doc);\n\n                views.set(axis, v);\n                container.add(v);\n            }\n        }));\n    }\n\n    private $_prepareSeries(doc: Document, series: Series[]): void {\n        const container = this._seriesContainer;\n        const inverted = this.model.chart.isInverted();\n        const animatable = this.model.chart.animatable();\n        const map = this._seriesMap;\n        const views = this._seriesViews;\n\n        // series들이 다시 생성됐을 수 있다.\n        for (const ser of map.keys()) {\n            if (series.indexOf(ser) < 0) {\n                map.delete(ser);\n            }\n        }\n\n        this._series = series;\n        views.forEach(v => v.remove());\n        views.length = 0;\n\n        series.forEach(ser => {\n            const v = map.get(ser) ||this.$_createSeriesView(doc, ser);\n\n            v._setChartOptions(inverted, animatable);\n            container.add(v);\n            map.set(ser, v);\n            views.push(v);\n        });\n    }\n\n    private $_prepareAxisBreaks(doc: Document, chart: IChart): void {\n        const container = this._axisBreakContainer;\n        const views = this._breakViews;\n        const breaks: AxisBreak[] = [];\n\n        [chart._getXAxes(), chart._getYAxes()].forEach(axes => axes.forEach(axis => {\n            if (axis instanceof LinearAxis) {\n                breaks.push(...(axis.runBreaks() || []));\n            }\n        }));\n\n        while (views.length < breaks.length) {\n            const view = new AxisBreakView(doc);\n\n            container.add(view);\n            views.push(view);\n        }\n        while (views.length > breaks.length) {\n            views.pop().remove();\n        }\n\n        views.forEach((v, i) => v.setModel(breaks[i]));\n    }\n\n    private $_preppareCrosshairs(doc: Document, chart: IChart): void {\n        const views = this._crosshairLines;\n        const hairs: Crosshair[] = [];\n\n        [chart._getXAxes(), chart._getYAxes()].forEach(axes => axes.forEach(axis => {\n            axis.crosshair.visible && hairs.push(axis.crosshair);\n        }));\n\n        views.prepare(hairs.length, (v, i) => {\n            v.setModel(hairs[i])\n        });\n    }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// LegendView.ts\n// 2023. 06. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { pickNum } from \"../common/Common\";\nimport { Dom } from \"../common/Dom\";\nimport { ElementPool } from \"../common/ElementPool\";\nimport { toSize } from \"../common/Rectangle\";\nimport { ISize, Size } from \"../common/Size\";\nimport { RectElement } from \"../common/impl/RectElement\";\nimport { TextAnchor, TextElement } from \"../common/impl/TextElement\";\nimport { Legend, LegendItem, LegendLayout } from \"../model/Legend\";\nimport { BoundableElement, ChartElement } from \"./ChartElement\";\n\nexport class LegendItemView extends ChartElement<LegendItem> {\n\n    //-------------------------------------------------------------------------\n    // property fields\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _marker: RectElement;\n    _label: TextElement;\n    _gap: number;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-legend-item');\n\n        this.add(this._marker = RectElement.create(doc, 'rct-legend-item-marker', 0, 0, 12, 12, 6));\n        this.add(this._label = new TextElement(doc, 'rct-legend-item-label'));\n        this._label.anchor = TextAnchor.START;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doMeasure(doc: Document, model: LegendItem, intWidth: number, hintHeight: number, phase: number): ISize {\n        Dom.setData(this._label.dom, 'hidden', model.source.visible ? '' : 1);\n        Dom.setData(this._marker.dom, 'hidden', model.source.visible ? '' : 1);\n\n        this._label.text = model.text();\n\n        const sz = toSize(this._label.getBBounds());\n        this._gap = pickNum(model.legend.markerGap, 0);\n\n        return Size.create(this._marker.width + this._gap + sz.width, Math.max(this._marker.height, sz.height));\n    }\n\n    protected _doLayout(): void {\n        this._marker.translate(0, (this.height - this._marker.height) / 2);\n        this._label.translate(this._marker.width + this._gap, (this.height - this._label.getBBounds().height) / 2);\n    }\n}\n\nexport class LegendView extends BoundableElement<Legend> {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly LEGEND_CLASS = 'rct-legend';\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _itemViews = new ElementPool(this, LegendItemView);\n    private _vertical: boolean;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, LegendView.LEGEND_CLASS, 'rct-legend-background');\n    }\n\n    legendByDom(dom: Element): LegendItem {\n        const v = this._itemViews.elementOf(dom);\n        return v && v.model;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _setBackgroundStyle(back: RectElement): void {\n        back.setStyleOrClass(this.model.backgroundStyles);\n    }\n\n    protected _doMeasure(doc: Document, model: Legend, hintWidth: number, hintHeight: number, phase: number): ISize {\n        const items = model.items();\n        const vertical = this._vertical = model.getLayout() === LegendLayout.VERTICAL;\n        const gap = model.itemGap;\n        const views = this._itemViews;\n        let w = 0;\n        let h = 0;\n\n        this.$_prepareItems(doc, items);\n\n        views.forEach((v, i) => {\n            v._marker.setStyle('fill', items[i].source.legendColor());\n\n            const sz = v.measure(doc, items[i], hintWidth, hintHeight, phase);\n\n            if (vertical) {\n                w = Math.max(w, sz.width);\n                h += sz.height;\n            } else {\n                h = Math.max(h, sz.height);\n                w += sz.width;\n            }\n        });\n\n        if (vertical) {\n            h += (views.count - 1) * gap;\n        } else {\n            w += (views.count - 1) * gap;\n        }\n        return Size.create(w, h);\n    }\n    \n    protected _doLayout(): void {\n        const vertical = this._vertical;\n        const gap = this.model.itemGap;\n        const margin = this._margins;\n        const pad = this._paddings;\n        let x = margin.left;\n        let y = margin.top;\n\n        x += pad.left;\n        y += pad.top;\n\n        this._itemViews.forEach(v => {\n            v.resizeByMeasured().layout();\n            v.translate(x, y);\n\n            if (vertical) {\n                y += v.height + gap;\n            } else {\n                x += v.width + gap;\n            }\n        });\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_prepareItems(doc: Document, items: LegendItem[]): void {\n        this._itemViews.prepare(items.length);\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// PolarBodyView.ts\n// 2023. 07. 18. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { ElementPool } from \"../common/ElementPool\";\nimport { LayerElement, RcElement } from \"../common/RcControl\";\nimport { ISize } from \"../common/Size\";\nimport { CircleElement } from \"../common/impl/CircleElement\";\nimport { LineElement } from \"../common/impl/PathElement\";\nimport { TextAnchor, TextElement, TextLayout } from \"../common/impl/TextElement\";\nimport { Axis, AxisTick, IAxisTick } from \"../model/Axis\";\nimport { Body } from \"../model/Body\";\nimport { BodyView } from \"./BodyView\";\n\nclass PolarAxisTickMarkView extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _lineView: CircleElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-polar-axis-tick-mark');\n\n        this.add(this._lineView = new CircleElement(doc));\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    layout(): void {\n        //this._lineView.setHLineC(0, 0, this.width);\n    }\n}\n\nabstract class PolarAxisView extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _model: Axis;\n    private _markContainer: RcElement;\n    private _markViews: ElementPool<PolarAxisTickMarkView>;\n    protected _gridContainer: RcElement;\n    private _labelContainer: RcElement;\n    protected _labelViews: ElementPool<TextElement>;\n    private _markLen: number;\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, styleName: string) {\n        super(doc, styleName);\n\n        this.add(this._markContainer = new LayerElement(doc, 'rct-polar-axis-markers'));\n        this._markViews = new ElementPool(this._markContainer, PolarAxisTickMarkView);\n        this.add(this._gridContainer = new RcElement(doc, 'rct-polar-axis-grids'));\n        this.add(this._labelContainer = new LayerElement(doc, 'rct-polar-axis-labels'));\n        this._labelViews = new ElementPool(this._labelContainer, TextElement)\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    prepare(doc: Document, model: Axis): void {\n        this._model = model;\n\n        // tick marks\n        this._markLen = model.tick.length;;\n        this.$_prepareTickMarks(doc, model);\n        //this._markViews.forEach(v => v.measure(doc, model.tick.mark, hintWidth, hintHeight, phase));\n\n        // labels\n        this.$_prepareLabels(doc, model);\n\n        this._doPrepare(model, model._ticks);\n    }\n\n    layout(other: Axis, cx: number, cy: number, rd: number): PolarAxisView {\n        const ticks = this._model._ticks;// .getTicks();\n        \n        // this._gridViews.prepare(ticks.length);\n        this._doLayout(this._model, cx, cy, rd, ticks, other);\n\n        return this;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected abstract _doPrepare(model: Axis, ticks: IAxisTick[]): void;\n    protected abstract _doLayout(model: Axis, cx: number, cy: number, rd: number, ticks: IAxisTick[], other: Axis): void;\n\n    private $_prepareTickMarks(doc: Document, m: Axis): void {\n        this._markViews.prepare(m._ticks.length);\n    }\n\n    private $_prepareLabels(doc: Document, m: Axis): void {\n        const ticks = m._ticks;\n\n        this._labelViews.prepare(ticks.length, (view, i) => {\n            view.text = ticks[i].label;\n        }, view => {\n            view.anchor = TextAnchor.START;\n        });\n    }\n}\n\nclass PolarXAxisView extends PolarAxisView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _lineView: CircleElement;\n    private _gridLines: ElementPool<LineElement>;\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-polar-xaxis');\n\n        this._gridLines = new ElementPool(this._gridContainer, LineElement, 'rct-polar-xaxis-grid-line');\n\n        this.add(this._lineView = new CircleElement(doc, 'rct-polar-xaxis-line'));\n        this._lineView.setStyle('fill', 'none');\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doPrepare(model: Axis, ticks: IAxisTick[]): void {\n        // grid lines\n        this._gridLines.prepare(ticks.length);\n\n        // line\n        this._lineView.visible = model.line.visible;\n    }\n\n    protected _doLayout(axis: Axis, cx: number, cy: number, rd: number, ticks: IAxisTick[], other: Axis): void {\n        const start = axis.chart.startAngle();\n\n        // grid lines\n        this._gridLines.forEach((view, i) => {\n            const tick = ticks[i];\n            const p = tick.pos * Math.PI * 2;\n            const x = cx + Math.cos(start + p) * rd;\n            const y = cy + Math.sin(start + p) * rd;\n\n            view.setLine(cx, cy, x, y);\n        });\n\n        // labels\n        const rd2 = rd + axis.tick.length;\n\n        this._labelViews.forEach((view, i) => {\n            const tick = ticks[i];\n\n            view.anchor = TextAnchor.MIDDLE;\n            view.layout = TextLayout.MIDDLE;\n            view.text = tick.label;\n\n            const r = view.getBBounds();\n            const p = tick.pos * Math.PI * 2;\n            const x = cx + Math.cos(start + p) * (rd2 + r.width / 2);\n            const y = cy + Math.sin(start + p) * (rd2 + r.height / 2);\n\n            view.translate(x, y);\n        });\n\n        // line\n        this._lineView.setCircle(cx, cy, rd);\n    }\n}\n\nclass PolarYAxisView extends PolarAxisView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _lineView: LineElement;\n    private _gridLines: ElementPool<CircleElement>;\n    xAxisTicks: AxisTick[];\n\n    //-------------------------------------------------------------------------\n    // constructors\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-polar-yaxis');\n\n        this._gridLines = new ElementPool(this._gridContainer, CircleElement, 'rct-polar-yaxis-grid-line');\n\n        this.add(this._lineView = new LineElement(doc, 'rct-polar-yaxis-line'));\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doPrepare(model: Axis, ticks: IAxisTick[]): void {\n        // grid lines\n        this._gridLines.prepare(ticks.length, null, v => {\n            v.setStyle('fill', 'none');\n        });\n\n        // line\n        this._lineView.visible = model.line.visible;\n    }\n\n    protected _doLayout(axis: Axis, cx: number, cy: number, rd: number, ticks: IAxisTick[], other: Axis): void {\n        // grid lines\n        this._gridLines.forEach((view, i) => {\n            const tick = ticks[i];\n\n            view.setCircle(cx, cy, tick.pos);\n        });\n\n        // labels\n        this._labelViews.forEach((view, i) => {\n            const tick = ticks[i];\n\n            view.anchor = TextAnchor.END;\n            view.layout = TextLayout.MIDDLE;\n            view.text = tick.label;\n\n            view.translate(cx - 4, cy - tick.pos);\n        })\n\n        // line\n        this._lineView.setVLine(cx, cy, cy - rd);\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}\n\nexport class PolarBodyView extends BodyView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _axisContainer: RcElement;\n    private _xAxisView: PolarXAxisView;\n    private _yAxisViews: PolarYAxisView[] = [];\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doMeasure(doc: Document, model: Body, hintWidth: number, hintHeight: number, phase: number): ISize {\n        const chart = model.chart;\n        const sz = super._doMeasure(doc, model, hintWidth, hintHeight, phase);\n\n        this.$_prepareAxes(doc, chart.xAxis as Axis, chart._getYAxes().items);\n\n        return sz;\n    }\n\n    protected _doLayout(): void {\n        const m = this.model;\n        const sz = m.getSize(this.width, this.height);\n        const rd = m._rd = m.getSize(this.width, this.height) / 2;\n        const {cx, cy} = m.getCenter(this.width, this.height);\n\n        m._cx = cx;\n        m._cy = cy;\n\n        // series\n        this._seriesViews.forEach(v => {\n            v.resize(sz, sz);\n            v.layout();//.translate(x, y);\n        })\n\n        // axes\n        this._xAxisView.layout(m.chart.yAxis as Axis, cx, cy, rd);\n        this._yAxisViews.forEach(v => {\n            v.layout(null, cx, cy, rd);\n        })\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_prepareAxes(doc: Document, xAxis: Axis, yAxes: Axis[]): void {\n        // x axis\n        if (!this._axisContainer) {\n            this.add(this._axisContainer = new RcElement(doc, 'rct-polar-axes'));\n            this._axisContainer.add(this._xAxisView = new PolarXAxisView(doc));\n        }\n        this._xAxisView.prepare(doc, xAxis);\n\n        // y axes\n        const views = this._yAxisViews;\n\n        while (views.length < yAxes.length) {\n            const view = new PolarYAxisView(doc);\n\n            this._axisContainer.add(view);\n            views.push(view);\n        }\n        while (views.length > yAxes.length) {\n            views.pop().remove();\n        }\n        views.forEach((v, i) => v.prepare(doc, yAxes[i]));\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// TitleView.ts\n// 2023. 06. 20. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { toSize } from \"../common/Rectangle\";\nimport { ISize } from \"../common/Size\";\nimport { RectElement } from \"../common/impl/RectElement\";\nimport { TextAnchor, TextElement } from \"../common/impl/TextElement\";\nimport { Title } from \"../model/Title\";\nimport { BoundableElement } from \"./ChartElement\";\n\nexport class TitleView extends BoundableElement<Title> {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    static readonly TITLE_CLASS = 'rct-title';\n    static readonly SUBTITLE_CLASS = 'rct-subtitle';\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _textView: TextElement;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, isSub: boolean) {\n        super(doc, isSub ? TitleView.SUBTITLE_CLASS : TitleView.TITLE_CLASS, isSub ? 'rct-subtitle-background' : 'rct-title-background');\n\n        this.add(this._textView = new TextElement(doc));\n        this._textView.anchor = TextAnchor.START;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _setBackgroundStyle(back: RectElement): void {\n        back.setStyleOrClass(this.model.backgroundStyle);\n    }\n\n    protected _doMeasure(doc: Document, model: Title, hintWidth: number, hintHeight: number, phase: number): ISize {\n        this._textView.text = this.model.text;\n\n        return toSize(this._textView.getBBounds());\n    }\n\n    protected _doLayout(): void {\n        this._textView.translate(this._margins.left + this._paddings.left, this._margins.top + this._paddings.top);\n        this._textView.layoutText();\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// ChartElement.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { PathBuilder } from \"../common/PathBuilder\";\nimport { createAnimation } from \"../common/RcAnimation\";\nimport { PathElement, RcControl, RcElement } from \"../common/RcControl\";\nimport { SvgRichText } from \"../common/RichText\";\nimport { TextAnchor, TextElement } from \"../common/impl/TextElement\";\nimport { DataPoint } from \"../model/DataPoint\";\nimport { Tooltip } from \"../model/Tooltip\";\n\nexport class TooltipView extends RcElement {\n \n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _back: PathElement;\n    private _textView: TextElement;\n    private _richText: SvgRichText;\n\n    private _model: Tooltip;\n    private _textCallback = (point: DataPoint, param: string): string => {\n        return this._model.getValue(point, param);\n    }\n    private _hideTimer: any;\n    private _hideHandler = () => {\n        this.$_hide();\n        this._hideTimer = void 0;\n    }\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-tooltip');\n\n        this.add(this._back = new PathElement(doc, 'rct-tooltip-back'));\n        this.add(this._textView = new TextElement(doc, 'rct-tooltip-text'));\n\n        this._back.setAttr('filter', 'url(#' + RcControl.SHADOW_FILTER + ')');\n        this._textView.anchor = TextAnchor.START;\n\n        this._richText = new SvgRichText();\n        this._richText.lineHeight = 1.2;\n\n        this.hide(true, false);\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    show(model: Tooltip, point: DataPoint, x: number, y: number, animate: boolean): void {\n        this._model = model;\n\n        // text\n        const tv = this._textView;\n        \n        this._richText.format = model.text;\n        this._richText.build(this._textView, point, this._textCallback);\n\n        // background\n        const r = this._textView.getBBounds();\n        const w = Math.max(model.minWidth || 0, r.width + 8 * 2);\n        const h = Math.max(model.minHeight || 0, r.height + 6 * 2);\n        const pb = new PathBuilder();\n\n        pb.rect(0, 0, w , h);\n        this._back.setPath(pb.end(true));\n\n        this._textView.translate((w - r.width) / 2, (h - r.height) / 2);\n\n        // view\n        const tx = this.tx;\n        const ty = this.ty;\n\n        if (model.series.chart.isInverted()) {\n            this.translate(x + model.offset, y - h / 2);\n        } else {\n            this.translate(x - w / 2, y - h - model.offset);\n        }\n\n        if (this._hideTimer) {\n            clearTimeout(this._hideTimer);\n            this._hideTimer = void 0;\n        }\n        if (this.getStyle('visibility') === 'visible') {\n            this.dom.animate([\n                { transform: `translate(${tx}px,${ty}px)` },\n                { transform: `translate(${this.tx}px,${this.ty}px)` }\n            ], {\n                duration: 300,\n                fill: 'none'\n            });\n        } else {\n            this.setStyle('visibility', 'visible');\n        }\n    }\n\n    hide(force: boolean, animate: boolean): void {\n        if (force) {\n            if (this._hideTimer) {\n                clearTimeout(this._hideTimer);\n                this._hideTimer = void 0;\n            }\n            this.$_hide();\n        } else if (!this._hideTimer) {\n            this._hideTimer = setTimeout(this._hideHandler, this._model ? this._model.hideDelay : Tooltip.HIDE_DELAY)\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // overrien members\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // internal methods\n    //-------------------------------------------------------------------------\n    private $_hide(): void {\n        createAnimation(this.dom, 'opacity', 0, 200, () => {\n            this.setStyle('visibility', 'hidden');\n        })\n    }\n\n    // M402.5,134.5\n    // A1,1,0,0,1,401.5,133.5\n    // L401.5,85.5\n    // A1,1,0,0,1,402.5,84.5\n    // L513.5,84.5\n    // A1,1,0,0,1,514.5,85.5\n    // L514.5,133.5\n    // A1,1,0,0,1,513.5,134.5\n    // L471.5,134.5\n    // L443.5,148.5\n    // L457.5,134.5\n    // Z\n}","////////////////////////////////////////////////////////////////////////////////\n// ChartView.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { isNumber } from \"../common/Common\";\nimport { IPoint, Point } from \"../common/Point\";\nimport { ClipElement, RcElement } from \"../common/RcControl\";\nimport { IRect } from \"../common/Rectangle\";\nimport { ISize, Size } from \"../common/Size\";\nimport { Align, HORZ_SECTIONS, SectionDir, VERT_SECTIONS } from \"../common/Types\";\nimport { GroupElement } from \"../common/impl/GroupElement\";\nimport { Chart } from \"../main\";\nimport { Axis } from \"../model/Axis\";\nimport { DataPoint } from \"../model/DataPoint\";\nimport { LegendItem, LegendPosition } from \"../model/Legend\";\nimport { Series } from \"../model/Series\";\nimport { Subtitle } from \"../model/Title\";\nimport { AxisView } from \"./AxisView\";\nimport { AxisGuideContainer, BodyView } from \"./BodyView\";\nimport { LegendView } from \"./LegendView\";\nimport { PolarBodyView } from \"./PolarBodyView\";\nimport { SeriesView } from \"./SeriesView\";\nimport { TitleView } from \"./TitleView\";\nimport { TooltipView } from \"./TooltipView\";\n\nabstract class SectionView extends GroupElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    mw: number;\n    mh: number;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    measure(doc: Document, chart: Chart, hintWidth: number, hintHeight: number, phase: number): ISize {\n        const sz = this._doMeasure(doc, chart, hintWidth, hintHeight, phase);\n\n        this.mw = sz.width;\n        this.mh = sz.height;\n        return sz;\n    }\n\n    resizeByMeasured(): SectionView {\n        this.resize(this.mw, this.mh);\n        return this;\n    }\n\n    layout(param?: any): SectionView {\n        this._doLayout(param);\n        return this;\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    protected abstract _doMeasure(doc: Document, chart: Chart, hintWidth: number, hintHeight: number, phase: number): ISize;\n    protected abstract _doLayout(param?: any): void;\n}\n\nclass TitleSectionView extends SectionView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    titleView: TitleView;\n    subtitleView: TitleView;\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doInitChildren(doc: Document): void {\n        this.add(this.titleView = new TitleView(doc, false));\n        this.add(this.subtitleView = new TitleView(doc, true));\n    }\n\n    protected _doMeasure(doc: Document, chart: Chart, hintWidth: number, hintHeight: number, phase: number): ISize {\n        const v = this.titleView;\n        const sv = this.subtitleView;\n        let width = hintWidth;\n        let height = 0;\n        let sz: ISize;\n\n        if (v.visible = chart.title.isVisible()) {\n            sz = v.measure(doc, chart.title, hintWidth, hintHeight, phase);\n            height += sz.height;\n            hintHeight -= sz.height;\n        }\n        if (sv.visible = chart.subtitle.isVisible()) {\n            sz = sv.measure(doc, chart.subtitle, hintWidth, hintHeight, phase);\n            height += sz.height;\n            hintHeight -= sz.height;\n        }\n        return { width, height };\n    }\n\n    protected _doLayout(body: IRect): void {\n        const v = this.titleView;\n        const sv = this.subtitleView;\n        const m = v.model;\n        const sm = sv.model as Subtitle;\n        const w = body.width;\n        let y = 0;\n\n        if (v.visible) {\n            let x = 0;;\n\n            v.resizeByMeasured().layout();\n\n            switch (m.align) {\n                case Align.LEFT:\n                    break;\n                case Align.RIGHT:\n                    x += w - v.width;\n                    break;\n                default:\n                    x += (w - v.width) / 2;\n                    break;\n            }\n            v.translate(x, y);\n            y += v.height;\n        }\n        if (sv.visible) {\n            let x = 0;\n\n            sv.resizeByMeasured().layout();\n\n            switch (sm.position) {\n                default:\n                    switch (sm.align) {\n                        case Align.LEFT:\n                            break;\n                        case Align.RIGHT:\n                            x += w - sv.width;\n                            break;\n                        default:\n                            x += (w - sv.width) / 2;\n                            break;\n                    }\n                    break;\n            }\n\n            sv.translate(x, y);\n        }\n    }\n}\n\nclass LegendSectionView extends SectionView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    _legendView: LegendView;\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doInitChildren(doc: Document): void {\n        this.add(this._legendView = new LegendView(doc));\n    }\n\n    _doMeasure(doc: Document, chart: Chart, hintWidth: number, hintHeight: number, phase: number): ISize {\n        const sz = this._legendView.measure(doc, chart.legend, hintWidth, hintHeight, phase);\n        return sz;\n    }\n\n    protected _doLayout(): void {\n        this._legendView.resize(this.width, this.height);\n        this._legendView.layout();\n    }\n}\n\nclass AxisSectionView extends SectionView {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    axes: Axis[]; \n    views: AxisView[] = [];\n    isHorz: boolean;\n    isOpposite: boolean;\n    private _gap = 0;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, public dir: SectionDir) {\n        super(doc);\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    prepare(doc: Document, axes: Axis[], guideContainer: AxisGuideContainer, frontGuideContainer: AxisGuideContainer): void {\n        const views = this.views;\n\n        while (views.length < axes.length) {\n            const v = new AxisView(doc);\n\n            this.add(v);\n            views.push(v);\n        }\n        while (views.length > axes.length) {\n            views.pop().remove();\n        }\n\n        // 추측 계산을 위해 모델을 미리 설정할 필요가 있다.\n        views.forEach((v, i) => {\n            v.model = axes[i];\n            v.prepareGuides(doc, guideContainer, frontGuideContainer);\n        });\n\n        this.axes = axes;\n        if (this.visible = views.length > 0) {\n            this.isHorz = views[0].model._isHorz;\n            this._gap = views[0].model.chart.getAxesGap();  \n        }\n    }\n\n    /**\n     * 수평 축들의 높이를 기본 설정에 따라 추측한다.\n     */\n    checkHeights(doc: Document, width: number, height: number): number {\n        let h = 0;\n\n        this.views.forEach(view => {\n            h += view.checkHeight(doc, width, height);\n        });\n        return h + (this.views.length - 1) * this._gap;\n    }\n\n    /**\n     * 수직 축들의 너비를 기본 설정에 따라 추측한다.\n     */\n    checkWidths(doc: Document, width: number, height: number): number {\n        let w = 0;\n\n        this.views.forEach(view => {\n            w += view.checkWidth(doc, width, height);\n        });\n        return w + (this.views.length - 1) * this._gap;\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doMeasure(doc: Document, chart: Chart, hintWidth: number, hintHeight: number, phase: number): ISize {\n        const axes = this.axes;\n        let w = 0;\n        let h = 0;\n\n        this.views.forEach((v, i) => {\n            const sz = v.measure(doc, axes[i], hintWidth, hintHeight, phase);\n\n            v.setAttr('xy', axes[i]._isX ? 'x' : 'y');\n            w += sz.width;\n            h += sz.height;\n        })\n        if (this.isHorz) {\n            h += (this.views.length - 1) * this._gap;\n        } else {\n            w += (this.views.length - 1) * this._gap;\n        }\n        return Size.create(w, h);\n    }\n\n    protected _doLayout(): void {\n        const w = this.width;\n        const h = this.height;\n        let p = 0;\n\n        this.views.forEach(v => {\n            let x: number;\n            let y: number;\n\n            if (this.isHorz) {\n                v.resize(w, v.mh);\n            } else {\n                v.resize(v.mw, h);\n            }\n            v.layout();\n\n            if (this.isHorz) {\n                v.translateY(this.dir === SectionDir.TOP ? h - p - v.mh : p);\n                p += v.mh + this._gap;\n            } else {\n                v.translateX(this.dir === SectionDir.RIGHT ? p : w - p - v.mw);\n                p += v.mw + this._gap;\n            }\n\n            v.move(x, y);\n        });\n    }\n}\n\nclass EmptyView extends GroupElement {\n}\n\nexport class ChartView extends RcElement {\n\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _model: Chart;\n    _inverted = false;   // bar 시리즈 계열이 포함되면 true, x축이 수직, y축이 수평으로 그려진다.\n\n    _emptyView: EmptyView;\n    private _titleSectionView: TitleSectionView;\n    private _legendSectionView: LegendSectionView;\n    private _bodyView: BodyView;\n    private _polarView: PolarBodyView;\n    private _currBody: BodyView;\n    private _axisSectionViews = new Map<SectionDir, AxisSectionView>();\n    private _tooltipView: TooltipView;\n    private _seriesClip: ClipElement;\n\n    private _org: IPoint;\n    private _plotWidth: number;\n    private _plotHeight: number;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document) {\n        super(doc, 'rct-chart');\n\n        Object.values(SectionDir).forEach(dir => {\n            if (isNumber(dir)) {\n                const v = new AxisSectionView(doc, dir);\n\n                this.add(v);\n                this._axisSectionViews.set(dir, v);\n            }\n        });\n\n        // plot 영역이 마지막이어야 line marker 등이 축 상에 표시될 수 있다.\n        this.add(this._currBody = this._bodyView = new BodyView(doc, this));\n\n        this.add(this._titleSectionView = new TitleSectionView(doc));\n        this.add(this._legendSectionView = new LegendSectionView(doc));\n        this.add(this._tooltipView = new TooltipView(doc));\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    titleView(): TitleView {\n        return this._titleSectionView.titleView;\n    }\n\n    subtitleView(): TitleView {\n        return this._titleSectionView.subtitleView;\n    }\n\n    bodyView(): BodyView {\n        return this._bodyView;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    measure(doc: Document, model: Chart, hintWidth: number, hintHeight: number, phase: number): void {\n        if (model && phase == 1) {\n            model.prepareRender();\n        }\n        \n        if (this.$_checkEmpty(doc, model, hintWidth, hintHeight)) {\n            return;\n        }\n\n        const m = this._model = model;\n        const polar = m._polar;\n        const legend = m.legend;\n        let w = hintWidth;\n        let h = hintHeight;\n        let sz: ISize;\n\n        this._inverted = model.isInverted();\n        \n        // titles\n        sz = this._titleSectionView.measure(doc, m, w, h, phase);\n        h -= sz.height;\n\n        // legend\n        if (this._legendSectionView.visible = (legend.isVisible())) {\n            sz = this._legendSectionView.measure(doc, m, w, h, phase);\n\n            switch (legend.position) {\n                case LegendPosition.TOP:\n                case LegendPosition.BOTTOM:\n                    h -= sz.height;\n                    break;\n                case LegendPosition.RIGHT:\n                case LegendPosition.LEFT:\n                    w -= sz.width;\n                    break;\n            }\n        }\n\n        this.$_prepareBody(doc, polar);\n        if (polar) {\n            this.$_measurePolar(doc, m, w, h, 1);\n        } else {\n            this.$_measurePlot(doc, m, w, h, 1);\n        }\n    }\n\n    layout(): void {\n        const m = this._model;\n        let w = this.width;\n        let h = this.height;\n\n        if (this._emptyView?.visible) {\n            this._emptyView.resize(w, h);\n            return;\n        }\n\n        const polar = m.options.polar;\n        const legend = m.legend;\n        let x = 0;\n        let y = 0;\n\n        // title\n        const vTitle = this._titleSectionView;\n        let hTitle = 0;\n        const yTitle = y;\n\n        if (vTitle.visible) {\n            vTitle.resizeByMeasured();\n            h -= hTitle = vTitle.height;\n        }\n\n        // body\n        y = this.height;\n\n        // legend\n        const vLegend = this._legendSectionView;\n        let hLegend = 0;\n        let wLegend = 0;\n        let yLegend: number;\n        let xLegend: number;\n\n        if (vLegend.visible) {\n            vLegend.resizeByMeasured().layout();\n            hLegend = vLegend.height;\n            wLegend = vLegend.width;\n\n            switch (legend.position) {\n                case LegendPosition.TOP:\n                    yLegend = hTitle;\n                    h -= hLegend;\n                    break;\n\n                case LegendPosition.BOTTOM:\n                    h -= hLegend;\n                    yLegend = this.height - hLegend;\n                    y -= hLegend;\n                    break;\n    \n                case LegendPosition.RIGHT:\n                    w -= wLegend;\n                    xLegend = this.width - wLegend;\n                    break;\n\n                case LegendPosition.LEFT:\n                    w -= wLegend;\n                    x += wLegend;\n                    xLegend = 0;\n                    break;\n            }\n        }\n\n        // axes\n        let asv: AxisSectionView;\n        let axisMap: Map<SectionDir, AxisSectionView>;\n\n        if (!polar) {\n            axisMap = new Map(this._axisSectionViews);\n    \n            HORZ_SECTIONS.forEach(dir => {\n                if ((asv = axisMap.get(dir)) && asv.visible) {\n                    w -= asv.mw;\n                } else {\n                    axisMap.delete(dir);\n                }\n            });\n            VERT_SECTIONS.forEach(dir => {\n                if ((asv = axisMap.get(dir)) && asv.visible) {\n                    h -= asv.mh;\n                } else {\n                    axisMap.delete(dir);\n                }\n            });\n    \n            if ((asv = axisMap.get(SectionDir.LEFT)) && asv.visible) {\n                asv.resize(asv.mw, h);\n                asv.layout();\n                x += asv.mw;\n            }\n            if ((asv = axisMap.get(SectionDir.RIGHT)) && asv.visible) {\n                asv.resize(asv.mw, h);\n                asv.layout();\n            }\n            if ((asv = axisMap.get(SectionDir.BOTTOM)) && asv.visible) {\n                asv.resize(w, asv.mh);\n                asv.layout();\n                y -= asv.mh;\n            }\n            if ((asv = axisMap.get(SectionDir.TOP)) && asv.visible) {\n                asv.resize(w, asv.mh);\n                asv.layout();\n            }\n        }\n\n        const org = this._org = Point.create(x, y);\n\n        this._plotWidth = w;\n        this._plotHeight = h;\n\n        if (!polar) {\n            if (asv = axisMap.get(SectionDir.LEFT)) {\n                asv.translate(org.x - asv.mw, org.y - asv.height);\n            }\n            if (asv = axisMap.get(SectionDir.RIGHT)) {\n                asv.translate(org.x + w, org.y - asv.height);\n            }\n            if (asv = axisMap.get(SectionDir.BOTTOM)) {\n                asv.translate(org.x, org.y);\n            }\n            if (asv = axisMap.get(SectionDir.TOP)) {\n                asv.translate(org.x, org.y - h - asv.height);\n            }\n        }\n\n        // body\n        const hPlot = this._plotHeight;\n        const wPlot = this._plotWidth;\n\n        x = org.x;\n        y = org.y - hPlot;\n\n        this._currBody.resize(wPlot, hPlot);\n        this._currBody.layout().translate(x, y);\n\n        // title\n        if (vTitle.visible) {\n            vTitle.layout(this._currBody.getRect()).translate(x, yTitle);\n        }\n\n        // legend\n        if (vLegend.visible) {\n            if (legend.position === LegendPosition.PLOT) {\n                if (!isNaN(+legend.left)) {\n                    x += +legend.left;\n                } else if (!isNaN(+legend.right)) {\n                    x += wPlot - wLegend - +legend.right;\n                } else {\n                    x += (wPlot - wLegend) / 2;\n                }\n\n                if (!isNaN(+legend.top)) {\n                    y += +legend.top;\n                } else if (!isNaN(+legend.bottom)) {\n                    y += hPlot - hLegend - +legend.bottom;\n                } else {\n                    y += (hPlot - hLegend) / 2;\n                }\n            } else if (!isNaN(yLegend)) {\n                x += (w - wLegend) / 2;\n                y = yLegend;\n            } else {\n                x = xLegend;\n                y = y + (h - hLegend) / 2;\n            }\n            vLegend.translate(x, y);\n        }\n\n        this._tooltipView.hide(true, false);\n    }\n\n    showTooltip(series: Series, point: DataPoint): void {\n        const x = point.xPos + this._bodyView.tx;\n        const y = point.yPos + this._bodyView.ty;\n\n        this._tooltipView.show(series.tooltip, point, x, y, true);\n    }\n\n    hideTooltip(): void {\n        this._tooltipView.hide(false, true);\n    }\n\n    legendByDom(dom: Element): LegendItem {\n        return this._legendSectionView._legendView.legendByDom(dom);\n    }\n\n    seriesByDom(dom: Element): SeriesView<Series> {\n        return this._bodyView.seriesByDom(dom);\n    }\n\n    clipSeries(view: RcElement, x: number, y: number, w: number, h: number): void {\n        if (view) {\n            if (this._model.inverted) {\n                this._seriesClip.setBounds(0, -w, h, w);\n            } else {\n                this._seriesClip.setBounds(0, 0, w, h);\n            }\n            view.setClip(this._seriesClip);\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    protected _doAttached(parent: RcElement): void {\n        this._seriesClip = this.control.clipBounds();\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n    private $_checkEmpty(doc: Document, m: Chart, hintWidth: number, hintHeight: number): boolean {\n        if (m && !m.isEmpty()) {\n            if (this._emptyView) {\n                this._emptyView.visible = false;\n            }\n        } else {\n            if (!this._emptyView) {\n                this._emptyView = new EmptyView(doc);\n            }\n            this._emptyView.resize(hintWidth, hintHeight);\n            return true;\n        }\n    }\n\n    private $_prepareBody(doc: Document, polar: boolean): void {\n        if (polar) {\n            if (!this._polarView) {\n                this._polarView = new PolarBodyView(doc, this);\n                this.insertChild(this._polarView, this._bodyView);\n            }\n            this._currBody = this._polarView;\n            this._bodyView?.setVisible(false);\n            this._polarView.setVisible(true);\n        } else {\n            this._polarView?.setVisible(false);\n            this._bodyView.setVisible(true);\n            this._currBody = this._bodyView;\n        }\n    }\n\n    private $_prepareAxes(doc: Document, m: Chart): void {\n        const guideContainer = this._currBody._guideContainer;\n        const frontGuideContainer = this._currBody._frontGuideContainer;\n        const need = !m.options.polar && m.needAxes();\n        const map = this._axisSectionViews;\n\n        for (const dir of map.keys()) {\n            const v = map.get(dir);\n\n            if (need) {\n                v.prepare(doc, m.getAxes(dir), guideContainer, frontGuideContainer);\n            } else {\n                v.visible = false;\n            }\n        }\n    }\n\n    private $_measurePlot(doc: Document, m: Chart, w: number, h: number, phase: number): void {\n        const map = this._axisSectionViews;\n        const wSave = w;\n        const hSave = h;\n\n        // guides - axis view에서 guide view들을 추가할 수 있도록 초기화한다.\n        this._bodyView.prepareGuideContainers();\n\n        // axes\n        this.$_prepareAxes(doc, m);\n\n        // 아래 checkWidth를 위해 tick을 생성한다.\n        m.layoutAxes(w, h, this._inverted, phase);\n\n        w -= map.get(SectionDir.LEFT).checkWidths(doc, w, h);\n        w -= map.get(SectionDir.RIGHT).checkWidths(doc, w, h);\n        h -= map.get(SectionDir.BOTTOM).checkHeights(doc, w, h);\n        h -= map.get(SectionDir.TOP).checkHeights(doc, w, h);\n\n        // 조정된 크기로 tick을 다시 생성한다.\n        m.layoutAxes(w, h, this._inverted, phase);\n\n        // axes\n        for (const dir of map.keys()) {\n            const asv = map.get(dir);\n            \n            if (asv.visible) {\n                asv.measure(doc, m, w, h, phase);\n            }\n        }\n\n        // 조정된 크기로 tick을 다시 생성한다 2.\n        w = wSave;\n        h = hSave;\n        for (const dir of map.keys()) {\n            const asv = map.get(dir);\n            \n            if (asv.visible) {\n                if (dir === SectionDir.LEFT || dir === SectionDir.RIGHT) {\n                    w -= asv.mw;\n                } else if (dir === SectionDir.BOTTOM || dir === SectionDir.TOP) {\n                    h -= asv.mh;\n                }\n            }\n        }\n        m.layoutAxes(w, h, this._inverted, phase);\n\n        for (const dir of map.keys()) {\n            const asv = map.get(dir);\n            \n            if (asv.visible) {\n                asv.measure(doc, m, w, h, phase);\n            }\n        }\n\n        // 계산된 axis view에 맞춰 tick 위치를 조정한다.\n        w = wSave;\n        h = hSave;\n        for (const dir of map.keys()) {\n            const asv = map.get(dir);\n            \n            if (asv.visible) {\n                if (dir === SectionDir.LEFT || dir === SectionDir.RIGHT) {\n                    w -= asv.mw;\n                } else if (dir === SectionDir.BOTTOM || dir === SectionDir.TOP) {\n                    h -= asv.mh;\n                }\n            }\n        }\n        m.calcAxesPoints(w, h, this._inverted);\n\n        // body\n        this._bodyView.measure(doc, m.body, w, h, phase);\n    }\n\n    private $_measurePolar(doc: Document, m: Chart, w: number, h: number, phase: number): void {\n        const body = m.body;\n        const rd = body.getSize(w, h) / 2;\n\n        // axes\n        this.$_prepareAxes(doc, m);\n        m.layoutAxes(Math.PI * 2, rd, false, phase);\n\n        // body\n        this._polarView.measure(doc, m.body, w, h, phase);\n    }\n}","////////////////////////////////////////////////////////////////////////////////\n// ChartControl.ts\n// 2023. 05. 28. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2023 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { RcControl } from \"./common/RcControl\";\nimport { IRect } from \"./common/Rectangle\";\nimport { ImageElement } from \"./common/impl/ImageElement\";\nimport { RectElement } from \"./common/impl/RectElement\";\nimport { Chart, IChartEventListener } from \"./model/Chart\";\nimport { ChartItem } from \"./model/ChartItem\";\nimport { Series } from \"./model/Series\";\nimport { ChartPointerHandler } from \"./tool/PointerHandler\";\nimport { ChartView } from \"./view/ChartView\";\n\nexport class ChartControl extends RcControl implements IChartEventListener {\n\n    //-------------------------------------------------------------------------\n    // consts\n    //-------------------------------------------------------------------------\n    //-------------------------------------------------------------------------\n    // fields\n    //-------------------------------------------------------------------------\n    private _model: Chart;\n    private _chartView: ChartView;\n\n    //-------------------------------------------------------------------------\n    // constructor\n    //-------------------------------------------------------------------------\n    constructor(doc: Document, container: string | HTMLDivElement) {\n        super(doc, container);\n\n        this.addElement(this._chartView = new ChartView(doc));\n\n        this.setPointerHandler(new ChartPointerHandler(this));\n    }\n\n    //-------------------------------------------------------------------------\n    // IChartEventListener\n    //-------------------------------------------------------------------------\n    onVisibleChanged(chart: Chart, item: ChartItem): void {\n        if (item instanceof Series) {\n            this.invalidateLayout();\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // properties\n    //-------------------------------------------------------------------------\n    /**\n     * chart model.\n     */\n    get model(): Chart {\n        return this._model;\n    }\n    set model(value: Chart) {\n        if (value !== this._model) {\n            this._model && this._model.removeListener(this);\n            this._model = value;\n            this._model && this._model.addListener(this);\n            this.invalidateLayout();\n        }\n    }\n\n    chartView(): ChartView {\n        return this._chartView;\n    }\n\n    //-------------------------------------------------------------------------\n    // methods\n    //-------------------------------------------------------------------------\n    refresh(): void {\n        this.invalidateLayout();\n    }\n\n    update(config: any, loadAnimation = false): void {\n        this.loaded = !loadAnimation; \n        this.model = new Chart(config);\n    }\n\n    //-------------------------------------------------------------------------\n    // overriden members\n    //-------------------------------------------------------------------------\n    useImage(src: string): void {\n    }\n\n    protected _doRender(bounds: IRect): void {\n        this.clearTemporaryDefs();\n\n        this._chartView.measure(this.doc(), this._model, bounds.width, bounds.height, 1);\n        this._chartView.resize(bounds.width, bounds.height);\n        this._chartView.layout();\n    }\n\n    protected _doRenderBackground(elt: HTMLDivElement, width: number, height: number): void {\n        if (this._model) {\n            Object.assign(elt.style, this._model.options.style);\n        }\n    }\n\n    //-------------------------------------------------------------------------\n    // internal members\n    //-------------------------------------------------------------------------\n}","////////////////////////////////////////////////////////////////////////////////\n// main.ts\n// 2021. 11. 25. created by woori\n// -----------------------------------------------------------------------------\n// Copyright (c) 2021 Wooritech Inc.\n// All rights reserved.\n////////////////////////////////////////////////////////////////////////////////\n\nimport { Globals } from \"./globals\";\n\nexport const getVersion = Globals.getVersion;\nexport const setDebugging = Globals.setDebugging;\n// export const createChartControl = Globals.createChartControl;\n// export const loadChart = Globals.loadChart;\nexport const createChart = Globals.createChart;\n\nexport { ChartControl } from \"./ChartControl\";\nexport { Chart } from \"./model/Chart\";"],"names":["series_types","BarElement","MarkerView","StickView"],"mappings":"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"}