////////////////////////////////////////////////////////////////////////////////
// ShapeAnnotation.ts
// 2023. 11. 16. created by woori
// -----------------------------------------------------------------------------
// Copyright (c) 2023 Wooritech Inc.
// All rights reserved.
////////////////////////////////////////////////////////////////////////////////

import { isString } from "../../common/Common";
import { Shape } from "../../common/impl/SvgShape";
import { SizableAnnotation } from "../Annotation";
import { IChart } from "../Chart";

/**
 * Shape Annotation 모델.
 * 
 * @config chart.annotation[type=shape]
 */
export class ShapeAnnotation extends SizableAnnotation {

    //-------------------------------------------------------------------------
    // consts
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // static members
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // property fields
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // fields
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // constructor
    //-------------------------------------------------------------------------
    constructor(chart: IChart) {
        super(chart);

        this.width = this.height = 64;
    }

    //-------------------------------------------------------------------------
    // properties
    //-------------------------------------------------------------------------
    '@config width' = 64;
    '@config height' = 64;

    /**
     * Shape 종류.
     * 
     * @config 
     */
    shape: Shape = Shape.SQUARE;
    /**
     * Shape path.
     * 이 속성이 지정되면 {@link shape}는 무시된다.
     */
    path: string;

    //-------------------------------------------------------------------------
    // methods
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // overriden members
    //-------------------------------------------------------------------------
    _type(): string {
        return 'shape';
    }

    protected _doLoadSimple(source: any): boolean {
        if (isString(source)) {
            this.shape = source as any;
            return true;
        }
        return super._doLoadSimple(source);
    }
}
