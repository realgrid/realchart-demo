////////////////////////////////////////////////////////////////////////////////
// Gauge.ts
// 2023. 09. 25. created by woori
// -----------------------------------------------------------------------------
// Copyright (c) 2023 Wooritech Inc.
// All rights reserved.
////////////////////////////////////////////////////////////////////////////////

import { pickProp } from "../../common/Common";
import { IPercentSize, RtPercentSize, calcPercent, parsePercentSize } from "../../common/Types";
import { IChart } from "../Chart";
import { Widget } from "../Widget";

/**
 * 게이지 모델.
 */
export abstract class GaugeBase extends Widget {

    //-------------------------------------------------------------------------
    // consts
    //-------------------------------------------------------------------------
    static readonly DEF_SIZE = '80%';

    //-------------------------------------------------------------------------
    // fields
    //-------------------------------------------------------------------------
    private _sizeDim: IPercentSize;

    //-------------------------------------------------------------------------
    // properties
    //-------------------------------------------------------------------------
    /**
     * 게이지 본체의 크기.
     * <br>
     * 픽셀 크기나 차지할 수 있는 전체 크기에 대한 상대적 크기로 지정할 수 있다.
     * 
     * @config
     */
    size: RtPercentSize = Gauge.DEF_SIZE;
    /**
     * 최소값.
     * 
     * @config
     */
    minValue = 0;
    /**
     * 최대값.
     * 
     * @config
     */
    maxValue = 100;
    /**
     * 현재값.
     * 
     * @config
     */
    value = 0;

    //-------------------------------------------------------------------------
    // methods
    //-------------------------------------------------------------------------
    getSize(plotWidth: number, plotHeight: number): number {
        return calcPercent(this._sizeDim, Math.min(plotWidth, plotHeight));
    }

    //-------------------------------------------------------------------------
    // overriden members
    //-------------------------------------------------------------------------
    protected _doLoad(src: any): void {
        super._doLoad(src);

        this._sizeDim = parsePercentSize(pickProp(this.size, Gauge.DEF_SIZE), true);
    }
}

export class GaugeCollection {

    //-------------------------------------------------------------------------
    // fields
    //-------------------------------------------------------------------------
    readonly chart: IChart;
    private _map: {[name: string]: GaugeBase} = {};
    private _items: GaugeBase[] = [];
    private _visibles: GaugeBase[] = [];
}

/**
 * Circle gauge.
 * 
 * @config chart.widget[type=gauge]
 */
export class Gauge extends GaugeBase {

    //-------------------------------------------------------------------------
    // fields
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // properties
    //-------------------------------------------------------------------------
    /**
     * @config
     */
    startAngle = 0;

    //-------------------------------------------------------------------------
    // methods
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // overriden members
    //-------------------------------------------------------------------------
}
