////////////////////////////////////////////////////////////////////////////////
// Theme.ts
// 2023. 09. 09. created by woori
// -----------------------------------------------------------------------------
// Copyright (c) 2023 Wooritech Inc.
// All rights reserved.
////////////////////////////////////////////////////////////////////////////////

import { isArray, isObject } from "../common/Common";
import { AssetCollection } from "./Asset";
import { IChart } from "./Chart";
import { ChartItem } from "./ChartItem";

export enum PaletteMode {
    NORMAL = 'normal',
    MIXED = 'mixed',
    RANDOM = 'random'
}

export class Palette extends ChartItem {

    //-------------------------------------------------------------------------
    // consts
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // property fields
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // fields
    //-------------------------------------------------------------------------
}

/**
 * 1. 먼저 css에 {@link name} 속성과 동일한 이름의 theme 속성들을 설정해야 한다.
 * 2. gradient가 필요하면 {@link assets}에 등록한다.
 */
export class Theme extends ChartItem {

    //-------------------------------------------------------------------------
    // consts
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // property fields
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // fields
    //-------------------------------------------------------------------------
    assets = new AssetCollection();

    //-------------------------------------------------------------------------
    // constructor
    //-------------------------------------------------------------------------
    constructor(source: any) {
        super(null);

        source && this.load(source);
    }

    //-------------------------------------------------------------------------
    // properties
    //-------------------------------------------------------------------------
    name: string;
    palette: string;

    //-------------------------------------------------------------------------
    // methods
    //-------------------------------------------------------------------------
    activate(chart: IChart): void {
    }

    deactivate(chart: IChart): void {
    }

    //-------------------------------------------------------------------------
    // overriden members
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    // internal members
    //-------------------------------------------------------------------------
    protected _doLoadProp(prop: string, value: any): boolean {
        if (prop === 'assets') {
            this.assets.load(value);
            return true;
        }
    }
}

export class ThemeCollection {

    //-------------------------------------------------------------------------
    // fields
    //-------------------------------------------------------------------------
    private _items: Theme[] = [];

    //-------------------------------------------------------------------------
    // methods
    //-------------------------------------------------------------------------
    load(source: any): void {
        this._items = [];

        if (isArray(source)) {
            source.forEach(src => {
                let item = this.$_loadItem(src);
                item && this._items.push(item);
            })
        } else if (isObject(source)) {
            let item = this.$_loadItem(source);
            item && this._items.push(item);
        }
    }

    //-------------------------------------------------------------------------
    // internal members
    //-------------------------------------------------------------------------
    private $_loadItem(src: any): Theme {
        if (isObject(src) && src.name) {
            return new Theme(src);
        }
    }
}